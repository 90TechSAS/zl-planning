{"version":3,"sources":["index.js","filters/filters/dayFilter.js","filters/filters/momentFilter.js","filters/filters/range.js","filters/filters/strFilter.js","services/services/absences.service.js","services/absences.service.js","services/services/color.service.js","services/services/configurationProvider.js","services/services/pause.service.js","services/services/position.service.js","directives/horizontal-scroll/directives/horizontal-scroll/horizontal-scroll.js","directives/drag-drop/directives/drag-drop/drag-drop.directive.js","directives/planning/directives/planning/planning.js","directives/planning/planning.js","directives/planning-day-block/directives/planning-day-block/planning-day.js","directives/planning-left-column/directives/planning-left-column/planning-left-column.js","directives/planning-line/directives/planning-line/planning-line.js","directives/planning-line/planning-line.js","directives/planning-top-row/directives/planning-top-row/planning-top-row.js","directives/planning-vertical-line/directives/planning-vertical-line/planning-vertical-line.js","directives/planning-vertical-line/planning-vertical-line.js","directives/planning-week-line/directives/planning-week-line/planning-week-line.js","template.js"],"names":["angular","module","window","filter","day","undefined","isNaN","parseInt","time","format","str","charAt","toUpperCase","slice","RangeFilter","operation","input","total","i","push","planningConfiguration","val","strings","_","moment","AbsenceService","parseAbsences","absences","interval","Array","isArray","Error","parsed","abs","range","start","end","overlaps","map","absence","isBefore","copy","isAfter","mergeRanges","_x","_again","ranges","r","index","Object","assign","any","range1","range2","reduced","reduce","acc","value","arr","next","toDate","min","max","self","this","extend","service","ColorService","getLuminance","c","g","b","rgbRegex","test","exec","color","substring","rgb","luma","$inject","provider","BASE_SIZE","MAX_PARALLEL","nothing_to_show","DAYS","parallelText","setParallelText","text","setBaseSize","size","setMaxParallel","number","setString","key","setDays","$get","absentTechnicianCallback","callback","PauseService","generateGradient","event","direction","parsePause","pauses","pause","pauseRange","pauseDuration","diff","percentage","totalDuration","before","totalRange","clone","subtract","length","endPercentage","startPercentage","v","style","pauseColor","invertColor","mapped","hex","indexOf","toString","padZero","len","zeros","join","PositionService","overlap","lines","maxParallelEvents","toRemove","doublecheck","pre","depth","each","elt","eltRange","line","eventList","technician","eventClone","cloneDeep","ScrollHorizontalDirective","$timeout","restrict","scope","scrollLeft","link","element","attributes","bind","e","wheelDelta","addClass","offsetWidth","directive","controller","controllerAs","bindToController","zlDrag","zlDrop","dragImage","document","createElement","el","addEventListener","preventDefault","draggable","height","clientHeight","zIndex","position","left","bottom","innerHTML","children","float","backgroundColor","width","clientWidth","Math","dataTransfer","effectAllowed","body","appendChild","setDragImage","querySelectorAll","remove","setData","JSON","stringify","dragDropCtrl","classList","add","stopPropagation","target","$apply","$data","parse","getData","$event","PlanningController","$scope","init","zoom","allowedDays","usableDays","sort","daysList","d","weekday","_dayStart","parseTime","dayStart","_dayEnd","dayEnd","h","sortedEvents","mode","_events","flatten","events","split","groupBy","addMissingDays","dayField","mapValues","eventsByTechnician","addMissingEntities","entities","keys","groupedEvents","startOf","unix","k","result","date","hour","minute","m","second","stop","days","j","isEmpty","includes","found","find","group","obj","sortBy","firstDay","hours","minutes","seconds","month","decallage","isoWeekday","oneDayEvents","dayOfYear","floor","multipleDaysEvents","splitByWeeks","endWeek","endOf","isoWeek","startWeek","isoWeeksInYear","weekInMonth","unshift","times","daysInMonth","n","displayedDaysCount","first_event","startNextDay","endThisDay","continuedAfter","second_event","continuedBefore","concat","st","year","firstEvent","secondEvent","some","isBetween","startingDay","newDate","a","dateA","dateFromString","dateB","getEvents","isToday","week","isInDayRange","currentTimeToPixels","totalMinutes","isCurrent","isSame","clickCallbackWrapper","opts","mom","entity","Date","clickCallback","$moment","$entity","clickWeekEvent","dropEvent","config","doy","dropCallback","dateSplitted","$onInit","$watchCollection","PlanningDirective","templateUrl","entitiesPauses","eventCallback","dayCallback","weekEventCallback","action","PlanningDayController","data","absents","isDefined","array","hasOverlap","within","absentsString","PlanningDayDirective","replace","dayCtrl","PlanningLeftColumnController","forEach","column","PlanningLineController","setAbsenceTooltip","state","absenceType","confirmation","extractMinutesFromEvent","contains","offsetX","getAttribute","checkAbsence","$hour","$minutes","clickEvent","currentId","preEvent","postEvent","breaks","SECONDS_BY_DAY","SLIDER_WIDTH","valueOf","toremove","difference","id","title","tooltip","top","round","s","totalWidth","text-align","background","border-top","border-bottom","border-left","generatePostEvent","post","safeParse","get","createBreaks","calcWidth","compact","p","name","_absences","postPercentage","arguments","newValue","oldValue","console","log","string","PlanningLineDirective","topRowDirective","PlanningTopRowController","calcMargin","half","$watchGroup","$filter","offsetY","AVAILABLE_SPACE","calculateContainerHeight","containerHeight","displayedEvents","positioning","setStyle","calculateLeft","calculateWidth","ceil","run","$templateCache","put"],"mappings":"AAAA,cAAC,SAAWA,GAGVA,EACGC,OAAO,mBAAoB,UAAW,mBACxCC,OAAOF,SCLT,SAAWA,GAEVA,EACGC,OAAO,mBACPE,OAAO,OAAQ,WACd,MAAO,UAAUC,GACf,MAAYC,UAARD,GAA6B,OAARA,GAAgBE,MAAMF,IAAQG,SAASH,GAAO,EAAU,IACzE,QAAS,QAAS,WAAY,QAAS,WAAY,SAAU,YAAYA,QAGtFF,OAAOF,SCVT,SAAWA,GAGVA,EACGC,OAAO,mBACPE,OAAO,SAAU,WAChB,MAAO,UAAUK,EAAMC,GACrB,MAAOD,GAAKC,OAAOA,MAGtBN,OAAO,aAAc,WACpB,MAAO,UAAUO,GACf,MAAKA,GACEA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAD9B,OAItBX,OAAOF,SCRT,SAAWA,GAYV,QAASc,KAOP,GAAIC,GAAY,SAAUC,EAAOC,GAE/BA,EAAQV,SAASU,EAGjB,KAAK,GAAIC,GAAI,EAAGA,EAAID,EAAOC,IACzBF,EAAMG,KAAKD,EAIb,OAAOF,GAMT,OAAOD,GAhCTf,EACGC,OAAO,mBACPE,OAAO,QAASW,IAgClBZ,OAAOF,SC7CT,SAAWA,GAEVA,EACGC,OAAO,mBACPE,OAAO,eAAgB,wBAAyB,SAAUiB,GACzD,MAAO,UAAUC,GACf,MAAOD,GAAsBE,QAAQD,QAG1CnB,OAAOF,SCTT,SAAWA,EAASuB,EAAGC,GAKtB,QAASC,KAQP,QAASC,GAAeC,EAAUC,GAChC,IAAKC,MAAMC,QAAQF,GACjB,KAAM,IAAIG,OAAM,mBAElB,IAAIC,GAASL,EAASxB,OAAO,SAAU8B,GACrC,MAAOT,GAAOU,MAAMD,EAAIE,MAAOF,EAAIG,KAAKC,SAASb,EAAOU,MAAMN,EAAS,GAAIA,EAAS,OACnFU,IAAI,SAAUC,GAOf,MANIf,GAAOe,EAAQJ,OAAOK,SAAShB,EAAOxB,EAAQyC,KAAKb,EAAS,QAC9DW,EAAQJ,MAAQP,EAAS,IAEvBJ,EAAOe,EAAQH,KAAKM,QAAQlB,EAAOxB,EAAQyC,KAAKb,EAAS,QAC3DW,EAAQH,IAAMR,EAAS,IAElBW,GAGT,OAAOI,GAAYX,GAGrB,QAASW,GAAWC,GCIP,IAFX,GAAIC,IAAS,EAEKA,GDJU,CCK1B,GDLkBC,GAAMF,CCMxBC,IAAS,CDLX,IAAIJ,GAAOK,EAAOR,IAAI,SAAUS,EAAGC,GAEjC,MADAD,GAAEC,MAAQA,EACHC,OAAOC,UAAWH,GAAIC,MAAOA,KAItC,KAAKzB,EAAE4B,IAAIV,EAAM,SAAUW,GACzB,MAAO7B,GAAE4B,IAAIV,EAAM,SAAUY,GAC3B,MAAID,GAAOJ,QAAUK,EAAOL,OAGrBX,EAASe,EAAQC,OAG1B,MAAOP,EAET,IAAIQ,GAAUR,EAAOS,OAAO,SAAUC,EAAKC,EAAOT,EAAOU,GACvD,GAAIC,GAAOD,EAAIV,EAAQ,EACvB,OAAKW,IAASF,GAGVpB,GAEAF,MAAOX,EAAOxB,EAAQyC,KAAKgB,EAAMtB,QAAQyB,SACzCxB,IAAKZ,EAAOxB,EAAQyC,KAAKgB,EAAMrB,MAAMwB,WAErCzB,MAAOX,EAAOxB,EAAQyC,KAAKkB,EAAKxB,QAAQyB,SACxCxB,IAAKZ,EAAOxB,EAAQyC,KAAKkB,EAAKvB,MAAMwB,YAEtCJ,EAAIrC,MACFgB,MAAOX,EAAOqC,IACZrC,EAAOxB,EAAQyC,KAAKgB,EAAMtB,QAC1BX,EAAOxB,EAAQyC,KAAKkB,EAAKxB,SAE3BC,IAAKZ,EAAOsC,IACVtC,EAAOxB,EAAQyC,KAAKgB,EAAMrB,MAC1BZ,EAAOxB,EAAQyC,KAAKkB,EAAKvB,SAIxBoB,GArBEA,MCwBTZ,GDAiBU,ECCjBT,GAAS,ED5CPJ,EAgBAa,EAAOjD,QA8Bb,QAASgC,GAAUe,EAAQC,GACzB,MAAO7B,GAAOU,MAAMkB,EAAOjB,MAAOiB,EAAOhB,KAAKC,SAASb,EAAOU,MAAMmB,EAAOlB,MAAOkB,EAAOjB,MA1E3F,GAAI2B,GAAOC,IACXzC,GAAE0C,OAAOF,GAGPrC,cAAeA,IARnB1B,EAAQC,OAAO,mBACZiE,QAAQ,iBAAkBzC,IAiF5BvB,OAAOF,QAASE,OAAOqB,EAAGrB,OAAOsB,QEpFnC,SAAWxB,EAASuB,EAAGC,GAStB,QAAS2C,KAaP,QAASC,GAAcC,GACrBA,EAAIA,GAAK,SACT,IAAItB,GAAGuB,EAAGC,EACNC,EAAW,sCACf,IAAIA,EAASC,KAAKJ,GAAG,CACjB,GAAIK,GAAOF,EAASE,KAAKL,EACxBtB,GAAIxC,SAASmE,EAAK,IAClBJ,EAAI/D,SAASmE,EAAK,IAClBH,EAAIhE,SAASmE,EAAK,QAChB,CACL,GAAIC,GAAQN,EAAEO,UAAU,GACpBC,EAAMtE,SAASoE,EAAO,GAC1B5B,GAAI8B,GAAQ,GAAM,IAClBP,EAAIO,GAAQ,EAAK,IACjBN,EAAIM,GAAQ,EAAK,IAGnB,GAAIC,GAAO,MAAS/B,EAAI,MAASuB,EAAI,MAASC,CAE9C,OAAOO,GA/BT,GAAIf,GAAOC,IAEXzC,GAAE0C,OAAOF,GACPK,aAAcA,IAVlBpE,EACGC,OAAO,mBACPiE,QAAQ,eAAgBC,GAE3BA,EAAaY,YAsCb7E,OAAOF,QAASE,OAAOqB,EAAGrB,OAAOsB,QC7ClC,SAAWxB,GAEVA,EAAQC,OAAO,mBACZ+E,SAAS,wBAAyB,WACjC,GAAIjB,GAAOC,IAEXD,GAAKkB,UAAY,GACjBlB,EAAKmB,aAAe,EACpBnB,EAAKzC,SACH6D,gBAAiB,mBAGnBpB,EAAKqB,MAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/BrB,EAAKsB,aAAe,iBAEpBrB,KAAKsB,gBAAkB,SAAUC,GAC/BxB,EAAKsB,aAAe,GAAKE,GAG3BvB,KAAKwB,YAAc,SAAUC,GAC3B1B,EAAKkB,UAAYQ,GAEnBzB,KAAK0B,eAAiB,SAAUC,GAC9B5B,EAAKmB,aAAeS,GAGtB3B,KAAK4B,UAAY,SAAUC,EAAKpC,GAC9BM,EAAKzC,QAAQuE,GAAOpC,GAGtBO,KAAK8B,QAAU,SAAUrC,GACvBM,EAAKqB,KAAO3B,GAGdO,KAAK+B,MAAQ,WACX,OACEzE,QAASyC,EAAKzC,QACd2D,UAAWlB,EAAKkB,UAChBC,aAAcnB,EAAKmB,aACnBG,aAActB,EAAKsB,aACnBD,KAAMrB,EAAKqB,KACXY,yBAA0B,SAAUC,GAClCA,WAKV/F,OAAOF,SChDR,SAAWA,EAASuB,EAAGC,GAOtB,QAAS0E,GAAc/B,GASrB,QAASgC,GAAkBC,EAAOC,GAQhC,QAASC,GAAYC,GACnB,MAAOhF,GAAEe,IAAIiE,EAAQ,SAAUC,GAC7B,GAAIrE,GAAQiE,EAAMjE,MAAMO,QAAQ8D,EAAMrE,OAASiE,EAAMjE,MAAQqE,EAAMrE,MAC/DC,EAAMgE,EAAMhE,IAAII,SAASgE,EAAMpE,KAAOgE,EAAMhE,IAAMoE,EAAMpE,IACxDqE,EAAajF,EAAOU,MAAMC,EAAOC,GACjCsE,EAAgBD,EAAWE,KAAK,gBAChCC,EAAaF,EAAgBG,EAAgB,IAC7CC,EAASC,EAAWC,OAExB,IADAF,EAAOG,SAASR,IACXK,EAAOI,OACV,OAAQhF,MAAOuE,EAAYU,cAAe,IAAKC,gBAAiB,EAElE,IAAIC,IAAKP,EAAO,GAAGH,KAAK,iBAAmBE,GAAiBA,EAAgB,GAC5E,QAAQ3E,MAAOuE,EAAYU,cAAeP,EAAaS,EAAGD,gBAAiBC,KApB/E,GAAI1C,GAAQyB,EAAMkB,MAAM,oBACpBC,EAAaC,EAAY7C,GACzBxC,EAAQiE,EAAMjE,MACdC,EAAMgE,EAAMhE,IACZ2E,EAAavF,EAAOU,MAAMC,EAAOC,GACjCyE,EAAgBE,EAAWJ,KAAK,gBAmBhCc,EAASnB,EAAWF,EAAMG,QAE1BjD,EAAU/B,EAAEgC,OAAOkE,EAAQ,SAAUjE,EAAKtB,GAC5C,MAAOsB,GAAM,KAAOmB,EAAQ,IAAMzC,EAAMkF,gBAAkB,MAAQG,EAAa,IAAMrF,EAAMkF,gBAAkB,MAAQG,EAAa,IAAMrF,EAAMiF,cAAgB,MAAQxC,EAAQ,IAAMzC,EAAMiF,cAAgB,KACzM,mBAAqBd,EAAY,KAAO1B,EAG3C,OADArB,IAAW,KAAOqB,EAAQ,SAI5B,QAAS6C,GAAaE,GAQpB,GAPyB,IAArBA,EAAIC,QAAQ,OACdD,EAAMA,EAAI7G,MAAM,IAGC,IAAf6G,EAAIR,SACNQ,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAEtC,IAAfA,EAAIR,OACN,KAAM,IAAInF,OAAM,qBAGlB,IAAIgB,IAAK,IAAMxC,SAASmH,EAAI7G,MAAM,EAAG,GAAI,KAAK+G,SAAS,IACrDtD,GAAK,IAAM/D,SAASmH,EAAI7G,MAAM,EAAG,GAAI,KAAK+G,SAAS,IACnDrD,GAAK,IAAMhE,SAASmH,EAAI7G,MAAM,EAAG,GAAI,KAAK+G,SAAS,GAErD,OAAO,IAAMC,EAAQ9E,GAAK8E,EAAQvD,GAAKuD,EAAQtD,GAGjD,QAASsD,GAASnH,EAAKoH,GACrBA,EAAMA,GAAO,CACb,IAAIC,GAAQ,GAAIlG,OAAMiG,GAAKE,KAAK,IAChC,QAAQD,EAAQrH,GAAKG,OAAOiH,GAjE9B,GAAI/D,GAAOC,IAEXzC,GAAE0C,OAAOF,GAGPoC,iBAAkBA,IAXtBnG,EAAQC,OAAO,mBACZiE,QAAQ,eAAgBgC,GAE3BA,EAAanB,SAAW,iBAwEvB7E,OAAOF,QAASE,OAAOqB,EAAGrB,OAAOsB,QC7EnC,SAAWxB,EAASuB,EAAGC,GAStB,QAASyG,KAgBP,QAASC,GAASC,EAAO/B,EAAOgC,EAAmBC,EAAUC,GAI3D,IAAK,GAHDpG,GAAQkE,EAAMmC,IAAM,EACpB/G,EAAOU,MAAMV,EAAO4E,EAAMjE,OAAO8E,SAASb,EAAMmC,IAAK,WAAY/G,EAAO4E,EAAMhE,MAC9EgE,EAAMlE,MACDhB,EAAI,EAAGA,EAAIiH,EAAMjB,OAAQhG,IAAK,CACrC,GAAIkF,EAAMoC,MAAQJ,EAAmB,CACnC,GAAIF,IAAU,CAuBd,IAtBA3G,EAAEkH,KAAKN,EAAMC,GAAoB,SAAUM,GAEzC,GAAIC,GAAWD,EAAIH,IAAM,EACrB/G,EAAOU,MAAMV,EAAOkH,EAAIvG,OAAO8E,SAASyB,EAAIH,IAAK,WAAY/G,EAAOkH,EAAItG,MACxEsG,EAAIxG,KAERgG,GAAUhG,EAAMG,SAASsG,IACpBT,GAAWI,IACdJ,EAAW9B,EAAMjE,MAAM/B,QAAUsI,EAAIvG,MAAM/B,OAASgG,EAAMjE,MAAM/B,QAAUsI,EAAItG,IAAIhC,OAASgG,EAAMhE,IAAIhC,QAAUsI,EAAIvG,MAAM/B,OAASgG,EAAMhE,IAAIhC,QAAUsI,EAAItG,IAAIhC,OAE5J8H,IACFQ,EAAIvG,MAAQX,EAAOqC,IAAIuC,EAAMjE,MAAOuG,EAAIvG,OACxCuG,EAAItG,IAAMZ,EAAOsC,IAAIsC,EAAMhE,IAAKsG,EAAItG,KACpCsG,EAAIxG,MAAQV,EAAOU,MAAMwG,EAAIvG,MAAOuG,EAAItG,KACxCsG,EAAIE,KAAOR,EACXM,EAAIG,UAAU1H,KAAKiF,GACfsC,EAAII,aAAe1C,EAAM0C,aAC3BJ,EAAII,WAAa,GACjB1C,EAAM0C,WAAa,OAIrBZ,EAAS,CACXG,EAASlH,KAAKiF,EACd,OAIF,GAFAA,EAAMoC,MAAQJ,EACdhC,EAAMwC,KAAOR,GACRhC,EAAMyC,UAAW,CACpB,GAAIE,GAAaxH,EAAEyH,UAAU5C,EAC7BA,GAAMyC,WAAaE,GAErBZ,EAAMC,GAAmBjH,KAAKiF,EAC9B,OAEF,IAAK+B,EAAMjH,GAAGgG,OAAQ,CACpBiB,EAAMjH,GAAGC,KAAKiF,GACdA,EAAMwC,KAAO1H,CACb,OAEF,IAAIK,EAAEpB,OAAOgI,EAAMjH,GAAI,SAAUwH,GAC/B,GAAIC,GAAWD,EAAIH,IAAM,EACrB/G,EAAOU,MAAMV,EAAOkH,EAAIvG,OAAO8E,SAASyB,EAAIH,IAAK,WAAY/G,EAAOkH,EAAItG,MACxEsG,EAAIxG,KAKR,IAJAgG,EAAUhG,EAAMG,SAASsG,IACpBT,GAAWI,IACdJ,EAAW9B,EAAMjE,MAAM/B,QAAUsI,EAAIvG,MAAM/B,OAASgG,EAAMjE,MAAM/B,QAAUsI,EAAItG,IAAIhC,OAASgG,EAAMhE,IAAIhC,QAAUsI,EAAIvG,MAAM/B,OAASgG,EAAMhE,IAAIhC,QAAUsI,EAAItG,IAAIhC,OAE5J8H,EAEF,MADAQ,GAAIF,OAAS,GACN,IACJtB,OAKA,CACLiB,EAAMjH,GAAGC,KAAKiF,GACdA,EAAMwC,KAAO1H,CACb,OAPAkF,EAAMoC,OAAS,EACVL,EAAMjH,EAAI,KACbiH,EAAMjH,EAAI,QA5ElB,GAAI6C,GAAOC,IAEXzC,GAAE0C,OAAOF,GAEPmE,QAASA,IAXblI,EACGC,OAAO,mBACPiE,QAAQ,kBAAmB+D,GAE9BA,EAAgBlD,YAyFhB7E,OAAOF,QAASE,OAAOqB,EAAGrB,OAAOsB,QC1FlC,SAAWxB,GASV,QAASiJ,GAA2BC,GAClC,OACEC,SAAU,IACVC,OACEC,WAAY,KAEdC,KAAM,SAAeF,EAAOG,EAAUC,GACpCD,EAAQE,KAAK,aAAc,SAAUC,GACnCH,EAAQ,GAAGF,YAAcK,EAAEC,WAAa,IAE1CJ,EAAQK,SAAS,UAEbR,EAAMC,WAGVH,EAAS,WAEPK,EAAQ,GAAGF,WAAaD,EAAMC,WAAaE,EAAQ,GAAGM,YAAc,GACnE,OAxBT7J,EACGC,OAAO,mBACP6J,UAAU,qBAAsBb,GAEnCA,EAA0BlE,SAAW,aAwBpC7E,OAAOF,SCrCT,SAAWA,GAGVA,EACGC,OAAO,mBACP6J,UAAU,qBAAsB,WAC/B,OACEC,WAAY,aACZX,SACAY,aAAc,eACdC,kBACEC,OAAQ,IACRC,OAAQ,KAEVb,KAAM,SAAUF,EAAOG,GACrB,GAAIa,GAAaC,SAASC,cAAc,OACpCC,EAAKhB,EAAQ,EACjBrJ,QAAOsK,iBAAiB,WAAY,SAAUd,GAC5CA,EAAEe,mBACD,GACHvK,OAAOsK,iBAAiB,OAAQ,SAAUd,GACxCA,EAAEe,mBACD,GAECF,EAAGf,WAAW,aAChBe,EAAGG,WAAY,EAEfH,EAAGC,iBACD,YACA,SAAUd,GA4BR,MA3BAU,GAAU9C,MAAMqD,OAASJ,EAAGK,aAAe,KAC3CR,EAAU9C,MAAMuD,OAAS,OACzBT,EAAU9C,MAAMwD,SAAW,WAC3BV,EAAU9C,MAAMyD,KAAO,WACvBX,EAAU9C,MAAM0D,OAAS,YACzBZ,EAAUa,UAAYV,EAAGU,UACrBV,EAAGW,SAAShE,OAAS,GACvBkD,EAAUc,SAAS,GAAG5D,MAAM6D,MAAQ,OACpCf,EAAU9C,MAAM8D,gBAAkBb,EAAGW,SAAS,GAAG5D,MAAM8D,gBACvDhB,EAAU9C,MAAM+D,MAAQd,EAAGe,YAAc,OAEzClB,EAAU9C,MAAM+D,MAAQE,KAAK1H,IAAI0G,EAAGe,YAAa,KAAO,KACxDlB,EAAU9C,MAAM8D,gBAAkBb,EAAGW,SAAS,GAAG5D,MAAM8D,iBAEzD1B,EAAE8B,aAAaC,cAAgB,OAE/BpB,SAASqB,KAAKC,YAAYvB,GAEtBV,EAAE8B,aAAaI,cACjBlC,EAAE8B,aAAaI,aAAaxB,EAAU,EAAE,GAG1C7I,EAAEkH,KAAK4B,SAASwB,iBAAiB,2BAA4B,SAAUnD,GACrEA,EAAIoD,WAENpC,EAAE8B,aAAaO,QAAQ,OAAQC,KAAKC,UAAU7C,EAAM8C,aAAahC,SACjElG,KAAKmI,UAAUC,IAAI,SACZ,IAET,GAGF7B,EAAGC,iBACD,UACA,SAAUd,GAGR,MAFAU,GAAU0B,SACV9H,KAAKmI,UAAUL,OAAO,SACf,IAET,IAGAvB,EAAGf,WAAW,aAChBe,EAAGC,iBACD,OACA,SAAUd,GASR,MARAA,GAAEe,iBACFf,EAAE2C,kBACE3C,EAAE2C,iBAAiB3C,EAAE2C,kBACzB3C,EAAE4C,OAAOH,UAAUL,OAAO,QAC1B9H,KAAKmI,UAAUL,OAAO,QACtB1C,EAAMmD,OAAO,WACXnD,EAAM8C,aAAa/B,QAASqC,MAAOR,KAAKS,MAAM/C,EAAE8B,aAAakB,QAAQ,SAAUC,OAAQjD,OAElF,IAET,GAGFa,EAAGC,iBACD,YACA,SAAUd,GAER,MADAA,GAAE4C,OAAOH,UAAUC,IAAI,SAChB,IAET,GAGF7B,EAAGC,iBACD,YACA,SAAUd,GAER,MADAA,GAAE4C,OAAOH,UAAUL,OAAO,SACnB,IAET,SAOX5L,OAAOF,SC/GT,SAAWA,EAASwB,EAAQD,GAS3B,QAASqL,GAAoBC,EAAQzL,GAsBnC,QAAS0L,KAiBP,OAhBA/I,EAAKgJ,KAAOxM,SAASwD,EAAKgJ,MAC1BhJ,EAAKiJ,YAAcjJ,EAAKkJ,WAAWC,QAAU9L,EAAsBgE,KACnErB,EAAKoJ,SAAWpJ,EAAKiJ,YAAY1K,IAAI,SAAUpB,GAC7C,GAAIkM,GAAI5L,EAAOuC,EAAK+G,SAEpB,OADAsC,GAAEC,QAAQnM,GACHkM,MAGJrJ,EAAKgJ,MAAQhJ,EAAKgJ,KAAO,KAC5BhJ,EAAKgJ,KAAO,GAGdhJ,EAAKuJ,UAA4BC,EAAhBxJ,EAAKyJ,SAAqBzJ,EAAKyJ,SAAsB,GACtEzJ,EAAK0J,QAAwBF,EAAdxJ,EAAK2J,OAAmB3J,EAAK2J,OAAoB,IAChE3J,EAAKsH,MAAQtH,EAAMgJ,MAAQxM,SAASwD,EAAK0J,QAAQE,GAAKpN,SAASwD,EAAKuJ,UAAUK,GAAK,GAAK1I,EAAa,KACrGlB,EAAK6J,aAAevN,OACZ0D,EAAK8J,MACX,IAAK,OACH9J,EAAK+J,QAAWvM,EAAEwM,QAAQxM,EAAEe,IAAIyB,EAAKiK,OAAQC,IAC7ClK,EAAK+J,QAAU3N,EAAO4D,EAAK+J,SAE3B/J,EAAK6J,aAAerM,EAAE2M,QAAQnK,EAAK+J,QAAS,SAAUpE,GACpD,MAAOA,GAAEvH,MAAM1B,OAAO,gBAExB0N,EAAepK,EAAK6J,aACpB,MAAK,KACF,MACL,IAAK,gBACH7J,EAAK+J,QAAWvM,EAAEwM,QAAQxM,EAAEe,IAAIyB,EAAKiK,OAAQC,IAC7ClK,EAAK+J,QAAU3N,EAAO4D,EAAK+J,SAC3B/J,EAAK6J,aAAerM,EAAE2M,QAAQnK,EAAK+J,QAAS,SAAUpE,GACpD,MAAOA,GAAE3F,EAAKqK,YAGE,kBAAdrK,EAAK8J,OACP9J,EAAK6J,aAAerM,EAAE8M,UAAUtK,EAAK6J,aAAc,SAAUU,GAC3D,MAAO/M,GAAE2M,QAAQI,EAAoB,SAAU5E,GAC7C,MAAOA,GAAEvH,MAAMkL,eAIrBkB,EAAmBxK,EAAK6J,aACxB,MAAK,KACF,OACH7J,EAAK+J,QAAWvM,EAAEwM,QAAQxM,EAAEe,IAAIyB,EAAKiK,OAAQC,IAC7ClK,EAAK+J,QAAU3N,EAAO4D,EAAK+J,SAC3B/J,EAAK6J,aAAerM,EAAEgC,OAAOQ,EAAKyK,SAAU,SAAUhL,EAAK6D,GAEzD,MADA7D,GAAI6D,MACG7D,MAGEjC,GAAEkN,KAAK1K,EAAK6J,aACvB7J,GAAK2K,cAAgBnN,EAAEe,IAAIf,EAAE2M,QAAQnK,EAAK+J,QAAS,SAAUpE,GAC3D,MAAOlI,GAAOkI,EAAEvH,OAAOwM,QAAQ,OAAOC,SACpC,SAAUvH,EAAGwH,GACf,GAAIC,IACFjJ,IAAKgJ,EACLE,KAAMvN,EAAOoN,KAAKC,GAAGF,QAAQ,OAAO/K,SACpCxD,IAAKoB,EAAOoN,KAAKC,GAAGF,QAAQ,OAAOlO,OAAO,gBAC1CgD,MAAOlC,EAAE2M,QAAQ7G,EAAG,SAAUqC,GAC5B,MAAOA,GAAEZ,aAEXnH,SAAU3B,EAAQyC,KAAKsB,EAAKpC,UAO9B,OALAJ,GAAEkH,KAAK1E,EAAKyK,SAAU,SAAU9E,GACzBoF,EAAOrL,MAAMiG,KAChBoF,EAAOrL,MAAMiG,SAGVoF,GAQT,KALA,GAAI3M,GAAQX,EAAOuC,EAAK+G,UAAUkE,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAAGC,OAAO,GACrFC,EAAO5N,EAAOuC,EAAK+G,UAAUkE,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,IAChFE,IAASlN,MAAOnC,EAAQyC,KAAKN,GAAQC,IAAKpC,EAAQyC,KAAK2M,KAEvDE,EAAI,EACDA,EAAI,GAAG,CACZF,EAAKhD,IAAI,EAAG,MACZ,IAAIgB,GAAIgC,EAAKhP,MAAQ,CACjBgN,GAAI,IACNA,EAAI,IAEF7L,EAAEgO,QAAQxL,EAAKiJ,cAAgBzL,EAAEiO,SAASzL,EAAKiJ,YAAaI,MAC9DiC,EAAKlO,MAAMgB,MAAOnC,EAAQyC,KAAK2M,GAAMJ,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAAGC,OAAO,GAAI/M,IAAKpC,EAAQyC,KAAK2M,GAAMJ,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,MAC3KG,KAIJ/N,EAAEkH,KAAK4G,EAAM,SAAUjC,GACrB,GAAI2B,GAAO,GAAKvN,EAAO4L,EAAEjL,OAAOwM,QAAQ,OAAOC,OAE3Ca,EAAQlO,EAAEmO,KAAK3L,EAAK2K,cAAe,SAAUiB,GAC/C,MAAOA,GAAM9J,MAAQkJ,GAGvB,KAAKU,EAAO,CACV,GAAIG,IACF/J,IAAKkJ,EACLA,KAAMvN,EAAOxB,EAAQyC,KAAK2K,EAAEjL,QAAQwM,QAAQ,OAAO/K,SACnDxD,IAAKoB,EAAOxB,EAAQyC,KAAK2K,EAAEjL,QAAQwM,QAAQ,OAAOlO,OAAO,gBACzDgD,SACA9B,SAAU3B,EAAQyC,KAAKsB,EAAKpC,UAE9BJ,GAAEkH,KAAKlH,EAAEkN,KAAK1K,EAAK6J,cAAe,SAAUiB,GAC1Ce,EAAInM,MAAMoL,QAEZ9K,EAAK2K,cAAcvN,KAAKyO,MAG5B7L,EAAK2K,cAAgBnN,EAAEsO,OAAO9L,EAAK2K,cAAe,SAAUhF,GAC1D,MAAOA,GAAE7D,KAEX,MAAK,KACF,QACH,GAAIiK,GAAWtO,EAAOuC,EAAK+G,UAAUiE,KAAK,GAAGgB,MAAM,GAAGC,QAAQ,GAAGC,QAAQ,EACzElM,GAAKmM,MAAQ1O,EAAOuC,EAAK+G,UAAUiE,KAAK,GAAGgB,MAAM,GAAGC,QAAQ,GAAGC,QAAQ,GAAGxP,OAAO,QACjFsD,EAAKoM,UAAYL,EAASM,aAAe,EAErCrM,EAAKoM,UAAY,IACnBpM,EAAKoM,UAAY,GAEnBpM,EAAKsM,aAAe9O,EAAEwC,EAAKiK,QACxB7N,OAAO,SAAUiG,GAChB,MAAOA,GAAMjE,MAAMmO,cAAgBlK,EAAMhE,IAAIkO,aAAelK,EAAMjE,MAAM+N,UAAY1O,EAAOuC,EAAK+G,UAAUoF,UAE3GhC,QACC,SAAU9H,GAAS,MAAOmF,MAAKgF,OAAOnK,EAAMjE,MAAM4M,OAAShL,EAAKoM,WAAa,QAC9E1M,QACHM,EAAKyM,mBAAqBjP,EAAEwC,EAAKiK,QAC9B7N,OAAO,SAAUiG,GAChB,MAAOA,GAAMjE,MAAMmO,cAAgBlK,EAAMhE,IAAIkO,cAE9ChO,IAAImO,GACJ1C,UACAG,QAAQ,SAAU9H,GACjB,MAAOmF,MAAKgF,OAAOnK,EAAMjE,MAAM4M,OAAShL,EAAKoM,WAAa,QAE3D1M,OAGH,IAAIiN,GAAUlP,EAAOuC,EAAK+G,UAAU6F,MAAM,SAASC,UAC/CC,EAAYrP,EAAOuC,EAAK+G,UAAU6D,QAAQ,SAASiC,SAEvC,KAAZF,IACFA,EAAUlP,EAAOuC,EAAK+G,UAAUgG,iBAAmB,GAEjDJ,EAAUG,IACZH,EAAUG,EAAYH,EAGxB,KAAK,GADDK,GAAcL,EAAUG,EAAY,EAC/B3P,EAAI,EAAGA,EAAI6P,EAAa7P,IACIb,SAA/B0D,EAAKyM,mBAAmBtP,KAC1B6C,EAAKyM,mBAAmBtP,MAK5B,IAFA6C,EAAKsL,QAEDS,EAASM,aAAe,EAAI,EAC9B,IAAKlP,EAAI,EAAGA,EAAI4O,EAASM,aAAe,EAAGlP,IACzC6C,EAAKsL,KAAK2B,WAGdzP,GAAE0P,MAAMnB,EAASoB,cAAe,SAAUC,GACxC,GAAI/Q,GAAMoB,EAAOsO,GAAU1D,IAAI+E,EAAG,OAClCpN,GAAKsL,KAAKlO,MAAO4N,KAAM3O,EAAK4N,aAI9B,KADA,GAAIoD,GAAsBrN,EAAKsL,KAAKnI,OAAS,GAAK,GAAK,GAChDnD,EAAKsL,KAAKnI,OAASkK,GACxBrN,EAAKsL,KAAKlO,UAMlB,QAAS8M,GAAKrL,GCJD,IAFX,GAAIC,IAAS,EAEKA,GDIG,CCHnB,GDGYuD,GAAKxD,CCFjBC,IAAS,EDIXuD,EAAQpG,EAAQyC,KAAK2D,EAErB,IAAIjE,GAAQX,EAAO4E,EAAMjE,OAAO6M,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAAGC,OAAO,GACnFC,EAAO5N,EAAO4E,EAAMhE,KAAK4M,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,GAChF,IAAI/I,EAAMjE,MAAMmO,cAAgBlK,EAAMhE,IAAIkO,YAAa,CAGrD,GAAIlK,EAAMjE,MAAMK,SAASL,GAAQ,CAC/B,GAAIiE,EAAMhE,IAAII,SAASL,GACrB,QAEFiE,GAAMjE,MAAQA,EAEhB,GAAIiE,EAAMhE,IAAIM,QAAQ0M,GAAO,CAC3B,GAAIhJ,EAAMjE,MAAMO,QAAQ0M,GACtB,QAEFhJ,GAAMhE,IAAMgN,EAEd,OAAQhJ,GAIV,GAAIiL,GAAcrR,EAAQyC,KAAK2D,EAC/BiL,GAAYjP,IAAMZ,EAAO4E,EAAMjE,OAAO6M,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,IACrF/I,EAAMjE,MAAMK,SAASL,KACvBkP,EAAYlP,MAAQA,EAGtB,IAAImP,GAAe9P,EAAO4E,EAAMjE,OAAOiK,IAAI,EAAG,OAAO4C,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAC9FqC,EAAa/P,EAAO4E,EAAMjE,OAAO6M,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,EAC9E,IAAI9I,EAAMhE,IAAII,SAAS8O,GACrB,MAAID,GAAYlP,MAAMO,QAAQ6O,OAItBF,EAEVA,GAAYG,gBAAiB,CAI7B,IAAIC,GAAezR,EAAQyC,KAAK2D,EAIhC,IAHAqL,EAAatP,MAAQX,EAAO4E,EAAMjE,OAAOiK,IAAI,EAAG,OAAO4C,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GACpGuC,EAAaC,iBAAkB,GAE3BtL,EAAMjE,MAAMO,QAAQ6O,GAKxB,OAAQF,GAAaM,OAAO1D,EAAMwD,GCJ9B7O,GDCW6O,ECAX5O,GAAS,ED9CTV,EACAiN,EAoBAiC,EAMAC,EACAC,EAYAE,EAAYpR,QAYlB,QAASoQ,GAAcrK,GACrB,GAAIA,EAAMjE,MAAMO,QAAQ0D,EAAMhE,KAAM,CAClC,GAAIwP,GAAKxL,EAAMjE,KACfiE,GAAMjE,MAAQiE,EAAMhE,IACpBgE,EAAMhE,IAAMwP,EAGd,GAAIxL,EAAMjE,MAAM0P,OAAS9N,EAAK+G,SAAS+G,QAAUzL,EAAMjE,MAAM+N,QAAUnM,EAAK+G,SAASoF,QAAS,CAE5F,GAAI9J,EAAMhE,IAAIyP,OAAS9N,EAAK+G,SAAS+G,QAAUzL,EAAMhE,IAAI8N,QAAUnM,EAAK+G,SAASoF,QAE/E,QAGF9J,GAAMjE,MAAQX,EAAOuC,EAAK+G,UAAU6D,QAAQ,SAE9C,GAAIvI,EAAMhE,IAAI8N,QAAUnM,EAAK+G,SAASoF,SAAW9J,EAAMhE,IAAIyP,SAAW9N,EAAK+G,SAAS+G,OAAQ,CAE1F,GAAIzL,EAAMjE,MAAM+N,QAAUnM,EAAK+G,SAASoF,QACtC,QAEF9J,GAAMhE,IAAMZ,EAAOuC,EAAK+G,UAAU6F,MAAM,SAG1C,GAAIvK,EAAMjE,MAAMyO,YAAcxK,EAAMhE,IAAIwO,UAEtC,OAAQxK,EAIV,IAAI0L,GAAa9R,EAAQyC,KAAK2D,GAC1B2L,EAAc/R,EAAQyC,KAAK2D,EAO/B,OALA0L,GAAWN,gBAAiB,EAC5BO,EAAYL,iBAAkB,EAC9BI,EAAW1P,IAAMZ,EAAOsQ,EAAW3P,OAAOwO,MAAM,QAChDoB,EAAY5P,MAAMiK,IAAI,EAAG,QAAQuC,QAAQ,SAEjCmD,GAAYH,OAAOlB,EAAasB,IAG1C,QAAS5R,GAAQ6N,GACf,MAAOzM,GAAEpB,OAAO6N,EAAQ,SAAUtE,GAChC,GAAIvH,GAAOiN,CACX,QAAQrL,EAAK8J,MACX,IAAK,OACL,IAAK,gBACH1L,EAAQX,EAAOuC,EAAK+G,UAAUuC,QAAQ,GAAG2B,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAAGC,OAAO,GAChGC,EAAO5N,EAAOuC,EAAK+G,UAAUuC,QAAQ,GAAG2B,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,GAC3F,MAAK,KACF,MACHhN,EAAQX,EAAOuC,EAAK+G,UAAU6D,QAAQ,OAAOK,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAC1FE,EAAO5N,EAAOuC,EAAK+G,UAAU6F,MAAM,OAAO3B,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,EACnF,MAAK,KACF,OACH/M,EAAQX,EAAOuC,EAAK+G,UAAUkE,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAAGC,OAAO,GACrFC,EAAO5N,EAAOuC,EAAK+G,UAAUkE,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,GAIhF,KAHA,GAAIE,KAASlN,MAAOnC,EAAQyC,KAAKN,GAAQC,IAAKpC,EAAQyC,KAAK2M,KAEvDlO,EAAI,EACDA,EAAI,GAAG,CACZkO,EAAKhD,IAAI,EAAG,MACZ,IAAIgB,GAAIgC,EAAKhP,MAAQ,CACjBgN,GAAI,IACNA,EAAI,IAEF7L,EAAEgO,QAAQxL,EAAKiJ,cAAgBzL,EAAEiO,SAASzL,EAAKiJ,YAAaI,MAC9DiC,EAAKlO,MAAMgB,MAAOnC,EAAQyC,KAAK2M,GAAMJ,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAAGC,OAAO,GAAI/M,IAAKpC,EAAQyC,KAAK2M,GAAMJ,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,MAC3KjO,KAGJ,MAAOK,GAAEyQ,KAAK3C,EAAM,SAAUjC,GAC5B,MAAO1D,GAAEvH,MAAM8P,UAAU7E,EAAEjL,MAAOiL,EAAEhL,MAAQsH,EAAEtH,IAAI6P,UAAU7E,EAAEjL,MAAOiL,EAAEhL,MACvE,KACC,QACHD,EAAQX,EAAOuC,EAAK+G,UAAUiE,KAAK,GAAGC,KAAKjL,EAAKuJ,UAAUK,GAAGsB,OAAOlL,EAAKuJ,UAAU4B,GAAGC,OAAO,GAC7FC,EAAO5N,EAAOuC,EAAK+G,UAAUuC,QAAQ7L,EAAOuC,EAAK+G,UAAUoG,eAAelC,KAAKjL,EAAK0J,QAAQE,GAAGsB,OAAOlL,EAAK0J,QAAQyB,GAAGC,OAAO,IAGjI,MAAOzF,GAAEvH,MAAM8P,UAAU9P,EAAOiN,IAAS1F,EAAEtH,IAAI6P,UAAU9P,EAAOiN,KAIpE,QAASjB,GAAgBP,GACvBA,EAAeA,KACf,IAAIsE,GAAc1Q,EAAOuC,EAAK+G,UAAUuC,QAAQ,EAChD9L,GAAE0P,MAAM,EAAG,SAAU/P,GACnB,GAAIiR,GAAU3Q,EAAOxB,EAAQyC,KAAKyP,IAAc9F,IAAIlL,EAAG,QAAQT,OAAO,aACjEmN,GAAauE,KAChBvE,EAAauE,SAKnB,QAAS5D,GAAoBX,GAC3BA,EAAeA,MACfrM,EAAEkH,KAAK1E,EAAKyK,SAAU,SAAU9E,GACzBkE,EAAalE,KAChBkE,EAAalE,SAKnB,QAAS6D,GAAWI,GAClB,MAAIA,IAAK,IACEA,EAAG,GAAIuB,EAAG,KAEZvB,EAAGA,EAAGuB,EAAG,GAGpB,QAAST,GAAMb,GACb,OAAQ7J,EAAK8J,MACX,IAAK,OACH,MAAO5K,QAAOwL,KAAKb,GAAcV,KAAK,SAASkF,EAAG7N,GAChD,GAAI8N,GAAQC,EAAeF,GACvBG,EAAQD,EAAe/N,EAC3B,OAAO8N,GAAQE,GACf,KACC,gBACL,IAAK,MACL,IAAK,OACH,MAAOtP,QAAOwL,KAAKb,GAAcV,QAIvC,QAASsF,GAAW3M,GAClB,MAAO9B,GAAK6J,aAAa/H,GAO3B,QAAS4M,GAAStB,GAChB,MAAOpN,GAAK+G,SAAS4H,SAAWlR,IAASkR,QAAUvB,IAAM3P,IAAS8O,YAGpE,QAASqC,KACP,MAAOnR,KAASwN,OAASzO,SAASwD,EAAKuJ,UAAUK,IAAMnM,IAASwN,OAASzO,SAASwD,EAAK0J,QAAQE,GAGjG,QAASiF,KACP,GAAIC,GAAqF,IAArErR,IAASwN,OAASzO,SAASwD,EAAKuJ,UAAYvJ,EAAKuJ,UAAUK,EAAI,IAAWnM,IAASwO,SACvG,OAAOzE,MAAKgF,MAAMxM,EAAKgJ,MAAQ9H,EAAY4N,GAAgB,IAG7D,QAASC,KACP,MAAO/O,GAAK+G,SAASiI,OAAOvR,IAAUuC,EAAK8J,MAG7C,QAASmF,GAAsBC,GAC7B,GAAIC,GACAC,CACJ,QAAQpP,EAAK8J,MACX,IAAK,OACH,GAAII,GAAQgF,EAAK7F,EAAEa,MAAM,IAMzBiF,GAAM1R,EAAO,GAAI4R,MAAKnF,EAAM,GAAIA,EAAM,GAAK,EAAGA,EAAM,GAAIgF,EAAKtF,EAAGsF,EAAK/D,GACrE,MAAK,KACF,OACL,IAAK,MACHgE,EAAM1R,EAAOuC,EAAK+G,UAAUkE,KAAKiE,EAAKtF,GAAGsB,OAAOgE,EAAK/D,GACrDiE,EAASF,EAAKE,MACd,MAAK,KACF,gBACHA,EAASF,EAAKE,OACdD,EAAM1R,EAAOuC,EAAK+G,UAAUkE,KAAKiE,EAAKtF,GAAGsB,OAAOgE,EAAK/D,GAAGC,OAAO,GAAG9B,QAAQ4F,EAAK7F,GAGnFrJ,EAAKsP,eAAgBC,QAASJ,EAAKK,QAASJ,IAG9C,QAASK,GAAgBpT,EAAKuM,GACxBvM,EAAI2O,MACNhL,EAAKsP,eAAgBC,QAASlT,EAAI2O,OAItC,QAAS0E,GAAWC,GAClB,GAAIR,GAAMQ,EAAOlS,MACjB,KAAK0R,EACH,OAAQnP,EAAK8J,MACX,IAAK,OACH,GAAI8F,GAAMnS,EAAO8Q,EAAeoB,EAAOtG,IAAIkD,WAC3C4C,GAAM1R,EAAOuC,EAAK+G,UAAUkE,KAAK0E,EAAO/F,GAAGsB,OAAOyE,EAAOxE,GAAGC,OAAO,GAAGmB,UAAUqD,EAChF,MAAK,KACF,gBACHT,EAAM1R,EAAOuC,EAAK+G,UAAUkE,KAAK0E,EAAO/F,GAAGsB,OAAOyE,EAAOxE,GAAGC,OAAO,GAAG9B,QAAQqG,EAAOtG,EACrF,MAAK,KACF,MACH8F,EAAM1R,EAAOuC,EAAK+G,UAAUkE,KAAK0E,EAAO/F,GAAGsB,OAAOyE,EAAOxE,EACzD,MAAK,KACF,OACHgE,EAAM1R,EAAOoN,KAAK8E,EAAOtT,KAAK4O,KAAK0E,EAAO/F,GAAGsB,OAAOyE,EAAOxE,GAGjE,GAAIiE,GAAS5R,EAAGiO,UAAU,gBAAiB,MAAO,QAASzL,EAAK8J,MAAS6F,EAAOP,OAAS9S,MACzF0D,GAAK6P,cAAeN,QAASJ,EAAK1G,MAAOkH,EAAOlH,MAAOG,OAAQ+G,EAAO/G,OAAQ4G,QAASJ,IAOzF,QAASb,GAAgBvD,GACvB,GAAI8E,GAAe9E,EAAKd,MAAM,IAC9B,OAAO,IAAImF,MAAKS,EAAa,GAAIA,EAAa,GAAK,EAAGA,EAAa,IAhdrE,GAAI5O,GAAY7D,EAAsB6D,UAElClB,EAAOC,IAEXD,GAAK+P,QAAU,WACbvS,EAAE0C,OAAOF,GAEP0O,QAASA,EACTG,oBAAqBA,EACrBE,UAAWA,EACXE,qBAAsBA,EACtBL,aAAcA,EACdlE,KAAMA,EACN+D,UAAWA,EACXgB,eAAgBA,EAChBC,UAAWA,IAGb3G,KA6WFD,EAAOkH,iBAAiB,WACtB,OAAQhQ,EAAKiK,OAAQjK,EAAKyK,SAAUzK,EAAK+G,SAAU/G,EAAK8J,KAAM9J,EAAKyJ,SAAUzJ,EAAK2J,OAAQ3J,EAAKgJ,KAAMhJ,EAAKkJ,aACzGH,GAoFL,QAASkH,KACP,OACE7K,SAAU,IACV8K,YAAa,qCACblK,WAAY6C,EACZ5C,aAAc,WACdC,kBACE8C,KAAM,IACNiB,OAAQ,IACRQ,SAAU,IACV0F,eAAgB,KAChBvS,SAAU,KACVmJ,SAAU,IACV+C,KAAM,IACNL,SAAU,IACVE,OAAQ,IACRU,SAAU,IACV+F,cAAe,IACfC,YAAa,IACbf,cAAe,IACfgB,kBAAmB,IACnBT,aAAc,IACd3G,WAAY,KACZqH,OAAQ,MAEVlL,UArfJpJ,EACGC,OAAO,mBACP6J,UAAU,aAAckK,GAE3BpH,EAAmB7H,SAAW,SAAU,0BAofvC7E,OAAOF,QAASE,OAAOsB,OAAQtB,OAAOqB,GE3fxC,SAAWvB,EAASuB,EAAGC,GAgBtB,QAAS+S,GAEP1H,GAuCA,QAASC,MAIT,QAAS2G,GAAWe,EAAMpO,GACxBrC,EAAK6P,cAAepH,MAAOgI,EAAM7H,OAAQvG,IArC3C,GAAIrC,GAAOC,IAEXD,GAAK+P,QAAU,WACbvS,EAAE0C,OAAOF,GACP0P,UAAWA,EACXgB,aAGF1Q,EAAK2Q,UAAiCrU,SAApB0D,EAAK3D,IAAI4N,OAC3BlB,IACAD,EAAOkH,kBAAkBhQ,EAAK3D,IAAK2D,EAAKpC,UAAW,WAC7CoC,EAAK3D,KAAO2D,EAAK3D,IAAI2O,MAAQhL,EAAKpC,UAAYsB,OAAOwL,KAAK1K,EAAKpC,UAAUuF,QAC3EnD,EAAK0Q,QAAUxR,OAAOwL,KAAK1K,EAAKpC,UAAU4B,OAAO,SAAUC,EAAKqC,GAC9D,GAAI8O,GAAQ5Q,EAAKpC,SAASkE,GACtB+O,EAAarT,EAAE4B,IAAIwR,EAAO,SAAUpS,GACtC,GAAIL,GAAQV,EAAOU,MAAMK,EAAQJ,MAAOI,EAAQH,IAChD,OAAO2B,GAAK3D,IAAI2O,KAAK8F,OAAO3S,IAK9B,OAHI0S,IACFpR,EAAIrC,KAAK0E,GAEJrC,OAETO,EAAK+Q,cAAgB,QAAU/Q,EAAK0Q,QAAQzM,KAAK,QAAU,WAE3DjE,EAAK+Q,cAAgB,GACrB/Q,EAAK0Q,eAkBb,QAASM,KACP,OACE5L,SAAU,IACV6L,SAAS,EACTf,YAAa,mDACblK,WAAYwK,EACZvK,aAAc,UACdC,kBACE7J,IAAK,IACL4N,OAAQ,IACRqF,cAAe,IACfO,aAAc,IACdjS,SAAU,MAEZyH,OAAO,EACPE,KAAM,SAAUF,EAAOG,GACrB,GAAIgB,GAAKhB,EAAQ,EACjBrJ,QAAOsK,iBAAiB,WAAY,SAAUd,GAC5CA,EAAEe,mBACD,GACHvK,OAAOsK,iBAAiB,OAAQ,SAAUd,GACxCA,EAAEe,mBACD,GACHF,EAAGC,iBACD,OACA,SAAUd,GAQR,MAPAA,GAAEe,iBACFf,EAAE2C,kBACE3C,EAAE2C,iBAAiB3C,EAAE2C,kBACzBrI,KAAKmI,UAAUL,OAAO,QACtB1C,EAAMmD,OAAO,WACXnD,EAAM6L,QAAQxB,UAAUzH,KAAKS,MAAM/C,EAAE8B,aAAakB,QAAQ,SAAUhD,MAE/D,IAET,GAGFa,EAAGC,iBACD,YACA,SAAUd,GAER,MADA1F,MAAKmI,UAAUC,IAAI,SACZ,IAET,GAGF7B,EAAGC,iBACD,YACA,SAAUd,GAER,MADA1F,MAAKmI,UAAUL,OAAO,SACf,IAET,KAvHR9L,EACGC,OAAO,mBACP6J,UAAU,gBAAiBiL,GAE9BR,EAAsBxP,SAEpB,WAsHD7E,OAAOF,QAASE,OAAOqB,EAAGrB,OAAOsB,QC/HnC,SAAWxB,EAASwB,EAAQD,GAS3B,QAAS2T,GAA8BrI,GASrC,QAASC,KACP/I,EAAKsL,QACLtL,EAAKiJ,YAAcjJ,EAAKkJ,WACN,SAAdlJ,EAAK8J,MACPtM,EAAE4T,QAAQpR,EAAKiJ,YAAa,SAAUI,GACpC,GAAIhN,GAAMoB,EAAOuC,EAAK+G,SACtB1K,GAAIiN,QAAQD,GACZrJ,EAAKsL,KAAKlO,KAAKf,KAEjB2D,EAAKsL,KAAO9N,EAAEsO,OAAO9L,EAAKsL,KAAM,SAAUjC,GACxC,MAAO5L,GAAO4L,GAAGxJ,YAEI,QAAdG,EAAK8J,MAAkB9J,EAAKqK,WACrCrK,EAAKqR,OAASnS,OAAOwL,KAAK1K,EAAKiK,QAAQd,QArB3C,GAAInJ,GAAOC,IAEXD,GAAK+P,QAAU,WACbjH,EAAOkH,iBAAiB,WACtB,OAAQhQ,EAAKiK,OAAQjK,EAAK+G,SAAU/G,EAAK8J,KAAM9J,EAAKyJ,SAAUzJ,EAAK2J,OAAQ3J,EAAKkJ,aAC/EH,IAuBP,QAASkH,KACP,OACE7K,SAAU,IACV8K,YAAa,6DACblK,WAAYmL,EACZlL,aAAc,qBACdC,kBACE+D,OAAQ,IACRlD,SAAU,IACV+C,KAAM,IACNO,SAAU,IACVnB,WAAY,KAEd7D,OAAO,GAhDXpJ,EACGC,OAAO,mBACP6J,UAAU,uBAAwBkK,GAErCkB,EAA6BnQ,SAAW,WA+CvC7E,OAAOF,QAASE,OAAOsB,OAAQtB,OAAOqB,GCtDxC,SAAWvB,EAASuB,EAAGC,GAYtB,QACA6T,GAAwBxI,EAAQzL,EAAuB6G,EAAiB9D,EAAc+B,EAAczE,GAsDlG,QAAS6T,GAAkBrT,GACvB,GAAIsT,GAAQ,GACNC,EAAcvT,EAAIuT,WACxB,QAAQvT,EAAIwT,aAAaF,OACrB,IAAK,UACDA,EAAQ,iBACR,MAAK,KACJ,UACDA,EAAQ,+BACR,MAAK,KACJ,mBACDA,EAAQ,+BACR,MAAM,KACL,WACDA,EAAQ,mBAGhB,MAAGC,GACQD,EAAQ,YAAaC,EAErBD,EAGf,QAASG,GAAwB/I,GAC/B,GAAIqD,EAOJ,OAJEA,GAFEzO,EAAEoU,SAAShJ,EAAOL,OAAOH,UAAW,aAE5B,GAEAZ,KAAKgF,MAAM5D,EAAOiJ,SAAW3Q,EAAYlB,EAAKgJ,MAAQ,IAKpE,QAAS0G,GAAWe,EAAMpO,GACxB,GAAI4I,GAAOzO,SAAS6F,EAAMkG,OAAOuJ,aAAa,SAC1C7F,EAAU0F,EAAwBtP,GAClC2I,EAAOvN,EAAOxB,EAAQyC,KAAKsB,EAAK+G,WAAWiF,MAAMf,EAAOzO,SAASwD,EAAKyJ,SAASG,IAAIqC,QAAQA,EAC1F8F,GAAa/G,GAGhB3N,EAAsB4E,yBAAyB,WAC7CjC,EAAK6P,cAAepH,MAAOgI,EAAM7H,OAAQvG,EAAO2P,MAAO/G,EAAOzO,SAASwD,EAAKyJ,SAASG,GAAIqI,SAAUhG,MAHrGjM,EAAK6P,cAAepH,MAAOgI,EAAM7H,OAAQvG,EAAO2P,MAAO/G,EAAOzO,SAASwD,EAAKyJ,SAASG,GAAIqI,SAAUhG,IAQvG,QAASiG,GAAYjH,EAAMrC,GACzB,GAAIqD,GAAU0F,EAAwB/I,GAClCoC,EAAOvN,EAAOxB,EAAQyC,KAAKsB,EAAK+G,WAAWiF,MAAMf,EAAOzO,SAASwD,EAAKyJ,SAASG,IAAIqC,QAAQA,EAC1F8F,GAAa/G,GAGhB3N,EAAsB4E,yBAAyB,WAC7CjC,EAAKsP,eAAe0C,MAAO/G,EAAOzO,SAASwD,EAAKyJ,SAASG,GAAIqI,SAAUhG,MAHzEjM,EAAKsP,eAAe0C,MAAO/G,EAAOzO,SAASwD,EAAKyJ,SAASG,GAAIqI,SAAUhG,IAS3E,QAASlD,KACP,GAAIoJ,GAAY,CAEhBnS,GAAKoS,YACLpS,EAAKqS,aACLrS,EAAKsS,UAELtS,EAAK+J,QAAU9N,EAAQyC,KAAKsB,EAAKiK,QAEjCjK,EAAK7B,MAAQ6B,EAAK2J,OAAOC,EAAI5J,EAAKyJ,SAASG,EAC3C5J,EAAKuS,eAAiB,KAAOvS,EAAK7B,MAClC6B,EAAKwS,aAAetR,EAAYlB,EAAK7B,MAGrC6B,EAAK+J,QAAUvM,EAAEsO,OAAO9L,EAAK+J,QAAS,SAAUpE,GAC9C,MAAOA,GAAEvH,MAAMqU,WAGjB,IAAIrO,QACAsO,IACJlV,GAAEkH,KAAK1E,EAAK+J,QAAS,SAAU1H,GAC7B,GAAIkB,KAGJ,IAFAlB,EAAMoC,MAAQ,EACdpC,EAAMlE,MAAQV,EAAOU,MAAMkE,EAAMjE,MAAOiE,EAAMhE,KAC1CgE,EAAMlE,MAAQ,IAAQ,CACxB,GAAIE,GAAMZ,EAAO4E,EAAMjE,OAAOiK,IAAI,GAAI,UACtChG,GAAMlE,MAAQV,EAAOU,MAAMkE,EAAMjE,MAAOC,GAE1CkF,EAAMyD,MAAQ3E,EAAMjE,MAAM4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAO3G,EAAMjE,MAAM6N,UAAY/K,EAAYlB,EAAKgJ,KAAO,GAAK,KAEpIzF,EAAM+D,MAAQtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBnQ,EAAMlE,MAAS6B,EAAKuS,eAAiB,IAAO,KAC3FhP,EAAM,oBAAsBlB,EAAM,qBAAuB,UACrDjC,EAAaC,aAAakD,EAAM,qBAAsB,IACxDA,EAAM3C,MAAQ,QAEd2C,EAAM3C,MAAQ,QAEhByB,EAAMkB,MAAQA,EACdW,EAAgBC,QAAQC,EAAO/B,EAAOlB,EAAcuR,KAEtD1S,EAAK+J,QAAUvM,EAAEmV,WAAW3S,EAAK+J,QAAS2I,GAC1ClV,EAAEkH,KAAK1E,EAAK+J,QAAS,SAAU1H,GAgB7B,GAfAA,EAAMuQ,GAAK3W,EAAQyC,KAAKyT,GACpB9P,EAAMwC,OAAS1D,IACjBkB,EAAMkB,MAAMyD,MAAQ3E,EAAMjE,MAAM4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAO3G,EAAMjE,MAAM6N,UAAY/K,EAAYlB,EAAKgJ,KAAO,GAAK,KAC1I3G,EAAMkB,MAAM+D,MAAQtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBnQ,EAAMlE,MAAMsU,UAAazS,EAAKuS,eAAiB,IAAO,KAC3GlQ,EAAMkB,MAAM,oBAAsB,OAClClB,EAAMkB,MAAM,eAAiB,OAC7BlB,EAAMkB,MAAM3C,MAAQ,OACpByB,EAAMwQ,MAAQxQ,EAAOyC,UAAU3B,OAAU,IAAM7B,EAC3Ce,EAAMyQ,UAASzQ,EAAMyQ,QAAUzQ,EAAMwQ,QAE3CxQ,EAAMkB,MAAM+D,MAAQtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBnQ,EAAMlE,MAAMsU,UAAazS,EAAKuS,eAAiB,IAAO,KACxFjW,SAAf+F,EAAMwC,OAAoBxC,EAAMwC,KAAO1D,GAC3CkB,EAAMkB,MAAMwP,IAAMvL,KAAKwL,MAA+B,GAAzBxW,SAAU6F,EAAMwC,MAAcT,EAAMjB,QAAU,IAC3Ed,EAAMkB,MAAMqD,OAASY,KAAKwL,MAAM,GAAK5O,EAAMjB,QAAU,IACrDd,EAAMQ,WAAa,OACfR,EAAMmC,IAAM,EAAG,CACjBnC,EAAMkB,MAAM,eAAiB,MAC7B,IAAI0P,GAAIxV,EAAO4E,EAAMjE,OAAO8E,SAASb,EAAMmC,IAAK,UAC3C/G,GAAOwV,GAAGjE,OAAO3M,EAAMjE,MAAO,SACjC6U,EAAIxV,EAAO4E,EAAMjE,OAAOwM,QAAQ,OAElC,IAAIjF,GAAIlI,EAAO4E,EAAMjE,OACjBY,EAAIvB,EAAOU,MAAM8U,EAAGtN,GACpB3C,EAAavF,EAAOU,MAAM8U,EAAG5Q,EAAMlE,MAAME,KACzCwE,EAAa7D,EAAEyT,UAAYzP,EAAWyP,UAAY,GACtDpQ,GAAMQ,WAAa,IAAOA,EAAc,GACxC,IAAIgJ,IACFhJ,WAAYA,EAAe,IAC3BU,OACEyD,MAASvJ,EAAOwV,GAAGjH,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvL,EAAQwV,GAAGhH,UAAa/K,EAAYlB,EAAKgJ,KAAO,GAAM,EAAM,KACpI1B,MAAOtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBxT,EAAEyT,UAAazS,EAAKuS,eAAiB,IAAO,KACpFQ,IAAK1Q,EAAMkB,MAAMwP,IACjBnM,OAAQvE,EAAMkB,MAAMqD,OACpBsM,WAAYlT,EAAKgJ,KAAOhJ,EAAKwS,aAAgBxP,EAAWyP,UAAazS,EAAKuS,eAAiB,IAAO,KAClGY,aAAc,SACdvS,MAAO,OACPwS,WAAe,oCAAuC/Q,EAAM,oBAAuB,KAAQA,EAAM,oBAAuB,iCACxHgR,aAAc,sBACdC,gBAAiB,sBACjBC,cAAe,uBAEjBT,QAAS,oBAAsBzQ,EAAMmC,IAAM,OAEzC3B,GAAa,EACf7C,EAAKoS,SAAS/P,EAAMuQ,IAAM/G,EAE1BxJ,EAAMmC,IAAM,EAIhBgP,EAAkBnR,GACdA,EAAMG,SACRH,EAAMkB,MAAM,oBAAsBpB,EAAaC,iBAAiBC,EAAO,YACvEA,EAAMkB,MAAM,oBAAsBjH,OAEpC,IAAMkI,GAAMxE,EAAKoS,SAAS/P,EAAMuQ,IAC1Ba,EAAOzT,EAAKqS,UAAUhQ,EAAMuQ,GAClCvQ,GAAMkB,MAAM2P,WAAaQ,EAAWrR,EAAMkB,MAAM+D,OAASoM,EAAUlW,EAAEmW,IAAInP,EAAK,gBAAkBkP,EAAUlW,EAAEmW,IAAIF,EAAM,gBAAkB,EAAK,KAC7ItB,MAEEnS,EAAKwC,QACPoR,IAKJ,QAASC,GAAW7K,GAClB,MAAOxM,UAAUwM,GAAQ9H,EAAa,KAGxC,QAAS0S,KACP5T,EAAKsS,OAAS9U,EAAEsW,QAAQtW,EAAEe,IAAIyB,EAAKwC,OAAO8P,OAAQ,SAAUyB,GAC1D,GAAItR,IACFuR,KAAMD,EAAEC,KACR5V,MAAOX,IAASuO,MAAM+H,EAAE3V,MAAM8L,MAAM,KAAK,IAAIgB,OAAO6I,EAAE3V,MAAM8L,MAAM,KAAK,IAAIkB,OAAO,GAClF/M,IAAKZ,IAASuO,MAAM+H,EAAE1V,IAAI6L,MAAM,KAAK,IAAIgB,OAAO6I,EAAE1V,IAAI6L,MAAM,KAAK,IAAIkB,OAAO,GAC5E7H,SAGF,KAAId,EAAMrE,MAAMO,QAAQqB,EAAK2J,UAAWlH,EAAMpE,IAAII,SAASuB,EAAKyJ,UAahE,MAVIhH,GAAMrE,MAAMK,SAASuB,EAAKyJ,YAC5BhH,EAAMrE,MAAQX,EAAOxB,EAAQyC,KAAKsB,EAAKyJ,YAGrChH,EAAMpE,IAAIM,QAAQqB,EAAK2J,UACzBlH,EAAMpE,IAAMZ,EAAOxB,EAAQyC,KAAKsB,EAAK2J,UAEvClH,EAAMc,MAAMyD,MAAQvE,EAAMrE,MAAM4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvG,EAAMrE,MAAM6N,UAAY/K,EAAYlB,EAAKgJ,KAAO,GAAK,KAC1IvG,EAAMc,MAAM+D,MAAQtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgB/U,EAAOU,MAAMsE,EAAMrE,MAAOqE,EAAMpE,KAAKoU,UAAazS,EAAKuS,eAAiB,IAAO,KAE7H9P,KAIX,QAASsP,GAAc/G,GACrB,GAAI3B,GAAI5L,EAAOxB,EAAQyC,KAAKsM,GAC5B,OAAOxN,GAAE4B,IAAIY,EAAKiU,UAAW,SAAU/V,GACrC,MAAOA,GAAIC,MAAMyT,SAASvI,KAI9B,QAASmK,GAAmBnR,GAC1B,IAAKA,EAAMoR,KACT,MAAO,KAETpR,GAAMkB,MAAM,gBAAkB,MAC9B,IAAIlF,GAAMZ,EAAO4E,EAAMhE,KAAKgK,IAAIhG,EAAMoR,KAAM,UACvChW,GAAOY,GAAK2Q,OAAO3M,EAAMhE,IAAK,SACjCA,EAAMZ,EAAO4E,EAAMhE,KAAKuO,MAAM,OAEhC,IAAMxO,GAAQX,EAAO4E,EAAMhE,KACrBF,EAAQV,EAAOU,MAAMC,EAAOC,GAC5B2E,EAAavF,EAAOU,MAAMkE,EAAMlE,MAAMC,MAAOiE,EAAMlE,MAAME,KACzDwE,EAAa1E,EAAMsU,UAAYzP,EAAWyP,UAAY,GAC5DpQ,GAAM6R,eAAiB,IAAOrR,EAAc,GAC5C,IAAIgJ,IACFhJ,WAAYA,EAAe,IAC3BU,OACEyD,MAASvJ,EAAOW,GAAO4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvL,EAAQW,GAAO6N,UAAa/K,EAAYlB,EAAKgJ,KAAO,GAAM,EAAM,KAC5I1B,MAAOtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBrU,EAAMsU,UAAazS,EAAKuS,eAAiB,IAAO,KACxFQ,IAAK1Q,EAAMkB,MAAMwP,IACjBnM,OAAQvE,EAAMkB,MAAMqD,OACpBsM,WAAYlT,EAAKgJ,KAAOhJ,EAAKwS,aAAgBxP,EAAWyP,UAAazS,EAAKuS,eAAiB,IAAO,KAClGY,aAAc,SACdvS,MAAO,OACPwS,WAAe,qCAAwC/Q,EAAM,oBAAuB,KAAQA,EAAM,oBAAuB,iCACzHgR,aAAc,sBACdC,gBAAiB,sBACjBC,cAAe,uBAEjBT,QAAS,oBAAsBzQ,EAAMoR,KAAO,OAE1C5Q,GAAa,EACf7C,EAAKqS,UAAUhQ,EAAMuQ,IAAM/G,EAE3BxJ,EAAMoR,KAAO,EAIjB,QAASC,KCLP,GDKkBpM,GAAK6M,UAAAhR,QAAA,GAAA7G,SAAA6X,UAAA,GAAG,MAAKA,UAAA,EAC/B,OAAO3X,UAAS8K,EAAM2J,QAAQ,KAAM,KAxStC,GAAI/P,GAAY7D,EAAsB6D,UAClCI,EAAejE,EAAsBiE,aACrCH,EAAe9D,EAAsB8D,aAErCnB,EAAOC,IAEXD,GAAK+P,QAAU,WACbvS,EAAE0C,OAAOF,GACPkS,WAAYA,EACZ2B,UAAWA,EACXnE,UAAWA,IAEb3G,IACAD,EAAOkH,iBAAiB,WACtB,OAAQhQ,EAAKiK,OAAQjK,EAAKyJ,SAAUzJ,EAAK2J,SACxCZ,GAEHD,EAAOkH,iBAAiB,WACtB,OAAQhQ,EAAKpC,WACZ,SAAUwW,EAAUC,GACrB,GAAIvW,MAAMC,QAAQiC,EAAKpC,WAAaoC,EAAKpC,SAASuF,OAAQ,CACxD,GAAI/E,GAAQX,EAAOxB,EAAQyC,KAAKsB,EAAK+G,WAAW6D,QAAQ,OACpDvM,EAAMZ,EAAOxB,EAAQyC,KAAKsB,EAAK+G,WAAW6F,MAAM,MAClD5M,GAAKiU,UAAYvW,EAAeC,cAAcqC,EAAKpC,UAAYQ,EAAOC,IAAME,IAAI,SAAUL,GASxF,MAREA,GAAIqF,OACJyD,MAAOvJ,EAAOS,EAAIE,OAAO4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvL,EAAOS,EAAIE,OAAO6N,UAAY/K,EAAYlB,EAAKgJ,KAAO,GAAK,KACzI1B,MAAOtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgB/U,EAAOU,MAAMD,EAAIE,MAAOF,EAAIG,KAAKoU,UAAazS,EAAKuS,eAAiB,IAAO,MAErHrU,EAAIC,MAAQV,EAAOU,MAAMD,EAAIE,MAAOF,EAAIG,KACxCH,EAAG,MAAS,oBAAsBA,EAAIwT,aAAaF,MACnDtT,EAAI4U,QAAUvB,EAAkBrT,GAChCoW,QAAQC,IAAIrW,GACLA,QAIX8B,GAAKiU,gBAKXjU,EAAKuU,IAAM,SAAUlG,KAGrBrO,EAAKiR,QAAU,SAAUuD,GACvB,GAAKA,EACL,MAAOA,GAAOvD,QAAQ,kBAAmB,KAG3CjR,EAAKoS,YACLpS,EAAKqS,aA0PP,QAASoC,KACP,OACErP,SAAU,IACV8K,YAAa,+CACblK,WAAYsL,EACZrL,aAAc,OACdC,kBACE8C,KAAM,IACNS,SAAU,IACVE,OAAQ,IACRM,OAAQ,IACRqF,cAAe,IACfO,aAAc,IACdrN,OAAQ,KACR5E,SAAU,KACVmJ,SAAU,MAEZ1B,OAAO,GAzUXpJ,EACGC,OAAO,mBACP6J,UAAU,iBAAkB0O,GAE/BnD,EAAuBtQ,SAAW,SAAU,wBAAyB,kBAAmB,eAAgB,eAAgB,mBAwUvH7E,OAAOF,QAASE,OAAOqB,EAAGrB,OAAOsB,QE/UnC,SAAWxB,EAASwB,EAAQD,GAS3B,QAASkX,GAAiBrX,GAqBxB,QAASsX,GAA0B7L,GAcjC,QAASC,KACP,GAAI5K,GAAQ6B,EAAK2J,OAAOC,EAAI5J,EAAKyJ,SAASG,EAAI,CAC9C5J,GAAKgM,SACLxO,EAAE0P,MAAM/O,EAAO,SAAUhB,GACvB,GAAIkM,GAAI5L,EAAOuC,EAAK+G,SACpBsC,GAAE4B,KAAK9N,EAAIX,SAASwD,EAAKyJ,SAASG,IAClCP,EAAE6B,OAAO,GACTlL,EAAKgM,MAAM5O,KAAKiM,KAMpB,QAASwK,GAAW7K,GAClB,MAAOxM,UAAUwM,GAAQ9H,EAAa,KAGxC,QAAS0T,GAAY5L,EAAM/J,GACzB,GAAI4V,GAAQrY,SAASwM,IAAS9H,EAAY,EAE1C,OADKjC,KAAO4V,GAAe,EAAIrY,SAASwM,IACjC,KAAO6L,EAAO,SAAWA,EAAO,KAjCzC,GAAI7U,GAAOC,IAEXD,GAAK+P,QAAU,WACbjH,EAAOgM,aAAa,WAAc,MAAO9U,GAAKyJ,UAAY,WAAc,MAAOzJ,GAAK2J,SAAWZ,GAE/FvL,EAAE0C,OAAOF,GACP6T,UAAWA,EACXe,WAAYA,IAGd7L,KA/BJ,GAAI7H,GAAY7D,EAAsB6D,SAEtC,QACEkE,SAAU,IACV8K,YAAa,qDACblK,YAAa,SAAU2O,GACvB1O,aAAc,iBACdC,kBACE8C,KAAM,IACNS,SAAU,IACVE,OAAQ,IACRM,OAAQ,IACRQ,SAAU,IACV1D,SAAU,IACV+C,KAAM,IACN5H,SAAU,KAEZmD,UAxBJpJ,EACGC,OAAO,mBACP6J,UAAU,mBAAoB2O,GAEjCA,EAAgB1T,SAAW,0BA8D1B7E,OAAOF,QAASE,OAAOsB,OAAQtB,OAAOqB,GCrExC,SAAWvB,EAASuB,EAAGC,GAYtB,QACA6T,GAAwByD,EAASjM,EAAQzL,EAAuB6G,EAAiB9D,EAAc+B,EAAczE,GA6D3G,QAASiU,GAAwB/I,GAC/B,GAAIqD,EAOJ,OAJEA,GAFEzO,EAAEoU,SAAShJ,EAAOL,OAAOH,UAAW,aAE5B,GAEyD,GAAzDZ,KAAKgF,MAAM5D,EAAOoM,SAAW9T,EAAYlB,EAAKgJ,MAAQ,GAKpE,QAAS0G,GAAWe,EAAMpO,GACxB,GAAI4I,GAAOzO,SAAS6F,EAAMkG,OAAOuJ,aAAa,SAC1C7F,EAAU0F,EAAwBtP,GAClC2I,EAAOvN,EAAOxB,EAAQyC,KAAKsB,EAAK3D,MAAM2P,MAAMf,EAAOzO,SAASwD,EAAKyJ,SAASG,IAAIqC,QAAQA,EACrF8F,GAAa/G,GAGhB3N,EAAsB4E,yBAAyB,WAC7CjC,EAAK6P,cAAepH,MAAOgI,EAAM7H,OAAQvG,EAAO2P,MAAO/G,EAAMgH,SAAUhG,MAHzEjM,EAAK6P,cAAepH,MAAOgI,EAAM7H,OAAQvG,EAAO2P,MAAO/G,EAAMgH,SAAUhG,IAS3E,QAASiG,GAAYjH,EAAMrC,GACzB,GAAIqD,GAAU0F,EAAwB/I,GAClCoC,EAAOvN,EAAOxB,EAAQyC,KAAKsB,EAAK3D,MAAM2P,MAAMf,EAAOzO,SAASwD,EAAKyJ,SAASG,IAAIqC,QAAQA,EACrF8F,GAAa/G,GAGhB3N,EAAsB4E,yBAAyB,WAC7CjC,EAAKsP,eAAe0C,MAAO/G,EAAOzO,SAASwD,EAAKyJ,SAASG,GAAIqI,SAAUhG,MAHzEjM,EAAKsP,eAAe0C,MAAO/G,EAAOzO,SAASwD,EAAKyJ,SAASG,GAAIqI,SAAUhG,IAS3E,QAASlD,KACP,GAAIoJ,GAAY,CAEhBnS,GAAKoS,YACLpS,EAAKsS,UAELtS,EAAK+J,QAAU9N,EAAQyC,KAAKsB,EAAKiK,QACjCjK,EAAK7B,MAAQ6B,EAAK2J,OAAOC,EAAI5J,EAAKyJ,SAASG,EAC3C5J,EAAKuS,eAAiB,KAAOvS,EAAK7B,MAClC6B,EAAKwS,aAAetR,EAAYlB,EAAK7B,MAGrC6B,EAAK+J,QAAUvM,EAAEsO,OAAO9L,EAAK+J,QAAS,SAAUpE,GAC9C,MAAOA,GAAEvH,MAAMqU,WAGjB,IAAIrO,QACAsO,IACJlV,GAAEkH,KAAK1E,EAAK+J,QAAS,SAAU1H,GAC7B,GAAIkB,KAGJ,IAFAlB,EAAMoC,MAAQ,EACdpC,EAAMlE,MAAQV,EAAOU,MAAMkE,EAAMjE,MAAOiE,EAAMhE,KAC1CgE,EAAMlE,MAAQ,IAAQ,CACxB,GAAIE,GAAMZ,EAAO4E,EAAMjE,OAAOiK,IAAI,GAAI,UACtChG,GAAMlE,MAAQV,EAAOU,MAAMkE,EAAMjE,MAAOC,GAE1CkF,EAAMyD,MAAQ3E,EAAMjE,MAAM4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAO3G,EAAMjE,MAAM6N,UAAY/K,EAAYlB,EAAKgJ,KAAO,GAAK,KAEpIzF,EAAM+D,MAAQtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBnQ,EAAMlE,MAAS6B,EAAKuS,eAAiB,IAAO,KAC3FhP,EAAM,oBAAsBlB,EAAM,qBAAuB,UACrDjC,EAAaC,aAAakD,EAAM,qBAAsB,IACxDA,EAAM3C,MAAQ,QAEd2C,EAAM3C,MAAQ,QAEhByB,EAAMkB,MAAQA,EACdW,EAAgBC,QAAQC,EAAO/B,EAAOlB,EAAcuR,KAEtD1S,EAAK+J,QAAUvM,EAAEmV,WAAW3S,EAAK+J,QAAS2I,GAC1ClV,EAAEkH,KAAK1E,EAAK+J,QAAS,SAAU1H,GAiB7B,GAhBAA,EAAMuQ,GAAK3W,EAAQyC,KAAKyT,GACpB9P,EAAMwC,OAAS1D,IACjBkB,EAAMkB,MAAMyD,MAAQ3E,EAAMjE,MAAM4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAO3G,EAAMjE,MAAM6N,UAAY/K,EAAYlB,EAAKgJ,KAAO,GAAK,KAC1I3G,EAAMkB,MAAM+D,MAAQtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBnQ,EAAMlE,MAAMsU,UAAazS,EAAKuS,eAAiB,IAAO,KAC3GlQ,EAAMkB,MAAM,oBAAsB,OAClClB,EAAMkB,MAAM,eAAiB,OAC7BlB,EAAMwQ,MAAQxQ,EAAOyC,UAAU3B,OAAU,IAAM7B,EAC/Ce,EAAMkB,MAAM3C,MAAQ,OAChByB,EAAMyQ,UAASzQ,EAAMyQ,QAAUzQ,EAAMwQ,QAE3CxQ,EAAMkB,MAAM+D,MAAQtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBnQ,EAAMlE,MAAMsU,UAAazS,EAAKuS,eAAiB,IAAO,KACxFjW,SAAf+F,EAAMwC,OAAoBxC,EAAMwC,KAAO1D,GAC3CkB,EAAMkB,MAAMwP,IAAMvL,KAAKwL,MAAMxW,SAAU6F,EAAMwC,MAASoQ,EAAkB7Q,EAAMjB,QAAU,IACxFd,EAAMkB,MAAMqD,OAASY,KAAKwL,MAAMiC,EAAkB7Q,EAAMjB,QAAU,IAClEd,EAAMQ,WAAa,OACfR,EAAMsL,kBAAiBtL,EAAMmC,IAAM,GACnCnC,EAAMmC,IAAM,EAAG,CACjBnC,EAAMkB,MAAM,eAAiB,MAC7B,IAAI0P,GAAIxV,EAAO4E,EAAMjE,OAAO8E,SAASb,EAAMmC,IAAK,UAC3C/G,GAAOwV,GAAGjE,OAAO3M,EAAMjE,MAAO,SACjC6U,EAAIxV,EAAO4E,EAAMjE,OAAOwM,QAAQ,OAElC,IAAIjF,GAAIlI,EAAO4E,EAAMjE,OACjBY,EAAIvB,EAAOU,MAAM8U,EAAGtN,GACpB3C,EAAavF,EAAOU,MAAM8U,EAAG5Q,EAAMlE,MAAME,KACzCwE,EAAa7D,EAAEyT,UAAYzP,EAAWyP,UAAY,GACtDpQ,GAAMQ,WAAa,IAAOA,EAAc,GACxC,IAAIgJ,IACFhJ,WAAYA,EAAe,IAC3BU,OACEyD,MAASvJ,EAAOwV,GAAGjH,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvL,EAAQwV,GAAGhH,UAAa/K,EAAYlB,EAAKgJ,KAAO,GAAQ,KAChI1B,MAAOtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBxT,EAAEyT,UAAazS,EAAKuS,eAAiB,IAAO,KACpFQ,IAAK1Q,EAAMkB,MAAMwP,IACjBnM,OAAQvE,EAAMkB,MAAMqD,OACpBsM,WAAYlT,EAAKgJ,KAAOhJ,EAAKwS,aAAgBxP,EAAWyP,UAAazS,EAAKuS,eAAiB,IAAO,KAClGY,aAAc,SACdvS,MAAO,OACPwS,WAAe,oCAAuC/Q,EAAM,oBAAuB,KAAQA,EAAM,oBAAuB,iCACxHgR,aAAc,sBACdC,gBAAiB,sBACjBC,cAAe,uBAEjBT,QAAS,oBAAsBzQ,EAAMmC,IAAM,OAEzC3B,GAAa,EACf7C,EAAKoS,SAAS/P,EAAMuQ,IAAM/G,EAE1BxJ,EAAMmC,IAAM,EAGhBgP,EAAkBnR,GACdA,EAAMG,SACRH,EAAMkB,MAAM,oBAAsBpB,EAAaC,iBAAiBC,EAAO,aACvEA,EAAMkB,MAAM,oBAAsBjH,OAEpC,IAAMkI,GAAMxE,EAAKoS,SAAS/P,EAAMuQ,IAC1Ba,EAAOzT,EAAKqS,UAAUhQ,EAAMuQ,GAClCvQ,GAAMkB,MAAM2P,WAAaQ,EAAWrR,EAAMkB,MAAM+D,OAASoM,EAAUlW,EAAEmW,IAAInP,EAAK,gBAAkBkP,EAAUlW,EAAEmW,IAAIF,EAAM,gBAAkB,EAAK,KAC7ItB,MAEEnS,EAAKwC,QACPoR,IAEFsB,IAGF,QAASxB,KCLP,GDKkBpM,GAAK6M,UAAAhR,QAAA,GAAA7G,SAAA6X,UAAA,GAAG,MAAKA,UAAA,EAC/B,OAAO3X,UAAS8K,EAAM2J,QAAQ,KAAM,KAGtC,QAASuC,GAAmBnR,GAC1B,IAAKA,EAAMoR,KACT,MAAO,KAET,IAAIpV,GAAMZ,EAAO4E,EAAMhE,KAAKgK,IAAIhG,EAAMoR,KAAM,UACvChW,GAAOY,GAAK2Q,OAAO3M,EAAMhE,IAAK,SACjCA,EAAMZ,EAAO4E,EAAMhE,KAAKuO,MAAM,OAEhC,IAAMxO,GAAQX,EAAO4E,EAAMhE,KACrBF,EAAQV,EAAOU,MAAMC,EAAOC,GAC5B2E,EAAavF,EAAOU,MAAMkE,EAAMlE,MAAMC,MAAOiE,EAAMlE,MAAME,KACzDwE,EAAa1E,EAAMsU,UAAYzP,EAAWyP,UAAY,GAC5DpQ,GAAM6R,eAAiB,IAAOrR,EAAc,GAC5C,IAAIgJ,IACFhJ,WAAYA,EAAe,IAC3BU,OACEyD,MAASvJ,EAAOW,GAAO4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvL,EAAQW,GAAO6N,UAAa/K,EAAYlB,EAAKgJ,KAAO,GAAM,EAAM,KAC5I1B,MAAOtH,EAAKgJ,KAAOhJ,EAAKwS,aAAgBrU,EAAMsU,UAAazS,EAAKuS,eAAiB,IAAO,KACxFQ,IAAK1Q,EAAMkB,MAAMwP,IACjBnM,OAAQvE,EAAMkB,MAAMqD,OACpBsM,WAAYlT,EAAKgJ,KAAOhJ,EAAKwS,aAAgBxP,EAAWyP,UAAazS,EAAKuS,eAAiB,IAAO,KAClGY,aAAc,SACdvS,MAAO,OACPwS,WAAe,qCAAwC/Q,EAAM,oBAAuB,KAAQA,EAAM,oBAAuB,iCACzHgR,aAAc,sBACdC,gBAAiB,sBACjBC,cAAe,uBAEjBT,QAAS,oBAAsBzQ,EAAMoR,KAAO,OAE1C5Q,GAAa,EACf7C,EAAKqS,UAAUhQ,EAAMuQ,IAAM/G,EAE3BxJ,EAAMoR,KAAO,EAIjB,QAASI,GAAW7K,GAClB,MAAOxM,UAAUwM,GAAQ9H,EAAa,KAGxC,QAAS0S,KACP5T,EAAKsS,OAAS9U,EAAEsW,QAAQtW,EAAEe,IAAIyB,EAAKwC,OAAO8P,OAAQ,SAAUyB,GAC1D,GAAItR,IACFuR,KAAMD,EAAEC,KACR5V,MAAOX,IAASuO,MAAM+H,EAAE3V,MAAM8L,MAAM,KAAK,IAAIgB,OAAO6I,EAAE3V,MAAM8L,MAAM,KAAK,IAAIkB,OAAO,GAClF/M,IAAKZ,IAASuO,MAAM+H,EAAE1V,IAAI6L,MAAM,KAAK,IAAIgB,OAAO6I,EAAE1V,IAAI6L,MAAM,KAAK,IAAIkB,OAAO,GAC5E7H,SAGF,KAAId,EAAMrE,MAAMO,QAAQqB,EAAK2J,UAAWlH,EAAMpE,IAAII,SAASuB,EAAKyJ,UAchE,MAXIhH,GAAMrE,MAAMK,SAASuB,EAAKyJ,YAC5BhH,EAAMrE,MAAQX,EAAOxB,EAAQyC,KAAKsB,EAAKyJ,YAGrChH,EAAMpE,IAAIM,QAAQqB,EAAK2J,UACzBlH,EAAMpE,IAAMZ,EAAOxB,EAAQyC,KAAKsB,EAAK2J,UAGvClH,EAAMc,MAAMwP,KAAStV,EAAOgF,EAAMrE,OAAO4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvL,EAAQgF,EAAMrE,OAAO6N,UAAa/K,EAAYlB,EAAKgJ,KAAO,GAAQ,KAChKvG,EAAMc,MAAMqD,OAAS5G,EAAKgJ,KAAOhJ,EAAKwS,aAAgB/U,EAAOU,MAAMsE,EAAMrE,MAAOqE,EAAMpE,KAAKoU,UAAazS,EAAKuS,eAAiB,IAAO,KAE9H9P,KAIX,QAASyS,KACPlV,EAAKmV,gBAAkB3Y,SAAUwD,EAAKgJ,MAAQ9H,EAAa6T,EAAQ,SAAS/U,EAAK7B,OAAS,KAG5F,QAAS4T,GAAc/G,GACrB,GAAI3B,GAAI5L,EAAOxB,EAAQyC,KAAKsM,GAC5B,OAAOxN,GAAE4B,IAAIY,EAAKiU,UAAW,SAAU/V,GACrC,MAAOA,GAAIC,MAAMyT,SAASvI,KAtR9B,GAAInI,GAAYsG,KAAKzH,IAAI1C,EAAsB6D,UAAY,EAAG,GAC1DI,EAAejE,EAAsBiE,aACrCH,EAAe9D,EAAsB8D,aACrC8T,EAAkB,GAElBjV,EAAOC,IAEXD,GAAK+P,QAAU,WACbjH,EAAOkH,iBAAiB,WACtB,OAAQhQ,EAAKiK,OAAQjK,EAAKyJ,SAAUzJ,EAAK2J,SACxCZ,GAEHD,EAAOkH,iBAAiB,WACtB,MAAOhQ,GAAKpC,UACX,SAAUyW,EAAUD,GACrB,GAAItW,MAAMC,QAAQiC,EAAKpC,WAAaoC,EAAKpC,SAASuF,OAAQ,CACxD,GAAI/E,GAAQX,EAAOxB,EAAQyC,KAAKsB,EAAK3D,MAAMuO,QAAQ,OAC/CvM,EAAMZ,EAAOxB,EAAQyC,KAAKsB,EAAK3D,MAAMuQ,MAAM,MAC/C5M,GAAKiU,UAAYvW,EAAeC,cAAc1B,EAAQyC,KAAKsB,EAAKpC,WAAYQ,EAAOC,IAAME,IAAI,SAAUL;AASrG,MARAA,GAAIqF,OACFwP,KAAQtV,EAAOS,EAAIE,OAAO4N,QAAUhM,EAAKyJ,SAASG,GAAK1I,EAAYlB,EAAKgJ,KAAOvL,EAAQS,EAAIE,OAAO6N,UAAa/K,EAAYlB,EAAKgJ,KAAO,GAAQ,KAC/IpC,OAAQ5G,EAAKgJ,KAAOhJ,EAAKwS,aAAgB/U,EAAOU,MAAMD,EAAIE,MAAOF,EAAIG,KAAKoU,UAAazS,EAAKuS,eAAiB,IAAO,MAGtHrU,EAAIC,MAAQV,EAAOU,MAAMD,EAAIE,MAAOF,EAAIG,KACxCH,EAAG,MAAS,oBAAsBA,EAAIwT,aAAaF,MACnDtT,EAAI4U,QAAU5U,EAAIuT,YACXvT,QAGT8B,GAAKiU,eAKTzW,EAAE0C,OAAOF,GACPkS,WAAYA,EACZ2B,UAAWA,EACXnE,UAAWA,IAGb3G,KAGF/I,EAAKuU,IAAM,SAAUlG,KAGrBrO,EAAKiR,QAAU,SAAUuD,GACvB,GAAKA,EACL,MAAOA,GAAOvD,QAAQ,kBAAmB,KAG3CjR,EAAKoS,YACLpS,EAAKqS,aAuOP,QAASoC,KACP,OACErP,SAAU,IACV8K,YAAa,iEACblK,WAAYsL,EACZrL,aAAc,OACdC,kBACE8C,KAAM,IACNS,SAAU,IACVE,OAAQ,IACRM,OAAQ,IACRzH,OAAQ,KACRnG,IAAK,IACLuB,SAAU,KACV0R,cAAe,IACfO,aAAc,KAEhBxK,OAAO,GA7TXpJ,EACGC,OAAO,mBACP6J,UAAU,yBAA0B0O,GAEvCnD,EAAuBtQ,SAAW,UAAW,SAAU,wBAAyB,kBAAmB,eAAgB,eAAgB,mBA4TlI7E,OAAOF,QAASE,OAAOqB,EAAGrB,OAAOsB,QEnUnC,SAAWxB,EAASwB,EAAQD,GAY3B,QAAS8T,GAAwBxI,EAAQ5E,EAAiB7G,EAAuB+C,GAoB/E,QAAS2I,KACP/I,EAAKoV,gBAAkB5X,EAAEwC,EAAKiK,QAAQ6B,OAAO,SAAUzJ,GACrD,MAAOA,GAAMsL,iBAAkB,EAAMtL,EAAMoL,eAAiB,EAAI,IAC/D/N,QAEHM,EAAKoV,gBAAkBC,EAAYrV,EAAKoV,iBACxCpV,EAAKsM,aAAe+I,EAAYrV,EAAKsM,cAKvC,QAAS+I,GAAavQ,GACpB,GAAIV,QACAE,IAWJ,OAVA9G,GAAEkH,KAAKI,EAAW,SAAUzC,GAC1BA,EAAMkB,SACNlB,EAAMoC,MAAQ,EACdpC,EAAMlE,MAAQV,EAAOU,MAAMkE,EAAMjE,MAAOiE,EAAMhE,KAC9C6F,EAAgBC,QAAQC,EAAO/B,EAAOlB,EAAcmD,GAAU,KAEhEQ,EAAYtH,EAAEmV,WAAW7N,EAAWR,GACpC9G,EAAEkH,KAAKI,EAAW,SAAUzC,GAC1BiT,EAASjT,EAAO+B,EAAMjB,UAEjB2B,EAGT,QAASwQ,GAAUjT,EAAOuE,GACxBvE,EAAMkB,MAAMyD,KAAOuO,EAAclT,GACjCA,EAAMkB,MAAM+D,MAAQkO,EAAenT,GACnCA,EAAMkB,MAAM,oBAAsBlB,EAAM,oBACpCjC,EAAaC,aAAagC,EAAMkB,MAAM,qBAAsB,IAC9DlB,EAAMkB,MAAM3C,MAAQ,QAEpByB,EAAMkB,MAAM3C,MAAQ,QAGtByB,EAAMkB,MAAMwP,IAAMvL,KAAKiO,KAAoB,IAAfpT,EAAOwC,KAAc+B,GAAU,IAC3DvE,EAAMkB,MAAMqD,OAASY,KAAKwL,MAAM,IAAMpM,GAAU,IAC7BtK,SAAf+F,EAAMwC,OAAoBxC,EAAMwC,KAAO1D,GACvCkB,EAAMyC,WAAazC,EAAMyC,UAAU3B,OAAS,IAC9Cd,EAAMkB,MAAM,oBAAsB,OAClClB,EAAMkB,MAAM,MAAW,OACvBlB,EAAMkB,MAAM,eAAiB,OAC7BlB,EAAMwQ,MAAQxQ,EAAOyC,UAAU3B,OAAU,IAAM7B,EAC3Ce,EAAMyQ,UAASzQ,EAAMyQ,QAAUzQ,EAAMwQ,QAK7C,QAAS2C,GAAgBnT,GACvB,GAAIA,EAAMjE,MAAM/B,QAAUgG,EAAMhE,IAAIhC,MAClC,OAAQgG,EAAMhE,IAAIuE,KAAKP,EAAMjE,MAAO,QAAU,IAAM,IAAM,GAAK,GAE/D,IAAIwE,GAAO4E,KAAKiO,KAAKpT,EAAMhE,IAAIuE,KAAKP,EAAMjE,MAAO,SAAW,GAI5D,OAHIiE,GAAMhE,IAAI2N,QAAU3J,EAAMjE,MAAM4N,UAClCpJ,GAAQ,GAEHA,GAAS,IAAM,GAAM,IAIhC,QAAS2S,GAAelT,GACtB,OAASA,EAAMjE,MAAMiO,aAAe,IAAO,KAAO,GAAK,IAlFzD,GAAIrM,GAAOC,IAEXD,GAAK+P,QAAU,WACbvS,EAAE0C,OAAOF,GACPwV,eAAgBA,EAChBD,cAAeA,IAGjBxM,IAEAD,EAAOkH,iBAAiB,WACtB,OAAQhQ,EAAKiK,OAAQjK,EAAK2O,OACzB5F,GAIL,IAAIzH,GAAejE,EAAsBiE,aACrCH,EAAe9D,EAAsB8D,aAuE3C,QAASsT,KACP,OACErP,SAAU,IACV6L,SAAS,EACTf,YAAa,yDACblK,WAAYsL,EACZrL,aAAc,OACdC,kBACE+D,OAAQ,IACR0E,KAAM,IACNrC,aAAc,IACdgE,kBAAmB,KAErBjL,OAAO,GA/GXpJ,EACGC,OAAO,mBACP6J,UAAU,qBAAsB0O,GAEnCnD,EAAuBtQ,SAAW,SAAU,kBAAmB,wBAAyB,iBA8GvF7E,OAAOF,QAASE,OAAOsB,OAAQtB,OAAOqB,GCrHzCvB,QAAQC,OAAO,mBAAmBwZ,KAAK,iBAAkB,SAASC,GAAiBA,EAAeC,IAAI,wCAAwC,+TAC9ID,EAAeC,IAAI,qCAAqC,m4KACxDD,EAAeC,IAAI,mDAAmD,0oBACtED,EAAeC,IAAI,6DAA6D,8oBAChFD,EAAeC,IAAI,+CAA+C,y1FAClED,EAAeC,IAAI,qDAAqD,+QACxED,EAAeC,IAAI,iEAAiE,w8FACpFD,EAAeC,IAAI,yDAAyD","file":"planning.js","sourcesContent":[";(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning', ['pikaday', 'zlContextMenu'])\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n  angular\n    .module('90Tech.planning')\n    .filter('day', [function () {\n      return function (day) {\n        if (day === undefined || day === null || isNaN(day) || parseInt(day) > 6) return ''\n        return ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'][day]\n      }\n    }])\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .filter('format', function () {\n      return function (time, format) {\n        return time.format(format)\n      }\n    })\n    .filter('capitalize', function () {\n      return function (str) {\n        if (!str) return ''\n        return str.charAt(0).toUpperCase() + str.slice(1)\n      }\n    })\n})(window.angular)\n","/**\n * WebApp Agenda\n * http://docs.pluginit.fr/agenda\n *\n * Copyright 2014 PluginIT\n * Non permissive commercial License.\n */\n\n;(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .filter('range', RangeFilter)\n\n  /**\n   * Class Range for emulate a \"for\" loop\n   * @class RangeFilter\n   * @constructor\n   */\n  function RangeFilter () {\n    /**\n     * Return decimal values arrays at wished size\n     * @param input\n     * @param total\n     * @returns {*}\n     */\n    var operation = function (input, total) {\n      // We parse just in case\n      total = parseInt(total)\n\n      // We're adding at empty array the current value for the loop\n      for (var i = 0; i < total; i++) {\n        input.push(i)\n      }\n\n      // We return the array finally\n      return input\n    }\n\n    /**\n     * Return callback to execute RangeFilter\n     */\n    return operation\n  }\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n  angular\n    .module('90Tech.planning')\n    .filter('strPlanning', ['planningConfiguration', function (planningConfiguration) {\n      return function (val) {\n        return planningConfiguration.strings[val]\n      }\n    }])\n})(window.angular)\n",";(function (angular, _, moment) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .service('AbsenceService', AbsenceService)\n\n  function AbsenceService () {\n    var self = this\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      parseAbsences: parseAbsences\n    })\n\n    function parseAbsences (absences, interval) {\n      if (!Array.isArray(interval)) {\n        throw new Error('Invalid interval')\n      }\n      var parsed = absences.filter(function (abs) {\n        return moment.range(abs.start, abs.end).overlaps(moment.range(interval[0], interval[1]))\n      }).map(function (absence) {\n        if (moment(absence.start).isBefore(moment(angular.copy(interval[0])))) {\n          absence.start = interval[0]\n        }\n        if (moment(absence.end).isAfter(moment(angular.copy(interval[1])))) {\n          absence.end = interval[1]\n        }\n        return absence\n      })\n\n      return mergeRanges(parsed)\n    }\n\n    function mergeRanges (ranges) {\n      var copy = ranges.map(function (r, index) {\n        r.index = index\n        return Object.assign({}, r, {index: index})\n      })\n      // Check if any ranges overlaps\n      // If none overlap, return array\n      if (!_.any(copy, function (range1) {\n        return _.any(copy, function (range2) {\n          if (range1.index === range2.index) {\n            return false\n          }\n          return overlaps(range1, range2)\n        })\n      })) {\n        return ranges\n      }\n      var reduced = ranges.reduce(function (acc, value, index, arr) {\n        var next = arr[index + 1]\n        if (!next || !value) {\n          return acc\n        }\n        if (overlaps(\n          {\n            start: moment(angular.copy(value.start)).toDate(),\n            end: moment(angular.copy(value.end)).toDate()\n          }, {\n            start: moment(angular.copy(next.start)).toDate(),\n            end: moment(angular.copy(next.end)).toDate()\n          })) {\n          acc.push({\n            start: moment.min(\n              moment(angular.copy(value.start)),\n              moment(angular.copy(next.start))\n            ),\n            end: moment.max(\n              moment(angular.copy(value.end)),\n              moment(angular.copy(next.end))\n            )\n          })\n        }\n        return acc\n      }, [])\n\n      return mergeRanges(reduced)\n    }\n\n    function overlaps (range1, range2) {\n      return moment.range(range1.start, range1.end).overlaps(moment.range(range2.start, range2.end))\n    }\n  }\n\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n  angular.module('90Tech.planning').service('AbsenceService', AbsenceService);\n\n  function AbsenceService() {\n    var self = this;\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      parseAbsences: parseAbsences\n    });\n\n    function parseAbsences(absences, interval) {\n      if (!Array.isArray(interval)) {\n        throw new Error('Invalid interval');\n      }\n      var parsed = absences.filter(function (abs) {\n        return moment.range(abs.start, abs.end).overlaps(moment.range(interval[0], interval[1]));\n      }).map(function (absence) {\n        if (moment(absence.start).isBefore(moment(angular.copy(interval[0])))) {\n          absence.start = interval[0];\n        }\n        if (moment(absence.end).isAfter(moment(angular.copy(interval[1])))) {\n          absence.end = interval[1];\n        }\n        return absence;\n      });\n\n      return mergeRanges(parsed);\n    }\n\n    function mergeRanges(_x) {\n      var _again = true;\n\n      _function: while (_again) {\n        var ranges = _x;\n        _again = false;\n\n        var copy = ranges.map(function (r, index) {\n          r.index = index;\n          return Object.assign({}, r, { index: index });\n        });\n        // Check if any ranges overlaps\n        // If none overlap, return array\n        if (!_.any(copy, function (range1) {\n          return _.any(copy, function (range2) {\n            if (range1.index === range2.index) {\n              return false;\n            }\n            return overlaps(range1, range2);\n          });\n        })) {\n          return ranges;\n        }\n        var reduced = ranges.reduce(function (acc, value, index, arr) {\n          var next = arr[index + 1];\n          if (!next || !value) {\n            return acc;\n          }\n          if (overlaps({\n            start: moment(angular.copy(value.start)).toDate(),\n            end: moment(angular.copy(value.end)).toDate()\n          }, {\n            start: moment(angular.copy(next.start)).toDate(),\n            end: moment(angular.copy(next.end)).toDate()\n          })) {\n            acc.push({\n              start: moment.min(moment(angular.copy(value.start)), moment(angular.copy(next.start))),\n              end: moment.max(moment(angular.copy(value.end)), moment(angular.copy(next.end)))\n            });\n          }\n          return acc;\n        }, []);\n\n        _x = reduced;\n        _again = true;\n        copy = reduced = undefined;\n        continue _function;\n      }\n    }\n\n    function overlaps(range1, range2) {\n      return moment.range(range1.start, range1.end).overlaps(moment.range(range2.start, range2.end));\n    }\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .service('ColorService', ColorService)\n\n  ColorService.$inject = []\n\n  function ColorService () {\n    var self = this\n\n    _.extend(self, {\n      getLuminance: getLuminance\n    })\n\n\n    /**\n     * return the luminance of a color : > 200 is black\n     * @param c Color\n     * @returns {number}\n     */\n    function getLuminance (c) {\n      c = c || '#ffffff'\n      var r, g, b\n      var rgbRegex = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/\n      if (rgbRegex.test(c)){\n          var exec = rgbRegex.exec(c)\n           r = parseInt(exec[1])\n           g = parseInt(exec[2])\n           b = parseInt(exec[3])\n      } else {\n        var color = c.substring(1) // strip #\n        var rgb = parseInt(color, 16) // convert rrggbb to decimal\n        r = (rgb >> 16) & 0xff // extract red\n        g = (rgb >> 8) & 0xff // extract green\n        b = (rgb >> 0) & 0xff // extract blue\n      }\n\n      var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n      // luma > 200 : black\n      return luma\n    }\n\n  }\n}(window.angular, window._, window.moment))\n",";(function (angular) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .provider('planningConfiguration', function () {\n      var self = this\n\n      self.BASE_SIZE = 10\n      self.MAX_PARALLEL = 3\n      self.strings = {\n        nothing_to_show: 'Rien à afficher'\n      }\n\n      self.DAYS = [0, 1, 2, 3, 4, 5, 6]\n\n      self.parallelText = 'parallel items'\n\n      this.setParallelText = function (text) {\n        self.parallelText = '' + text\n      }\n\n      this.setBaseSize = function (size) {\n        self.BASE_SIZE = size\n      }\n      this.setMaxParallel = function (number) {\n        self.MAX_PARALLEL = number\n      }\n\n      this.setString = function (key, value) {\n        self.strings[key] = value\n      }\n\n      this.setDays = function (value) {\n        self.DAYS = value\n      }\n\n      this.$get = [function () {\n        return {\n          strings: self.strings,\n          BASE_SIZE: self.BASE_SIZE,\n          MAX_PARALLEL: self.MAX_PARALLEL,\n          parallelText: self.parallelText,\n          DAYS: self.DAYS,\n          absentTechnicianCallback: function (callback) {\n            callback()\n          }\n        }\n      }]\n    })\n}(window.angular))\n",";(function (angular, _, moment) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .service('PauseService', PauseService)\n\n  PauseService.$inject = ['ColorService']\n\n  function PauseService (ColorService) {\n    var self = this\n\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      generateGradient: generateGradient\n    })\n\n    function generateGradient (event, direction) {\n      var color = event.style['background-color']\n      var pauseColor = invertColor(color)\n      var start = event.start\n      var end = event.end\n      var totalRange = moment.range(start, end)\n      var totalDuration = totalRange.diff('milliseconds')\n\n      function parsePause (pauses) {\n        return _.map(pauses, function (pause) {\n          var start = event.start.isAfter(pause.start) ? event.start : pause.start\n          var end = event.end.isBefore(pause.end) ? event.end : pause.end\n          var pauseRange = moment.range(start, end)\n          var pauseDuration = pauseRange.diff('milliseconds')\n          var percentage = pauseDuration / totalDuration * 100\n          var before = totalRange.clone()\n          before.subtract(pauseRange)\n          if (!before.length) {\n            return {range: pauseRange, endPercentage: 100, startPercentage: 0}\n          }\n          var v = (before[0].diff('milliseconds') || totalDuration) / totalDuration * 100\n          return {range: pauseRange, endPercentage: percentage + v, startPercentage: v}\n        })\n      }\n\n      var mapped = parsePause(event.pauses)\n\n      var reduced = _.reduce(mapped, function (acc, range) {\n        return acc + ', ' + color + ' ' + range.startPercentage + '%, ' + pauseColor + ' ' + range.startPercentage + '%, ' + pauseColor + ' ' + range.endPercentage + '%, ' + color + ' ' + range.endPercentage + '%'\n      }, 'linear-gradient(' + direction + ', ' + color)\n\n      reduced += ', ' + color + ' 100%)'\n      return reduced\n    }\n\n    function invertColor (hex) {\n      if (hex.indexOf('#') === 0) {\n        hex = hex.slice(1)\n      }\n      // convert 3-digit hex to 6-digits.\n      if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n      }\n      if (hex.length !== 6) {\n        throw new Error('Invalid HEX color.')\n      }\n      // invert color components\n      var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16)\n      // pad each with zeros and return\n      return '#' + padZero(r) + padZero(g) + padZero(b)\n    }\n\n    function padZero (str, len) {\n      len = len || 2\n      var zeros = new Array(len).join('0')\n      return (zeros + str).slice(-len)\n    }\n  }\n\n})(window.angular, window._, window.moment)\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .service('PositionService', PositionService)\n\n  PositionService.$inject = []\n\n  function PositionService () {\n    var self = this\n\n    _.extend(self, {\n      // Public Methods\n      overlap: overlap\n    })\n\n    /**\n     * Check if event overlap any events in line, merge if parallel items is over maxParallelEvents, and push event in toRemove\n     * @param lines Arrays, containing events example : [[event, event][event,event][event]]\n     * @param event Event\n     * @param maxParallelEvents Int, maximum parallelEvents\n     * @param toRemove Array containing event which have been integrated/merged with another event\n     * @param doublecheck Boolean If true, check if day isn't same between two events (useful for monthly view where hours doesn't overlap on same day)\n     */\n    function overlap (lines, event, maxParallelEvents, toRemove, doublecheck) {\n      var range = event.pre > 0\n        ? moment.range(moment(event.start).subtract(event.pre, 'minutes'), moment(event.end))\n        : event.range\n      for (var i = 0; i < lines.length; i++) {\n        if (event.depth > maxParallelEvents) {\n          var overlap = false\n          _.each(lines[maxParallelEvents], function (elt) {\n\n            var eltRange = elt.pre > 0\n              ? moment.range(moment(elt.start).subtract(elt.pre, 'minutes'), moment(elt.end))\n              : elt.range\n\n            overlap = range.overlaps(eltRange)\n            if (!overlap && doublecheck) {\n              overlap = (event.start.day() === elt.start.day() || event.start.day() === elt.end.day() || event.end.day() === elt.start.day() || event.end.day() === elt.end.day())\n            }\n            if (overlap) {\n              elt.start = moment.min(event.start, elt.start) // set start to minimum of 2 overlapping event\n              elt.end = moment.max(event.end, elt.end)  // set end to maximum of 2 overlapping event\n              elt.range = moment.range(elt.start, elt.end) // Update range\n              elt.line = maxParallelEvents\n              elt.eventList.push(event)\n              if (elt.technician !== event.technician) { // Technician isn't the same, hide it\n                elt.technician = ''\n                event.technician = ''\n              }\n            }\n          })\n          if (overlap) {\n            toRemove.push(event)\n            break\n          }\n          event.depth = maxParallelEvents\n          event.line = maxParallelEvents\n          if (!event.eventList) {\n            var eventClone = _.cloneDeep(event)\n            event.eventList = [eventClone]\n          }\n          lines[maxParallelEvents].push(event)\n          break\n        }\n        if (!lines[i].length) {\n          lines[i].push(event)\n          event.line = i\n          break\n        }\n        if (_.filter(lines[i], function (elt) { // if any event in lines[i] overlap\n          var eltRange = elt.pre > 0\n            ? moment.range(moment(elt.start).subtract(elt.pre, 'minutes'), moment(elt.end))\n            : elt.range\n          overlap = range.overlaps(eltRange)\n          if (!overlap && doublecheck) {\n            overlap = (event.start.day() === elt.start.day() || event.start.day() === elt.end.day() || event.end.day() === elt.start.day() || event.end.day() === elt.end.day())\n          }\n          if (overlap) {\n            elt.depth += 1\n            return true\n          } }).length) {\n          event.depth += 1\n          if (!lines[i + 1]) { // if next line is doesn't exist, add one\n            lines[i + 1] = []\n          }\n        } else {\n          lines[i].push(event)\n          event.line = i\n          break\n        }\n      }\n    }\n  }\n}(window.angular, window._, window.moment))\n","/**\n * @author Toolito <toolito@90tech.fr>\n * @copyright 2015 Zenlabs SAS. All rights reserved.\n *\n * TODO Export in separate module ?\n */\n;(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlHorizontalScroll', ScrollHorizontalDirective)\n\n  ScrollHorizontalDirective.$inject = ['$timeout']\n\n  function ScrollHorizontalDirective ($timeout) {\n    return {\n      restrict: 'A',\n      scope: {\n        scrollLeft: '='\n      },\n      link: function link (scope, element,  attributes) { // eslint-disable-line\n        element.bind('mousewheel', function (e) {\n          element[0].scrollLeft -= e.wheelDelta / 3\n        })\n        element.addClass('slider')\n\n        if (scope.scrollLeft) {\n        }\n\n        $timeout(function () {\n          // Needs a delay since the offsetWidth we obtain first is off by ~300px\n          element[0].scrollLeft = scope.scrollLeft - element[0].offsetWidth / 2\n        }, 100)\n      }\n    }\n  }\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningDragDrop', function () {\n      return {\n        controller: function () {},\n        scope: {},\n        controllerAs: 'dragDropCtrl',\n        bindToController: {\n          zlDrag: '=',\n          zlDrop: '&'\n        },\n        link: function (scope, element) {\n          var dragImage  = document.createElement('div')\n          var el = element[0]\n          window.addEventListener('dragover', function (e) {\n            e.preventDefault();\n          }, false);\n          window.addEventListener('drop', function (e) {\n            e.preventDefault();\n          }, false);\n\n          if (el.attributes['zl-drag']) {\n            el.draggable = true\n\n            el.addEventListener(\n              'dragstart',\n              function (e) {\n                dragImage.style.height = el.clientHeight + 'px'\n                dragImage.style.zIndex = '1000'\n                dragImage.style.position = 'relative'\n                dragImage.style.left = '-10000px'\n                dragImage.style.bottom = '-10000px;'\n                dragImage.innerHTML = el.innerHTML\n                if (el.children.length > 1) {\n                  dragImage.children[0].style.float = 'left'\n                  dragImage.style.backgroundColor = el.children[1].style.backgroundColor\n                  dragImage.style.width = el.clientWidth + 'px'\n                } else {\n                  dragImage.style.width = Math.min(el.clientWidth, 200) + 'px'\n                  dragImage.style.backgroundColor = el.children[0].style.backgroundColor\n                }\n                e.dataTransfer.effectAllowed = 'move'\n\n                document.body.appendChild(dragImage)\n\n                if (e.dataTransfer.setDragImage) {\n                  e.dataTransfer.setDragImage(dragImage,0,0)\n                }\n                // Remove tooltips on drag\n                _.each(document.querySelectorAll('.planning-event-tooltip'), function (elt) {\n                  elt.remove()\n                })\n                e.dataTransfer.setData('Text', JSON.stringify(scope.dragDropCtrl.zlDrag))\n                this.classList.add('drag')\n                return false\n              },\n              false\n            )\n\n            el.addEventListener(\n              'dragend',\n              function (e) {\n                dragImage.remove()\n                this.classList.remove('drag')\n                return false\n              },\n              false\n            )\n          }\n          if (el.attributes['zl-drop']) {\n            el.addEventListener(\n              'drop',\n              function (e) {\n                e.preventDefault()\n                e.stopPropagation()\n                if (e.stopPropagation) e.stopPropagation()\n                e.target.classList.remove('over')\n                this.classList.remove('over')\n                scope.$apply(function () {\n                  scope.dragDropCtrl.zlDrop({ $data: JSON.parse(e.dataTransfer.getData('Text')), $event: e })\n                })\n                return false\n              },\n              false\n            )\n\n            el.addEventListener(\n              'dragenter',\n              function (e) {\n                e.target.classList.add('over')\n                return false\n              },\n              false\n            )\n\n            el.addEventListener(\n              'dragleave',\n              function (e) {\n                e.target.classList.remove('over')\n                return false\n              },\n              false\n            )\n          }\n\n        }\n      }\n    })\n})(window.angular)\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanning', PlanningDirective)\n\n  PlanningController.$inject = ['$scope', 'planningConfiguration']\n\n  function PlanningController ($scope, planningConfiguration) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        //  sortedEvents       : sortedEvents,\n        isToday: isToday,\n        currentTimeToPixels: currentTimeToPixels,\n        isCurrent: isCurrent,\n        clickCallbackWrapper: clickCallbackWrapper,\n        isInDayRange: isInDayRange,\n        keys: keys,\n        getEvents: getEvents,\n        clickWeekEvent: clickWeekEvent,\n        dropEvent: dropEvent\n      })\n\n      init()\n    }\n\n    function init () {\n      self.zoom = parseInt(self.zoom)\n      self.allowedDays = self.usableDays.sort() || planningConfiguration.DAYS\n      self.daysList = self.allowedDays.map(function (i) {\n        var d = moment(self.position)\n        d.weekday(i)\n        return d\n      })\n\n      if (!self.zoom || self.zoom < 1) {\n        self.zoom = 1\n      }\n\n      self._dayStart = self.dayStart ? parseTime(self.dayStart) : parseTime(0)\n      self._dayEnd = self.dayEnd ? parseTime(self.dayEnd) : parseTime(24)\n      self.width = (self.zoom * (parseInt(self._dayEnd.h) - parseInt(self._dayStart.h) + 1) * BASE_SIZE) + 'px'\n      self.sortedEvents = undefined\n      switch (self.mode) {\n        case 'week':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e.start.format('DD/MM/YYYY')\n          })\n          addMissingDays(self.sortedEvents)\n          break\n        case 'day':\n        case 'week-advanced':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e[self.dayField]\n          })\n          /* If we are in advanced week mode, we have a double grouping: first by technician, then by day of week */\n          if (self.mode === 'week-advanced') {\n            self.sortedEvents = _.mapValues(self.sortedEvents, function (eventsByTechnician) {\n              return _.groupBy(eventsByTechnician, function (e) {\n                return e.start.weekday()\n              })\n            })\n          }\n          addMissingEntities(self.sortedEvents)\n          break\n        case '3day':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n          self.sortedEvents = _.reduce(self.entities, function (acc, v) {\n            acc[v] = []\n            return acc\n          }, {})\n\n          var keys = _.keys(self.sortedEvents)\n          self.groupedEvents = _.map(_.groupBy(self._events, function (e) {\n            return moment(e.start).startOf('day').unix()\n          }), function (v, k) {\n            var result = {\n              key: k,\n              date: moment.unix(k).startOf('day').toDate(),\n              day: moment.unix(k).startOf('day').format('dddd DD MMMM'),\n              value: _.groupBy(v, function (e) {\n                return e.technician\n              }),\n              absences: angular.copy(self.absences)\n            }\n            _.each(self.entities, function (e) {\n              if (!result.value[e]) {\n                result.value[e] = []\n              }\n            })\n            return result\n          })\n\n          var start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n          var stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n          var days = [{start: angular.copy(start), end: angular.copy(stop)}]\n\n          var j = 0\n          while (j < 2) {\n            stop.add(1, 'day')\n            var d = stop.day() - 1\n            if (d < 0) {\n              d = 6\n            }\n            if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n              days.push({start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)})\n              j++\n            }\n          }\n\n          _.each(days, function (d) {\n            var date = \"\" + moment(d.start).startOf('day').unix()\n\n            var found = _.find(self.groupedEvents, function (group) {\n              return group.key === date\n            })\n\n            if (!found) {\n              var obj = {\n                key: date,\n                date: moment(angular.copy(d.start)).startOf('day').toDate(),\n                day: moment(angular.copy(d.start)).startOf('day').format('dddd DD MMMM'),\n                value: {},\n                absences: angular.copy(self.absences)\n              }\n              _.each(_.keys(self.sortedEvents), function (k) {\n                obj.value[k] = []\n              })\n              self.groupedEvents.push(obj)\n            }\n          })\n          self.groupedEvents = _.sortBy(self.groupedEvents, function (e) {\n            return e.key\n          })\n          break\n        case 'month':\n          var firstDay = moment(self.position).date(1).hours(0).minutes(0).seconds(0)\n          self.month = moment(self.position).date(1).hours(0).minutes(0).seconds(0).format('MMMM')\n          self.decallage = firstDay.isoWeekday() - 1 //\n\n          if (self.decallage < 0) {\n            self.decallage = 0\n          }\n          self.oneDayEvents = _(self.events)\n            .filter(function (event) {\n              return event.start.dayOfYear() === event.end.dayOfYear() && event.start.month() === moment(self.position).month()\n            })\n            .groupBy(\n              function (event) { return Math.floor((event.start.date() + self.decallage) / 7.01) }) // 7.01 -> Fix issue when start day = 7 (sunday)\n            .value()\n          self.multipleDaysEvents = _(self.events)\n            .filter(function (event) {\n              return event.start.dayOfYear() !== event.end.dayOfYear()\n            })\n            .map(splitByWeeks)\n            .flatten()\n            .groupBy(function (event) {\n              return Math.floor((event.start.date() + self.decallage) / 7.01) // 7.01 -> Fix issue when start day = 7 (sunday)\n            })\n            .value()\n\n\n          var endWeek = moment(self.position).endOf('month').isoWeek()\n          var startWeek = moment(self.position).startOf('month').isoWeek()\n          // When switching years, last week of month can be 1\n          if (endWeek === 1) {\n            endWeek = moment(self.position).isoWeeksInYear() + 1\n          }\n          if (endWeek < startWeek) {\n            endWeek = startWeek + endWeek\n          }\n          var weekInMonth = endWeek - startWeek + 1\n          for (var i = 0; i < weekInMonth; i++) {\n            if (self.multipleDaysEvents[i] === undefined) {\n              self.multipleDaysEvents[i] = []\n            }\n          }\n          self.days = []\n          // Add day from previous month\n          if (firstDay.isoWeekday() - 1 > 0) {\n            for (i = 0; i < firstDay.isoWeekday() - 1; i++) {\n              self.days.unshift({})\n            }\n          }\n          _.times(firstDay.daysInMonth(), function (n) {\n            var day = moment(firstDay).add(n, 'days')\n            self.days.push({ date: day, events: [] })\n          })\n\n          var displayedDaysCount = (self.days.length > 35 ? 42 : 35)\n          while (self.days.length < displayedDaysCount) {\n            self.days.push({})\n          }\n          break\n      }\n    }\n\n    function split (event) {\n      // Event starts and ends the same day\n      event = angular.copy(event)\n\n      var start = moment(event.start).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n      var stop = moment(event.end).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n      if (event.start.dayOfYear() === event.end.dayOfYear()) {\n        // reset the boundaries if they exceed the one fixed.\n        // And trim events that are entirely out of the boundaries\n        if (event.start.isBefore(start)) {\n          if (event.end.isBefore(start)) {\n            return []\n          }\n          event.start = start\n        }\n        if (event.end.isAfter(stop)) {\n          if (event.start.isAfter(stop)) {\n            return []\n          }\n          event.end = stop\n        }\n        return [event]\n      }\n      // Event is on several days.\n      // Build a first event that ends at the end of the first day\n      var first_event = angular.copy(event)\n      first_event.end = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n      if (event.start.isBefore(start)) {\n        first_event.start = start\n      }\n\n      var startNextDay = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m)\n      var endThisDay = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m)\n      if (event.end.isBefore(startNextDay)) {\n        if (first_event.start.isAfter(endThisDay)) {\n          return []\n        }\n        // Event finishes before start hour next day. No need to create another one\n        return [first_event]\n      }\n      first_event.continuedAfter = true\n\n      // Build a second event that starts at the beginning of the following days.\n      // This event may end several days later. Recursion will handle it\n      var second_event = angular.copy(event)\n      second_event.start = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m)\n      second_event.continuedBefore = true\n\n      if (event.start.isAfter(endThisDay)) {\n        // If the first event starts after curfew, don't add it\n        return split(second_event)\n      }\n\n      return [first_event].concat(split(second_event))\n    }\n\n    function splitByWeeks (event) {\n      if (event.start.isAfter(event.end)) {\n        var st = event.start\n        event.start = event.end\n        event.end = st\n      }\n\n      if (event.start.year() < self.position.year() || event.start.month() < self.position.month()) {\n        // Event starts before our current month\n        if (event.end.year() < self.position.year() || event.end.month() < self.position.month()) {\n          // Event also ends before. Return nothing\n          return []\n        }\n        // Set the beginning at the start of the month\n        event.start = moment(self.position).startOf('month')\n      }\n      if (event.end.month() > self.position.month() || event.end.year() !== self.position.year()) {\n        // Event ends after current month\n        if (event.start.month() > self.position.month()) {\n          return []\n        }\n        event.end = moment(self.position).endOf('month')\n      }\n      // console.info(_.cloneDeep(event))\n      if (event.start.isoWeek() === event.end.isoWeek()) {\n        // If our event is on one week, we're all set\n        return [event]\n      }\n\n      // Split\n      var firstEvent = angular.copy(event)\n      var secondEvent = angular.copy(event)\n      // make it end on the same week\n      firstEvent.continuedAfter = true\n      secondEvent.continuedBefore = true\n      firstEvent.end = moment(firstEvent.start).endOf('week')\n      secondEvent.start.add(1, 'week').startOf('week')\n      // Recursion will handle potential split needed by second event\n      return [firstEvent].concat(splitByWeeks(secondEvent))\n    }\n\n    function filter (events) { // remove event not in range (month, week, day)\n      return _.filter(events, function (e) {\n        var start, stop\n        switch (self.mode) {\n          case 'week':\n          case 'week-advanced':\n            start = moment(self.position).weekday(0).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).weekday(6).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            break\n          case 'day':\n            start = moment(self.position).startOf('day').hour(self._dayStart.h).minute(self._dayStart.m)\n            stop = moment(self.position).endOf('day').hour(self._dayEnd.h).minute(self._dayEnd.m)\n            break\n          case '3day':\n            start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            var days = [{start: angular.copy(start), end: angular.copy(stop)}]\n\n            var i = 0\n            while (i < 2) {\n              stop.add(1, 'day')\n              var d = stop.day() - 1\n              if (d < 0) {\n                d = 6\n              }\n              if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n                days.push({start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)})\n                i++\n              }\n            }\n            return _.some(days, function (d) {\n              return e.start.isBetween(d.start, d.end) || e.end.isBetween(d.start, d.end)\n            })\n          case 'month':\n            start = moment(self.position).date(1).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).weekday(moment(self.position).daysInMonth()).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            break\n        }\n        return e.start.isBetween(start, stop) || e.end.isBetween(start, stop)\n      })\n    }\n\n    function addMissingDays (sortedEvents) {\n      sortedEvents = sortedEvents || {}\n      var startingDay = moment(self.position).weekday(0)\n      _.times(7, function (i) {\n        var newDate = moment(angular.copy(startingDay)).add(i, 'days').format('DD/MM/YYYY')\n        if (!sortedEvents[newDate]) {\n          sortedEvents[newDate] = []\n        }\n      })\n    }\n\n    function addMissingEntities (sortedEvents) {\n      sortedEvents = sortedEvents || {}\n      _.each(self.entities, function (e) {\n        if (!sortedEvents[e]) {\n          sortedEvents[e] = []\n        }\n      })\n    }\n\n    function parseTime (h) {\n      if (h >= 24) {\n        return { h: 23, m: 59 }\n      }\n      return { h: h, m: 0 }\n    }\n\n    function keys (sortedEvents) {\n      switch (self.mode) {\n        case 'week':\n          return Object.keys(sortedEvents).sort(function(a, b) {\n            var dateA = dateFromString(a)\n            var dateB = dateFromString(b)\n            return dateA - dateB\n          })\n        case 'week-advanced':\n        case 'day':\n        case '3day':\n          return Object.keys(sortedEvents).sort()\n      }\n    }\n\n    function getEvents (key) {\n      return self.sortedEvents[key]\n    }\n\n    $scope.$watchCollection(function () {\n      return [self.events, self.entities, self.position, self.mode, self.dayStart, self.dayEnd, self.zoom, self.usableDays]\n    }, init)\n\n    function isToday (n) {\n      return self.position.week() === moment().week() && n === moment().dayOfYear()\n    }\n\n    function isInDayRange () {\n      return moment().hour() > parseInt(self._dayStart.h) && moment().hour() < parseInt(self._dayEnd.h)\n    }\n\n    function currentTimeToPixels () {\n      var totalMinutes = (moment().hour() - parseInt(self._dayStart ? self._dayStart.h : 0)) * 60 + moment().minutes()\n      return Math.floor(self.zoom * (BASE_SIZE * totalMinutes) / 60)\n    }\n\n    function isCurrent () {\n      return self.position.isSame(moment(), self.mode)\n    }\n\n    function clickCallbackWrapper (opts) {\n      var mom\n      var entity\n      switch (self.mode) {\n        case 'week':\n          var split = opts.d.split('/')\n          /**\n           * split[2] === year\n           * split[1] === month, we need to subtract 1 because momentJS months starts at 0\n           * split[0] === dayOfMonth\n           */\n          mom = moment(new Date(split[2], split[1] - 1, split[0], opts.h, opts.m))\n          break\n        case '3day':\n        case 'day':\n          mom = moment(self.position).hour(opts.h).minute(opts.m)\n          entity = opts.entity\n          break\n        case 'week-advanced':\n          entity = opts.entity\n          mom = moment(self.position).hour(opts.h).minute(opts.m).second(0).weekday(opts.d)\n          break\n      }\n      self.clickCallback({ $moment: mom, $entity: entity })\n    }\n\n    function clickWeekEvent (day, $event) {\n      if (day.date) {\n        self.clickCallback({ $moment: day.date })\n      }\n    }\n\n    function dropEvent (config) {\n      var mom = config.moment\n      if (!mom) {\n        switch (self.mode) {\n          case 'week':\n            var doy = moment(dateFromString(config.d)).dayOfYear()\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).dayOfYear(doy)\n            break\n          case 'week-advanced':\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).weekday(config.d)\n            break\n          case 'day':\n            mom = moment(self.position).hour(config.h).minute(config.m)\n            break\n          case '3day':\n            mom = moment.unix(config.day).hour(config.h).minute(config.m)\n        }\n      }\n      var entity = (_.includes(['week-advanced', 'day', '3day'], self.mode)) ? config.entity : undefined\n      self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity })\n    }\n\n    function calculateAdvancedWeekContainerHeight () {\n      return (parseInt(self.zoom) * Math.max(planningConfiguration.BASE_SIZE - 8, 1)) + 'px'\n    }\n\n    function dateFromString (date) {\n      var dateSplitted = date.split('/')\n      return new Date(dateSplitted[2], dateSplitted[1] - 1, dateSplitted[0])\n    }\n\n  }\n\n  function PlanningDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning/planning.html',\n      controller: PlanningController,\n      controllerAs: 'planning',\n      bindToController: {\n        zoom: '=',\n        events: '=',\n        entities: '=',\n        entitiesPauses: '=?',\n        absences: '=?',\n        position: '=',\n        mode: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        dayField: '=',\n        eventCallback: '&',\n        dayCallback: '&',\n        clickCallback: '&',\n        weekEventCallback: '&',\n        dropCallback: '&',\n        usableDays: '=?',\n        action: '&?'\n      },\n      scope: {}\n    }\n  }\n})(window.angular, window.moment, window._)\n","'use strict';\n\n;(function (angular, moment, _) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanning', PlanningDirective);\n\n  PlanningController.$inject = ['$scope', 'planningConfiguration'];\n\n  function PlanningController($scope, planningConfiguration) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE;\n\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        //  sortedEvents       : sortedEvents,\n        isToday: isToday,\n        currentTimeToPixels: currentTimeToPixels,\n        isCurrent: isCurrent,\n        clickCallbackWrapper: clickCallbackWrapper,\n        isInDayRange: isInDayRange,\n        keys: keys,\n        getEvents: getEvents,\n        clickWeekEvent: clickWeekEvent,\n        dropEvent: dropEvent\n      });\n\n      init();\n    };\n\n    function init() {\n      self.zoom = parseInt(self.zoom);\n      self.allowedDays = self.usableDays.sort() || planningConfiguration.DAYS;\n      self.daysList = self.allowedDays.map(function (i) {\n        var d = moment(self.position);\n        d.weekday(i);\n        return d;\n      });\n\n      if (!self.zoom || self.zoom < 1) {\n        self.zoom = 1;\n      }\n\n      self._dayStart = self.dayStart ? parseTime(self.dayStart) : parseTime(0);\n      self._dayEnd = self.dayEnd ? parseTime(self.dayEnd) : parseTime(24);\n      self.width = self.zoom * (parseInt(self._dayEnd.h) - parseInt(self._dayStart.h) + 1) * BASE_SIZE + 'px';\n      self.sortedEvents = undefined;\n      switch (self.mode) {\n        case 'week':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e.start.format('DD/MM/YYYY');\n          });\n          addMissingDays(self.sortedEvents);\n          break;\n        case 'day':\n        case 'week-advanced':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e[self.dayField];\n          });\n          /* If we are in advanced week mode, we have a double grouping: first by technician, then by day of week */\n          if (self.mode === 'week-advanced') {\n            self.sortedEvents = _.mapValues(self.sortedEvents, function (eventsByTechnician) {\n              return _.groupBy(eventsByTechnician, function (e) {\n                return e.start.weekday();\n              });\n            });\n          }\n          addMissingEntities(self.sortedEvents);\n          break;\n        case '3day':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n          self.sortedEvents = _.reduce(self.entities, function (acc, v) {\n            acc[v] = [];\n            return acc;\n          }, {});\n\n          var keys = _.keys(self.sortedEvents);\n          self.groupedEvents = _.map(_.groupBy(self._events, function (e) {\n            return moment(e.start).startOf('day').unix();\n          }), function (v, k) {\n            var result = {\n              key: k,\n              date: moment.unix(k).startOf('day').toDate(),\n              day: moment.unix(k).startOf('day').format('dddd DD MMMM'),\n              value: _.groupBy(v, function (e) {\n                return e.technician;\n              }),\n              absences: angular.copy(self.absences)\n            };\n            _.each(self.entities, function (e) {\n              if (!result.value[e]) {\n                result.value[e] = [];\n              }\n            });\n            return result;\n          });\n\n          var start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n          var stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n          var days = [{ start: angular.copy(start), end: angular.copy(stop) }];\n\n          var j = 0;\n          while (j < 2) {\n            stop.add(1, 'day');\n            var d = stop.day() - 1;\n            if (d < 0) {\n              d = 6;\n            }\n            if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n              days.push({ start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59) });\n              j++;\n            }\n          }\n\n          _.each(days, function (d) {\n            var date = \"\" + moment(d.start).startOf('day').unix();\n\n            var found = _.find(self.groupedEvents, function (group) {\n              return group.key === date;\n            });\n\n            if (!found) {\n              var obj = {\n                key: date,\n                date: moment(angular.copy(d.start)).startOf('day').toDate(),\n                day: moment(angular.copy(d.start)).startOf('day').format('dddd DD MMMM'),\n                value: {},\n                absences: angular.copy(self.absences)\n              };\n              _.each(_.keys(self.sortedEvents), function (k) {\n                obj.value[k] = [];\n              });\n              self.groupedEvents.push(obj);\n            }\n          });\n          self.groupedEvents = _.sortBy(self.groupedEvents, function (e) {\n            return e.key;\n          });\n          break;\n        case 'month':\n          var firstDay = moment(self.position).date(1).hours(0).minutes(0).seconds(0);\n          self.month = moment(self.position).date(1).hours(0).minutes(0).seconds(0).format('MMMM');\n          self.decallage = firstDay.isoWeekday() - 1; //\n\n          if (self.decallage < 0) {\n            self.decallage = 0;\n          }\n          self.oneDayEvents = _(self.events).filter(function (event) {\n            return event.start.dayOfYear() === event.end.dayOfYear() && event.start.month() === moment(self.position).month();\n          }).groupBy(function (event) {\n            return Math.floor((event.start.date() + self.decallage) / 7.01);\n          }) // 7.01 -> Fix issue when start day = 7 (sunday)\n          .value();\n          self.multipleDaysEvents = _(self.events).filter(function (event) {\n            return event.start.dayOfYear() !== event.end.dayOfYear();\n          }).map(splitByWeeks).flatten().groupBy(function (event) {\n            return Math.floor((event.start.date() + self.decallage) / 7.01); // 7.01 -> Fix issue when start day = 7 (sunday)\n          }).value();\n\n          var endWeek = moment(self.position).endOf('month').isoWeek();\n          var startWeek = moment(self.position).startOf('month').isoWeek();\n          // When switching years, last week of month can be 1\n          if (endWeek === 1) {\n            endWeek = moment(self.position).isoWeeksInYear() + 1;\n          }\n          if (endWeek < startWeek) {\n            endWeek = startWeek + endWeek;\n          }\n          var weekInMonth = endWeek - startWeek + 1;\n          for (var i = 0; i < weekInMonth; i++) {\n            if (self.multipleDaysEvents[i] === undefined) {\n              self.multipleDaysEvents[i] = [];\n            }\n          }\n          self.days = [];\n          // Add day from previous month\n          if (firstDay.isoWeekday() - 1 > 0) {\n            for (i = 0; i < firstDay.isoWeekday() - 1; i++) {\n              self.days.unshift({});\n            }\n          }\n          _.times(firstDay.daysInMonth(), function (n) {\n            var day = moment(firstDay).add(n, 'days');\n            self.days.push({ date: day, events: [] });\n          });\n\n          var displayedDaysCount = self.days.length > 35 ? 42 : 35;\n          while (self.days.length < displayedDaysCount) {\n            self.days.push({});\n          }\n          break;\n      }\n    }\n\n    function split(_x) {\n      var _again = true;\n\n      _function: while (_again) {\n        var event = _x;\n        _again = false;\n\n        // Event starts and ends the same day\n        event = angular.copy(event);\n\n        var start = moment(event.start).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n        var stop = moment(event.end).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n        if (event.start.dayOfYear() === event.end.dayOfYear()) {\n          // reset the boundaries if they exceed the one fixed.\n          // And trim events that are entirely out of the boundaries\n          if (event.start.isBefore(start)) {\n            if (event.end.isBefore(start)) {\n              return [];\n            }\n            event.start = start;\n          }\n          if (event.end.isAfter(stop)) {\n            if (event.start.isAfter(stop)) {\n              return [];\n            }\n            event.end = stop;\n          }\n          return [event];\n        }\n        // Event is on several days.\n        // Build a first event that ends at the end of the first day\n        var first_event = angular.copy(event);\n        first_event.end = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n        if (event.start.isBefore(start)) {\n          first_event.start = start;\n        }\n\n        var startNextDay = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m);\n        var endThisDay = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m);\n        if (event.end.isBefore(startNextDay)) {\n          if (first_event.start.isAfter(endThisDay)) {\n            return [];\n          }\n          // Event finishes before start hour next day. No need to create another one\n          return [first_event];\n        }\n        first_event.continuedAfter = true;\n\n        // Build a second event that starts at the beginning of the following days.\n        // This event may end several days later. Recursion will handle it\n        var second_event = angular.copy(event);\n        second_event.start = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m);\n        second_event.continuedBefore = true;\n\n        if (event.start.isAfter(endThisDay)) {\n          // If the first event starts after curfew, don't add it\n          _x = second_event;\n          _again = true;\n          start = stop = first_event = startNextDay = endThisDay = second_event = undefined;\n          continue _function;\n        }\n\n        return [first_event].concat(split(second_event));\n      }\n    }\n\n    function splitByWeeks(event) {\n      if (event.start.isAfter(event.end)) {\n        var st = event.start;\n        event.start = event.end;\n        event.end = st;\n      }\n\n      if (event.start.year() < self.position.year() || event.start.month() < self.position.month()) {\n        // Event starts before our current month\n        if (event.end.year() < self.position.year() || event.end.month() < self.position.month()) {\n          // Event also ends before. Return nothing\n          return [];\n        }\n        // Set the beginning at the start of the month\n        event.start = moment(self.position).startOf('month');\n      }\n      if (event.end.month() > self.position.month() || event.end.year() !== self.position.year()) {\n        // Event ends after current month\n        if (event.start.month() > self.position.month()) {\n          return [];\n        }\n        event.end = moment(self.position).endOf('month');\n      }\n      // console.info(_.cloneDeep(event))\n      if (event.start.isoWeek() === event.end.isoWeek()) {\n        // If our event is on one week, we're all set\n        return [event];\n      }\n\n      // Split\n      var firstEvent = angular.copy(event);\n      var secondEvent = angular.copy(event);\n      // make it end on the same week\n      firstEvent.continuedAfter = true;\n      secondEvent.continuedBefore = true;\n      firstEvent.end = moment(firstEvent.start).endOf('week');\n      secondEvent.start.add(1, 'week').startOf('week');\n      // Recursion will handle potential split needed by second event\n      return [firstEvent].concat(splitByWeeks(secondEvent));\n    }\n\n    function filter(events) {\n      // remove event not in range (month, week, day)\n      return _.filter(events, function (e) {\n        var start, stop;\n        switch (self.mode) {\n          case 'week':\n          case 'week-advanced':\n            start = moment(self.position).weekday(0).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).weekday(6).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            break;\n          case 'day':\n            start = moment(self.position).startOf('day').hour(self._dayStart.h).minute(self._dayStart.m);\n            stop = moment(self.position).endOf('day').hour(self._dayEnd.h).minute(self._dayEnd.m);\n            break;\n          case '3day':\n            start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            var days = [{ start: angular.copy(start), end: angular.copy(stop) }];\n\n            var i = 0;\n            while (i < 2) {\n              stop.add(1, 'day');\n              var d = stop.day() - 1;\n              if (d < 0) {\n                d = 6;\n              }\n              if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n                days.push({ start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59) });\n                i++;\n              }\n            }\n            return _.some(days, function (d) {\n              return e.start.isBetween(d.start, d.end) || e.end.isBetween(d.start, d.end);\n            });\n          case 'month':\n            start = moment(self.position).date(1).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).weekday(moment(self.position).daysInMonth()).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            break;\n        }\n        return e.start.isBetween(start, stop) || e.end.isBetween(start, stop);\n      });\n    }\n\n    function addMissingDays(sortedEvents) {\n      sortedEvents = sortedEvents || {};\n      var startingDay = moment(self.position).weekday(0);\n      _.times(7, function (i) {\n        var newDate = moment(angular.copy(startingDay)).add(i, 'days').format('DD/MM/YYYY');\n        if (!sortedEvents[newDate]) {\n          sortedEvents[newDate] = [];\n        }\n      });\n    }\n\n    function addMissingEntities(sortedEvents) {\n      sortedEvents = sortedEvents || {};\n      _.each(self.entities, function (e) {\n        if (!sortedEvents[e]) {\n          sortedEvents[e] = [];\n        }\n      });\n    }\n\n    function parseTime(h) {\n      if (h >= 24) {\n        return { h: 23, m: 59 };\n      }\n      return { h: h, m: 0 };\n    }\n\n    function keys(sortedEvents) {\n      switch (self.mode) {\n        case 'week':\n          return Object.keys(sortedEvents).sort(function (a, b) {\n            var dateA = dateFromString(a);\n            var dateB = dateFromString(b);\n            return dateA - dateB;\n          });\n        case 'week-advanced':\n        case 'day':\n        case '3day':\n          return Object.keys(sortedEvents).sort();\n      }\n    }\n\n    function getEvents(key) {\n      return self.sortedEvents[key];\n    }\n\n    $scope.$watchCollection(function () {\n      return [self.events, self.entities, self.position, self.mode, self.dayStart, self.dayEnd, self.zoom, self.usableDays];\n    }, init);\n\n    function isToday(n) {\n      return self.position.week() === moment().week() && n === moment().dayOfYear();\n    }\n\n    function isInDayRange() {\n      return moment().hour() > parseInt(self._dayStart.h) && moment().hour() < parseInt(self._dayEnd.h);\n    }\n\n    function currentTimeToPixels() {\n      var totalMinutes = (moment().hour() - parseInt(self._dayStart ? self._dayStart.h : 0)) * 60 + moment().minutes();\n      return Math.floor(self.zoom * (BASE_SIZE * totalMinutes) / 60);\n    }\n\n    function isCurrent() {\n      return self.position.isSame(moment(), self.mode);\n    }\n\n    function clickCallbackWrapper(opts) {\n      var mom;\n      var entity;\n      switch (self.mode) {\n        case 'week':\n          var split = opts.d.split('/');\n          /**\n           * split[2] === year\n           * split[1] === month, we need to subtract 1 because momentJS months starts at 0\n           * split[0] === dayOfMonth\n           */\n          mom = moment(new Date(split[2], split[1] - 1, split[0], opts.h, opts.m));\n          break;\n        case '3day':\n        case 'day':\n          mom = moment(self.position).hour(opts.h).minute(opts.m);\n          entity = opts.entity;\n          break;\n        case 'week-advanced':\n          entity = opts.entity;\n          mom = moment(self.position).hour(opts.h).minute(opts.m).second(0).weekday(opts.d);\n          break;\n      }\n      self.clickCallback({ $moment: mom, $entity: entity });\n    }\n\n    function clickWeekEvent(day, $event) {\n      if (day.date) {\n        self.clickCallback({ $moment: day.date });\n      }\n    }\n\n    function dropEvent(config) {\n      var mom = config.moment;\n      if (!mom) {\n        switch (self.mode) {\n          case 'week':\n            var doy = moment(dateFromString(config.d)).dayOfYear();\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).dayOfYear(doy);\n            break;\n          case 'week-advanced':\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).weekday(config.d);\n            break;\n          case 'day':\n            mom = moment(self.position).hour(config.h).minute(config.m);\n            break;\n          case '3day':\n            mom = moment.unix(config.day).hour(config.h).minute(config.m);\n        }\n      }\n      var entity = _.includes(['week-advanced', 'day', '3day'], self.mode) ? config.entity : undefined;\n      self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity });\n    }\n\n    function calculateAdvancedWeekContainerHeight() {\n      return parseInt(self.zoom) * Math.max(planningConfiguration.BASE_SIZE - 8, 1) + 'px';\n    }\n\n    function dateFromString(date) {\n      var dateSplitted = date.split('/');\n      return new Date(dateSplitted[2], dateSplitted[1] - 1, dateSplitted[0]);\n    }\n  }\n\n  function PlanningDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning/planning.html',\n      controller: PlanningController,\n      controllerAs: 'planning',\n      bindToController: {\n        zoom: '=',\n        events: '=',\n        entities: '=',\n        entitiesPauses: '=?',\n        absences: '=?',\n        position: '=',\n        mode: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        dayField: '=',\n        eventCallback: '&',\n        dayCallback: '&',\n        clickCallback: '&',\n        weekEventCallback: '&',\n        dropCallback: '&',\n        usableDays: '=?',\n        action: '&?'\n      },\n      scope: {}\n    };\n  }\n})(window.angular, window.moment, window._);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningDay', PlanningDayDirective)\n\n  PlanningDayController.$inject = [\n    // Angular\n    '$scope'\n    // Libs\n    // Managers\n    // Services\n    // Const\n    // Resolved\n  ]\n  function PlanningDayController (\n    // Angular\n    $scope\n    // Libs\n    // Managers\n    // Services\n    // Const\n    // Resolved\n  ) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        dropEvent: dropEvent,\n        absents: []\n      })\n\n      self.isDefined = (self.day.events === undefined)\n      init()\n      $scope.$watchCollection([self.day, self.absences], function () {\n        if (self.day && self.day.date && self.absences && Object.keys(self.absences).length) {\n          self.absents = Object.keys(self.absences).reduce(function (acc, key) {\n            var array = self.absences[key]\n            var hasOverlap = _.any(array, function (absence) {\n              var range = moment.range(absence.start, absence.end)\n              return self.day.date.within(range)\n            })\n            if (hasOverlap) {\n              acc.push(key)\n            }\n            return acc\n          }, [])\n          self.absentsString = '<div>' + self.absents.join('<br>') + '</div>'\n        } else {\n          self.absentsString = ''\n          self.absents = []\n        }\n      })\n    }\n\n\n    function init () {\n    }\n\n\n    function dropEvent (data, event) {\n      self.dropCallback({ $data: data, $event: event})\n    }\n  }\n\n  /**\n   *\n   */\n  function PlanningDayDirective () {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-day-block/planning-day.html',\n      controller: PlanningDayController,\n      controllerAs: 'dayCtrl',\n      bindToController: {\n        day: '=',\n        events: '=',\n        clickCallback: '&',\n        dropCallback: '&',\n        absences: '=?'\n      },\n      scope: true,\n      link: function (scope, element) {\n        var el = element[0]\n        window.addEventListener('dragover', function (e) {\n          e.preventDefault();\n        }, false);\n        window.addEventListener('drop', function (e) {\n          e.preventDefault();\n        }, false);\n        el.addEventListener(\n          'drop',\n          function (e) {\n            e.preventDefault()\n            e.stopPropagation()\n            if (e.stopPropagation) e.stopPropagation()\n            this.classList.remove('over')\n            scope.$apply(function () {\n              scope.dayCtrl.dropEvent(JSON.parse(e.dataTransfer.getData('Text')), e)\n            })\n            return false\n          },\n          false\n        )\n\n        el.addEventListener(\n          'dragenter',\n          function (e) {\n            this.classList.add('over')\n            return false\n          },\n          false\n        )\n\n        el.addEventListener(\n          'dragleave',\n          function (e) {\n            this.classList.remove('over')\n            return false\n          },\n          false\n        )\n      }\n    }\n  }\n})(window.angular, window._, window.moment)\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningLeftColumn', PlanningDirective)\n\n  PlanningLeftColumnController.$inject = ['$scope']\n\n  function PlanningLeftColumnController ($scope) {\n    var self = this\n\n    self.$onInit = function () {\n      $scope.$watchCollection(function () {\n        return [self.events, self.position, self.mode, self.dayStart, self.dayEnd, self.usableDays]\n      }, init)\n    }\n\n    function init () {\n      self.days = []\n      self.allowedDays = self.usableDays\n      if (self.mode === 'week') {\n        _.forEach(self.allowedDays, function (d) {\n          var day = moment(self.position)\n          day.weekday(d)\n          self.days.push(day)\n        })\n        self.days = _.sortBy(self.days, function (d) {\n          return moment(d).toDate()\n        })\n      } else if (self.mode === 'day' && self.dayField) {\n        self.column = Object.keys(self.events).sort()\n      }\n    }\n\n\n  }\n\n  function PlanningDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-left-column/planning-left-column.html',\n      controller: PlanningLeftColumnController,\n      controllerAs: 'planningLeftColumn',\n      bindToController: {\n        events: '=',\n        position: '=',\n        mode: '=',\n        dayField: '=',\n        usableDays: '='\n      },\n      scope: true\n    }\n  }\n})(window.angular, window.moment, window._)\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService']\n\n  /**\n   *\n   */\n  function\n  PlanningLineController ($scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent\n      })\n      init()\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd]\n      }, init)\n\n      $scope.$watchCollection(function () {\n        return [self.absences]\n      }, function (newValue, oldValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.position)).startOf('day')\n          var end = moment(angular.copy(self.position)).endOf('day')\n            self._absences = AbsenceService.parseAbsences(self.absences , [start, end]).map(function (abs) {\n                abs.style = {\n                left: (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n                width: self.zoom * self.SLIDER_WIDTH * (moment.range(abs.start, abs.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n              }\n              abs.range = moment.range(abs.start, abs.end)\n              abs.class = 'planning-absence-' + abs.confirmation.state\n              abs.tooltip = setAbsenceTooltip(abs)\n              console.log(abs)\n              return abs\n            })\n\n        } else {\n          self._absences = []\n        }\n      })\n    }\n\n    self.log = function (a) {\n    }\n\n    self.replace = function (string) {\n      if (!string) return\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '')\n    }\n\n    self.preEvent = {}\n    self.postEvent = {}\n\n    function setAbsenceTooltip(abs) {\n        let state = ''\n        const absenceType = abs.absenceType\n        switch (abs.confirmation.state) {\n            case 'sending':\n                state = 'Absence envoyée'\n                break\n            case 'pending':\n                state = 'Absence en cour de traitement'\n                break\n            case 'partial-accepted':\n                state = 'Absence en cour de traitement'\n                break;\n            case 'accepted':\n                state = 'Absence acceptée'\n                break\n        }\n        if(absenceType) {\n            return state + '\\nRaison:'+ absenceType\n        } else {\n            return state\n        }\n    }\n    function extractMinutesFromEvent($event){\n      var minutes\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30\n      } else {\n        minutes = Math.floor($event.offsetX / (BASE_SIZE * self.zoom) * 60)\n      }\n      return minutes\n    }\n\n    function dropEvent (data, event) {\n      var hour = parseInt(event.target.getAttribute('hour'))\n      var minutes = extractMinutesFromEvent(event)\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (!checkAbsence(date)) {\n        self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      }\n    }\n\n    function clickEvent (hour, $event) {\n      var minutes = extractMinutesFromEvent($event)\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (!checkAbsence(date)) {\n        self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      }\n\n    }\n\n    function init () {\n      var currentId = 0\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {}\n      self.postEvent = {}\n      self.breaks = []\n\n      self._events = angular.copy(self.events)\n\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf()\n      })\n\n      var lines = [[]]\n      var toremove = []\n      _.each(self._events, function (event) {\n        var style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes')\n          event.range = moment.range(event.start, end)\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * (event.range) / self.SECONDS_BY_DAY / 1000 + 'px'\n        style['background-color'] = event['background-color'] || '#778899'\n        if (ColorService.getLuminance(style['background-color'])> 200){\n          style.color = 'black'\n        } else {\n          style.color = 'white'\n        }\n        event.style = style\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove)\n      })\n      self._events = _.difference(self._events, toremove)\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId)\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n          event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n          event.style['background-color'] = '#000'\n          event.style['font-weight'] = 'bold'\n          event.style.color = '#fff'\n          event.title = (event.eventList.length) + ' ' + parallelText\n          if (event.tooltip) event.tooltip = event.title\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n        if (event.line === undefined) event.line = MAX_PARALLEL\n        event.style.top = Math.round((parseInt(event.line)) * 70 / lines.length) + '%'\n        event.style.height = Math.round(70 / lines.length) + '%'\n        event.percentage = '100%'\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none'\n          var s = moment(event.start).subtract(event.pre, 'minutes')\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day')\n          }\n          var e = moment(event.start)\n          var r = moment.range(s, e)\n          var totalRange = moment.range(s, event.range.end)\n          var percentage = r.valueOf() / totalRange.valueOf() * 100\n          event.percentage = (100 - percentage) + '%'\n          var obj = {\n            percentage: (percentage) + '%',\n            style: {\n              left: (((moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(s).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n              width: self.zoom * self.SLIDER_WIDTH * (r.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background' : 'repeating-linear-gradient(45deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          }\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj\n          } else {\n            event.pre = 0\n          }\n\n        }\n        generatePostEvent(event)\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to right')\n          event.style['background-color'] = undefined\n        }\n        const pre = self.preEvent[event.id]\n        const post = self.postEvent[event.id]\n        event.style.totalWidth = (safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1) + 'px'\n        currentId++\n      })\n      if (self.pauses) {\n        createBreaks()\n      }\n\n    }\n\n    function calcWidth (zoom) {\n      return (parseInt(zoom) * BASE_SIZE) + 'px'\n    }\n\n    function createBreaks () {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        }\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart))\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd))\n        }\n        pause.style.left = (pause.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + pause.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        pause.style.width = self.zoom * self.SLIDER_WIDTH * (moment.range(pause.start, pause.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n\n        return pause\n      }))\n    }\n\n    function checkAbsence (date) {\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n    }\n\n    function generatePostEvent (event) {\n      if (!event.post) {\n        return null\n      }\n      event.style['border-right'] = 'none'\n      let end = moment(event.end).add(event.post, 'minutes')\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day')\n      }\n      const start = moment(event.end)\n      const range = moment.range(start, end)\n      const totalRange = moment.range(event.range.start, event.range.end)\n      const percentage = range.valueOf() / totalRange.valueOf() * 100\n      event.postPercentage = (100 - percentage) + '%'\n      var obj = {\n        percentage: (percentage) + '%',\n        style: {\n          left: (((moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(start).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n          width: self.zoom * self.SLIDER_WIDTH * (range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background' : 'repeating-linear-gradient(135deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      }\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj\n      } else {\n        event.post = 0\n      }\n    }\n\n    function safeParse (width = '0px') {\n      return parseInt(width.replace('px', ''))\n    }\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-line/planning-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        clickCallback: '&',\n        dropCallback: '&',\n        pauses: '=?',\n        absences: '=?',\n        position: '=?'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningLine', PlanningLineDirective);\n\n  PlanningLineController.$inject = ['$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService'];\n\n  /**\n   *\n   */\n  function PlanningLineController($scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n    var BASE_SIZE = planningConfiguration.BASE_SIZE;\n    var parallelText = planningConfiguration.parallelText;\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL;\n\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent\n      });\n      init();\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd];\n      }, init);\n\n      $scope.$watchCollection(function () {\n        return [self.absences];\n      }, function (newValue, oldValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.position)).startOf('day');\n          var end = moment(angular.copy(self.position)).endOf('day');\n          self._absences = AbsenceService.parseAbsences(self.absences, [start, end]).map(function (abs) {\n            abs.style = {\n              left: (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * moment.range(abs.start, abs.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px'\n            };\n            abs.range = moment.range(abs.start, abs.end);\n            abs['class'] = 'planning-absence-' + abs.confirmation.state;\n            abs.tooltip = setAbsenceTooltip(abs);\n            console.log(abs);\n            return abs;\n          });\n        } else {\n          self._absences = [];\n        }\n      });\n    };\n\n    self.log = function (a) {};\n\n    self.replace = function (string) {\n      if (!string) return;\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '');\n    };\n\n    self.preEvent = {};\n    self.postEvent = {};\n\n    function setAbsenceTooltip(abs) {\n      var state = '';\n      var absenceType = abs.absenceType;\n      switch (abs.confirmation.state) {\n        case 'sending':\n          state = 'Absence envoyée';\n          break;\n        case 'pending':\n          state = 'Absence en cour de traitement';\n          break;\n        case 'partial-accepted':\n          state = 'Absence en cour de traitement';\n          break;\n        case 'accepted':\n          state = 'Absence acceptée';\n          break;\n      }\n      if (absenceType) {\n        return state + '\\nRaison:' + absenceType;\n      } else {\n        return state;\n      }\n    }\n    function extractMinutesFromEvent($event) {\n      var minutes;\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30;\n      } else {\n        minutes = Math.floor($event.offsetX / (BASE_SIZE * self.zoom) * 60);\n      }\n      return minutes;\n    }\n\n    function dropEvent(data, event) {\n      var hour = parseInt(event.target.getAttribute('hour'));\n      var minutes = extractMinutesFromEvent(event);\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (!checkAbsence(date)) {\n        self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      }\n    }\n\n    function clickEvent(hour, $event) {\n      var minutes = extractMinutesFromEvent($event);\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (!checkAbsence(date)) {\n        self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      }\n    }\n\n    function init() {\n      var currentId = 0;\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {};\n      self.postEvent = {};\n      self.breaks = [];\n\n      self._events = angular.copy(self.events);\n\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf();\n      });\n\n      var lines = [[]];\n      var toremove = [];\n      _.each(self._events, function (event) {\n        var style = {};\n        event.depth = 1;\n        event.range = moment.range(event.start, event.end);\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes');\n          event.range = moment.range(event.start, end);\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * event.range / self.SECONDS_BY_DAY / 1000 + 'px';\n        style['background-color'] = event['background-color'] || '#778899';\n        if (ColorService.getLuminance(style['background-color']) > 200) {\n          style.color = 'black';\n        } else {\n          style.color = 'white';\n        }\n        event.style = style;\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove);\n      });\n      self._events = _.difference(self._events, toremove);\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId);\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n          event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n          event.style['background-color'] = '#000';\n          event.style['font-weight'] = 'bold';\n          event.style.color = '#fff';\n          event.title = event.eventList.length + ' ' + parallelText;\n          if (event.tooltip) event.tooltip = event.title;\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n        if (event.line === undefined) event.line = MAX_PARALLEL;\n        event.style.top = Math.round(parseInt(event.line) * 70 / lines.length) + '%';\n        event.style.height = Math.round(70 / lines.length) + '%';\n        event.percentage = '100%';\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none';\n          var s = moment(event.start).subtract(event.pre, 'minutes');\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day');\n          }\n          var e = moment(event.start);\n          var r = moment.range(s, e);\n          var totalRange = moment.range(s, event.range.end);\n          var percentage = r.valueOf() / totalRange.valueOf() * 100;\n          event.percentage = 100 - percentage + '%';\n          var obj = {\n            percentage: percentage + '%',\n            style: {\n              left: (moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(s).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * r.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background': 'repeating-linear-gradient(45deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          };\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj;\n          } else {\n            event.pre = 0;\n          }\n        }\n        generatePostEvent(event);\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to right');\n          event.style['background-color'] = undefined;\n        }\n        var pre = self.preEvent[event.id];\n        var post = self.postEvent[event.id];\n        event.style.totalWidth = safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1 + 'px';\n        currentId++;\n      });\n      if (self.pauses) {\n        createBreaks();\n      }\n    }\n\n    function calcWidth(zoom) {\n      return parseInt(zoom) * BASE_SIZE + 'px';\n    }\n\n    function createBreaks() {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        };\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return;\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart));\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd));\n        }\n        pause.style.left = (pause.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + pause.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        pause.style.width = self.zoom * self.SLIDER_WIDTH * moment.range(pause.start, pause.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n\n        return pause;\n      }));\n    }\n\n    function checkAbsence(date) {\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n\n    function generatePostEvent(event) {\n      if (!event.post) {\n        return null;\n      }\n      event.style['border-right'] = 'none';\n      var end = moment(event.end).add(event.post, 'minutes');\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day');\n      }\n      var start = moment(event.end);\n      var range = moment.range(start, end);\n      var totalRange = moment.range(event.range.start, event.range.end);\n      var percentage = range.valueOf() / totalRange.valueOf() * 100;\n      event.postPercentage = 100 - percentage + '%';\n      var obj = {\n        percentage: percentage + '%',\n        style: {\n          left: (moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(start).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n          width: self.zoom * self.SLIDER_WIDTH * range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background': 'repeating-linear-gradient(135deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      };\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj;\n      } else {\n        event.post = 0;\n      }\n    }\n\n    function safeParse() {\n      var width = arguments.length <= 0 || arguments[0] === undefined ? '0px' : arguments[0];\n\n      return parseInt(width.replace('px', ''));\n    }\n  }\n\n  function PlanningLineDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-line/planning-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        clickCallback: '&',\n        dropCallback: '&',\n        pauses: '=?',\n        absences: '=?',\n        position: '=?'\n      },\n      scope: true\n    };\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningTopRow', topRowDirective)\n\n  topRowDirective.$inject = ['planningConfiguration']\n\n  function topRowDirective (planningConfiguration) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-top-row/planning-top-row.html',\n      controller: ['$scope', PlanningTopRowController],\n      controllerAs: 'planningTopRow',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        entities: '=',\n        position: '=',\n        mode: '=',\n        callback: '&'\n      },\n      scope: {}\n    }\n\n    function PlanningTopRowController ($scope) {\n      var self = this\n\n      self.$onInit = function () {\n        $scope.$watchGroup([function () { return self.dayStart }, function () { return self.dayEnd }], init)\n\n        _.extend(self, {\n          calcWidth: calcWidth,\n          calcMargin: calcMargin\n        })\n\n        init()\n      }\n\n      function init () {\n        var range = self.dayEnd.h - self.dayStart.h + 1\n        self.hours = []\n        _.times(range, function (i) {\n          var d = moment(self.position)\n          d.hour(i + parseInt(self.dayStart.h))\n          d.minute(0)\n          self.hours.push(d)\n        })\n      }\n\n\n\n      function calcWidth (zoom) {\n        return (parseInt(zoom) * BASE_SIZE) + 'px'\n      }\n\n      function calcMargin (zoom, index) {\n        var half = (parseInt(zoom) * (BASE_SIZE / 2))\n        if (!index) half = half - (3 * parseInt(zoom))\n        return '0 ' + half + 'px 0 -' + half + 'px'\n      }\n\n    }\n  }\n})(window.angular, window.moment, window._)\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningVerticalLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$filter', '$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService']\n\n  /**\n   *\n   */\n  function\n  PlanningLineController ($filter, $scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n\n    /** BASE_SIZE is the span of an hour. It gets multiplied by zoom (default 10) to get the size in pixel\n     * in vertical mode, we need to reduce it since we have much less space\n     */\n    var BASE_SIZE = Math.max(planningConfiguration.BASE_SIZE - 8, 1)\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n    var AVAILABLE_SPACE = 90 // Total horizontal space taken by the events\n\n    var self = this\n\n    self.$onInit = function () {\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd]\n      }, init)\n\n      $scope.$watchCollection(function () {\n        return self.absences\n      }, function (oldValue, newValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.day)).startOf('day')\n          var end = moment(angular.copy(self.day)).endOf('day')\n          self._absences = AbsenceService.parseAbsences(angular.copy(self.absences), [start, end]).map(function (abs) {\n            abs.style = {\n              top: (((moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(abs.start).minutes()) * BASE_SIZE * self.zoom / 60)) +  'px',\n              height: self.zoom * self.SLIDER_WIDTH * (moment.range(abs.start, abs.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n            }\n\n            abs.range = moment.range(abs.start, abs.end)\n            abs.class = 'planning-absence-' + abs.confirmation.state\n            abs.tooltip = abs.absenceType\n            return abs\n          })\n        } else {\n          self._absences = []\n        }\n      })\n\n\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent\n      })\n\n      init()\n    }\n\n    self.log = function (a) {\n    }\n\n    self.replace = function (string) {\n      if (!string) return\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '')\n    }\n\n    self.preEvent = {}\n    self.postEvent = {}\n\n    function extractMinutesFromEvent($event){\n      var minutes\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30\n      } else {\n        minutes = Math.floor($event.offsetY / (BASE_SIZE * self.zoom) * 6)*10\n      }\n      return minutes\n    }\n\n    function dropEvent (data, event) {\n      var hour = parseInt(event.target.getAttribute('hour'))\n      var minutes = extractMinutesFromEvent(event)\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (!checkAbsence(date)) {\n        self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n        })\n      }\n\n    }\n\n    function clickEvent (hour, $event) {\n      var minutes = extractMinutesFromEvent($event)\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (!checkAbsence(date)) {\n        self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      }\n\n    }\n\n    function init () {\n      var currentId = 0\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {}\n      self.breaks = []\n\n      self._events = angular.copy(self.events)\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf()\n      })\n\n      var lines = [[]]\n      var toremove = []\n      _.each(self._events, function (event) {\n        var style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes')\n          event.range = moment.range(event.start, end)\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * (event.range) / self.SECONDS_BY_DAY / 1000 + 'px'\n        style['background-color'] = event['background-color'] || '#778899'\n        if (ColorService.getLuminance(style['background-color'])> 200){\n          style.color = 'black'\n        } else {\n          style.color = 'white'\n        }\n        event.style = style\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove)\n      })\n      self._events = _.difference(self._events, toremove)\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId)\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n          event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n          event.style['background-color'] = '#000'\n          event.style['font-weight'] = 'bold'\n          event.title = (event.eventList.length) + ' ' + parallelText\n          event.style.color = '#fff'\n          if (event.tooltip) event.tooltip = event.title\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n        if (event.line === undefined) event.line = MAX_PARALLEL\n        event.style.top = Math.round((parseInt(event.line)) * AVAILABLE_SPACE / lines.length) + '%'\n        event.style.height = Math.round(AVAILABLE_SPACE / lines.length) + '%'\n        event.percentage = '100%'\n        if (event.continuedBefore) event.pre = 0\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none'\n          var s = moment(event.start).subtract(event.pre, 'minutes')\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day')\n          }\n          var e = moment(event.start)\n          var r = moment.range(s, e)\n          var totalRange = moment.range(s, event.range.end)\n          var percentage = r.valueOf() / totalRange.valueOf() * 100\n          event.percentage = (100 - percentage) + '%'\n          var obj = {\n            percentage: (percentage) + '%',\n            style: {\n              left: (((moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(s).minutes()) * BASE_SIZE * self.zoom / 60)) +  'px',\n              width: self.zoom * self.SLIDER_WIDTH * (r.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background' : 'repeating-linear-gradient(45deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          }\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj\n          } else {\n            event.pre = 0\n          }\n        }\n        generatePostEvent(event)\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to bottom')\n          event.style['background-color'] = undefined\n        }\n        const pre = self.preEvent[event.id]\n        const post = self.postEvent[event.id]\n        event.style.totalWidth = (safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1) + 'px'\n        currentId++\n      })\n      if (self.pauses) {\n        createBreaks()\n      }\n      calculateContainerHeight()\n    }\n\n    function safeParse (width = '0px') {\n      return parseInt(width.replace('px', ''))\n    }\n\n    function generatePostEvent (event) {\n      if (!event.post) {\n        return null\n      }\n      let end = moment(event.end).add(event.post, 'minutes')\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day')\n      }\n      const start = moment(event.end)\n      const range = moment.range(start, end)\n      const totalRange = moment.range(event.range.start, event.range.end)\n      const percentage = range.valueOf() / totalRange.valueOf() * 100\n      event.postPercentage = (100 - percentage) + '%'\n      var obj = {\n        percentage: (percentage) + '%',\n        style: {\n          left: (((moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(start).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n          width: self.zoom * self.SLIDER_WIDTH * (range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background' : 'repeating-linear-gradient(135deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      }\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj\n      } else {\n        event.post = 0\n      }\n    }\n\n    function calcWidth (zoom) {\n      return (parseInt(zoom) * BASE_SIZE) + 'px'\n    }\n\n    function createBreaks () {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        }\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart))\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd))\n        }\n\n        pause.style.top = (((moment(pause.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(pause.start).minutes()) * BASE_SIZE * self.zoom / 60)) +  'px'\n        pause.style.height = self.zoom * self.SLIDER_WIDTH * (moment.range(pause.start, pause.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n\n        return pause\n      }))\n    }\n\n    function calculateContainerHeight () {\n      self.containerHeight = (parseInt(self.zoom) * BASE_SIZE) * $filter('range')(self.range) + 'px'\n    }\n\n    function checkAbsence (date) {\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n\n    }\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-vertical-line/planning-vertical-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        pauses: '=?',\n        day: '=',\n        absences: '=?',\n        clickCallback: '&',\n        dropCallback: '&'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningVerticalLine', PlanningLineDirective);\n\n  PlanningLineController.$inject = ['$filter', '$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService'];\n\n  /**\n   *\n   */\n  function PlanningLineController($filter, $scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n    /** BASE_SIZE is the span of an hour. It gets multiplied by zoom (default 10) to get the size in pixel\n     * in vertical mode, we need to reduce it since we have much less space\n     */\n    var BASE_SIZE = Math.max(planningConfiguration.BASE_SIZE - 8, 1);\n    var parallelText = planningConfiguration.parallelText;\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL;\n    var AVAILABLE_SPACE = 90; // Total horizontal space taken by the events\n\n    var self = this;\n\n    self.$onInit = function () {\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd];\n      }, init);\n\n      $scope.$watchCollection(function () {\n        return self.absences;\n      }, function (oldValue, newValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.day)).startOf('day');\n          var end = moment(angular.copy(self.day)).endOf('day');\n          self._absences = AbsenceService.parseAbsences(angular.copy(self.absences), [start, end]).map(function (abs) {\n            abs.style = {\n              top: (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              height: self.zoom * self.SLIDER_WIDTH * moment.range(abs.start, abs.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px'\n            };\n\n            abs.range = moment.range(abs.start, abs.end);\n            abs['class'] = 'planning-absence-' + abs.confirmation.state;\n            abs.tooltip = abs.absenceType;\n            return abs;\n          });\n        } else {\n          self._absences = [];\n        }\n      });\n\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent\n      });\n\n      init();\n    };\n\n    self.log = function (a) {};\n\n    self.replace = function (string) {\n      if (!string) return;\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '');\n    };\n\n    self.preEvent = {};\n    self.postEvent = {};\n\n    function extractMinutesFromEvent($event) {\n      var minutes;\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30;\n      } else {\n        minutes = Math.floor($event.offsetY / (BASE_SIZE * self.zoom) * 6) * 10;\n      }\n      return minutes;\n    }\n\n    function dropEvent(data, event) {\n      var hour = parseInt(event.target.getAttribute('hour'));\n      var minutes = extractMinutesFromEvent(event);\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (!checkAbsence(date)) {\n        self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n        });\n      }\n    }\n\n    function clickEvent(hour, $event) {\n      var minutes = extractMinutesFromEvent($event);\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (!checkAbsence(date)) {\n        self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      } else {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      }\n    }\n\n    function init() {\n      var currentId = 0;\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {};\n      self.breaks = [];\n\n      self._events = angular.copy(self.events);\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf();\n      });\n\n      var lines = [[]];\n      var toremove = [];\n      _.each(self._events, function (event) {\n        var style = {};\n        event.depth = 1;\n        event.range = moment.range(event.start, event.end);\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes');\n          event.range = moment.range(event.start, end);\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * event.range / self.SECONDS_BY_DAY / 1000 + 'px';\n        style['background-color'] = event['background-color'] || '#778899';\n        if (ColorService.getLuminance(style['background-color']) > 200) {\n          style.color = 'black';\n        } else {\n          style.color = 'white';\n        }\n        event.style = style;\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove);\n      });\n      self._events = _.difference(self._events, toremove);\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId);\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n          event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n          event.style['background-color'] = '#000';\n          event.style['font-weight'] = 'bold';\n          event.title = event.eventList.length + ' ' + parallelText;\n          event.style.color = '#fff';\n          if (event.tooltip) event.tooltip = event.title;\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n        if (event.line === undefined) event.line = MAX_PARALLEL;\n        event.style.top = Math.round(parseInt(event.line) * AVAILABLE_SPACE / lines.length) + '%';\n        event.style.height = Math.round(AVAILABLE_SPACE / lines.length) + '%';\n        event.percentage = '100%';\n        if (event.continuedBefore) event.pre = 0;\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none';\n          var s = moment(event.start).subtract(event.pre, 'minutes');\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day');\n          }\n          var e = moment(event.start);\n          var r = moment.range(s, e);\n          var totalRange = moment.range(s, event.range.end);\n          var percentage = r.valueOf() / totalRange.valueOf() * 100;\n          event.percentage = 100 - percentage + '%';\n          var obj = {\n            percentage: percentage + '%',\n            style: {\n              left: (moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(s).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * r.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background': 'repeating-linear-gradient(45deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          };\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj;\n          } else {\n            event.pre = 0;\n          }\n        }\n        generatePostEvent(event);\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to bottom');\n          event.style['background-color'] = undefined;\n        }\n        var pre = self.preEvent[event.id];\n        var post = self.postEvent[event.id];\n        event.style.totalWidth = safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1 + 'px';\n        currentId++;\n      });\n      if (self.pauses) {\n        createBreaks();\n      }\n      calculateContainerHeight();\n    }\n\n    function safeParse() {\n      var width = arguments.length <= 0 || arguments[0] === undefined ? '0px' : arguments[0];\n\n      return parseInt(width.replace('px', ''));\n    }\n\n    function generatePostEvent(event) {\n      if (!event.post) {\n        return null;\n      }\n      var end = moment(event.end).add(event.post, 'minutes');\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day');\n      }\n      var start = moment(event.end);\n      var range = moment.range(start, end);\n      var totalRange = moment.range(event.range.start, event.range.end);\n      var percentage = range.valueOf() / totalRange.valueOf() * 100;\n      event.postPercentage = 100 - percentage + '%';\n      var obj = {\n        percentage: percentage + '%',\n        style: {\n          left: (moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(start).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n          width: self.zoom * self.SLIDER_WIDTH * range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background': 'repeating-linear-gradient(135deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      };\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj;\n      } else {\n        event.post = 0;\n      }\n    }\n\n    function calcWidth(zoom) {\n      return parseInt(zoom) * BASE_SIZE + 'px';\n    }\n\n    function createBreaks() {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        };\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return;\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart));\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd));\n        }\n\n        pause.style.top = (moment(pause.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(pause.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        pause.style.height = self.zoom * self.SLIDER_WIDTH * moment.range(pause.start, pause.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n\n        return pause;\n      }));\n    }\n\n    function calculateContainerHeight() {\n      self.containerHeight = parseInt(self.zoom) * BASE_SIZE * $filter('range')(self.range) + 'px';\n    }\n\n    function checkAbsence(date) {\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n  }\n\n  function PlanningLineDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-vertical-line/planning-vertical-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        pauses: '=?',\n        day: '=',\n        absences: '=?',\n        clickCallback: '&',\n        dropCallback: '&'\n      },\n      scope: true\n    };\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningWeekLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$scope', 'PositionService', 'planningConfiguration', 'ColorService']\n\n  /**\n   *\n   */\n  function PlanningLineController ($scope, PositionService, planningConfiguration, ColorService) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        calculateWidth: calculateWidth,\n        calculateLeft: calculateLeft\n      })\n\n      init()\n\n      $scope.$watchCollection(function () {\n        return [self.events, self.week]\n      }, init)\n\n    }\n\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n\n    function init () {\n      self.displayedEvents = _(self.events).sortBy(function (event) {\n        return event.continuedBefore ? -1 : (event.continuedAfter ? 0 : 1) // Order event list\n      }).value()\n\n      self.displayedEvents = positioning(self.displayedEvents)\n      self.oneDayEvents = positioning(self.oneDayEvents)\n    }\n\n\n\n    function positioning (eventList) {\n      var lines = [[]]\n      var toRemove = []\n      _.each(eventList, function (event) {\n        event.style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        PositionService.overlap(lines, event, MAX_PARALLEL, toRemove, true)\n      })\n      eventList = _.difference(eventList, toRemove)\n      _.each(eventList, function (event) {\n        setStyle(event, lines.length)\n      })\n      return eventList\n    }\n\n    function setStyle (event, height) {\n      event.style.left = calculateLeft(event)\n      event.style.width = calculateWidth(event)\n      event.style['background-color'] = event['background-color']\n      if (ColorService.getLuminance(event.style['background-color'])> 200){\n        event.style.color = 'black'\n      } else{\n        event.style.color = 'white'\n      }\n\n      event.style.top = Math.ceil((event.line) * 100 / height) + '%'\n      event.style.height = Math.round(100 / height) + '%'\n      if (event.line === undefined) event.line = MAX_PARALLEL\n      if (event.eventList && event.eventList.length > 1) {\n        event.style['background-color'] = '#000'\n        event.style['color'] = '#FFF'\n        event.style['font-weight'] = 'bold'\n        event.title = (event.eventList.length) + ' ' + parallelText\n        if (event.tooltip) event.tooltip = event.title\n      }\n    }\n\n\n    function calculateWidth (event) {\n      if (event.start.day() === event.end.day()) {\n        return (event.end.diff(event.start, 'days') + 1) * (100 / 7) + '%'\n      } else {\n        var diff = Math.ceil(event.end.diff(event.start, 'hours') / 24)\n        if (event.end.hours() < event.start.hours()) {\n          diff += 1\n        }\n        return (diff * (100 / 7)) + '%'\n      }\n    }\n\n    function calculateLeft (event) {\n      return ((event.start.isoWeekday() - 1)) * (99.9 / 7) + '%'\n    }\n\n\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-week-line/planning-week-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        events: '=',\n        week: '=',\n        oneDayEvents: '=',\n        weekEventCallback: '&'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window.moment, window._)\n","angular.module('90Tech.planning').run(['$templateCache', function($templateCache) {$templateCache.put('/templates/planning-context-menu.html','<ul class=\"dropdown-menu context-menu\" ng-click=$event.stopPropagation(); style=\"z-index: 10\"><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.action({$element: event || ev})\"><i class=\"mdi mdi-chevron-down\"></i> Ouvrir dans un nouvel onglet {{event.eventList.length}}</a></li></ul>');\n$templateCache.put('/directives/planning/planning.html','<div ng-if=\"planning.mode ===\\'day\\' || planning.mode === \\'week\\'\" style=\"height: 100%;\"><zl-planning-left-column mode=planning.mode position=planning.position day-field=planning.dayField usable-days=planning.allowedDays events=planning.sortedEvents></zl-planning-left-column><div class style=height:100%><div zl-horizontal-scroll scroll-left=planning.currentTimeToPixels() style=height:100%><div ng-style=\"{width: planning.width}\" class=planning-body><zl-planning-top-row mode=planning.mode zoom=planning.zoom position=planning.position day-start=planning._dayStart day-end=planning._dayEnd></zl-planning-top-row><div class=hour-cursor ng-style=\"{left: planning.currentTimeToPixels()+\\'px\\'}\" ng-if=\"planning.isCurrent() && planning.isInDayRange()\"><div class=hour-caret></div></div><div class=planning-2pc></div><zl-planning-line ng-if=\"planning.mode === \\'day\\'\" zoom=planning.zoom absences=planning.absences[i] position=planning.position day-start=planning._dayStart day-end=planning._dayEnd ng-repeat=\"i in planning.keys(planning.sortedEvents)\" class=\"day b-b\" ng-class=\"{today: planning.isToday(i)}\" events=planning.getEvents(i) pauses=planning.entitiesPauses[i] drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: i, entity: i, $data: $data, $event: $event})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: i, entity: i})\"></zl-planning-line><zl-planning-line ng-if=\"planning.mode === \\'week\\'\" zoom=planning.zoom ng-repeat=\"day in planning.usableDays\" day-start=planning._dayStart day-end=planning._dayEnd class=\"day b-b\" ng-class=\"{today: planning.isToday(planning.keys(planning.sortedEvents)[day])}\" events=planning.getEvents(planning.keys(planning.sortedEvents)[day]) drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: planning.keys(planning.sortedEvents)[day], entity: planning.keys(planning.sortedEvents)[day], $data: $data, $event: $event})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: planning.keys(planning.sortedEvents)[day], entity: planning.keys(planning.sortedEvents)[day]})\"></zl-planning-line></div></div></div></div><div ng-if=\"planning.mode === \\'3day\\'\" style=\"height: 100%;\"><zl-planning-left-column mode=\"\\'day\\'\" position=planning.position day-field=planning.dayField usable-days=planning.allowedDays events=planning.sortedEvents></zl-planning-left-column><div style=\"height: 100%; display: flex; flex-flow: row nowrap;\" zl-horizontal-scroll><div style=height:100%; ng-repeat=\"day in planning.groupedEvents track by $index\"><div style=\"height:100%; display: inline-block;\"><div ng-style=\"{width: planning.width}\" class=planning-body><zl-planning-top-row mode=\"\\'day\\'\" zoom=planning.zoom position=planning.position day-start=planning._dayStart day-end=planning._dayEnd></zl-planning-top-row><p style=\"position: absolute; top: 25px; font-size: 1.5em; font-weight: bold; text-align: center;\">{{day.day}}</p><div class=hour-cursor ng-style=\"{left: planning.currentTimeToPixels()+\\'px\\'}\" ng-if=\"planning.isCurrent() && planning.isInDayRange()\"><div class=hour-caret></div></div><div class=planning-2pc></div><zl-planning-line zoom=planning.zoom position=day.date absences=day.absences[i] day-start=planning._dayStart day-end=planning._dayEnd ng-repeat=\"i in planning.keys(day.value) track by $index\" class=\"day b-b\" events=day.value[i] pauses=planning.entitiesPauses[i] drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: i, entity: i, $data: $data, $event: $event, day: day.key})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: i, entity: i})\"></zl-planning-line></div></div></div></div></div><div ng-if=\"planning.mode ===\\'week-advanced\\'\" class=advanced-week><div class=days-list><div class=day-advanced>&nbsp;</div><div class=day-advanced ng-repeat=\"day in planning.daysList\" ng-click=planning.dayCallback({$day:day})><span class=day-text>{{day | format:\\'dddd\\' | capitalize}}<br><small>{{day | format:\\'ll\\'}}</small></span></div></div><div class=advanced-week-container ng-repeat=\"name in planning.keys(planning.sortedEvents)\"><div class=left-column-advanced><span style=margin:auto>{{name}}</span></div><div ng-repeat=\"day in planning.allowedDays\" class=day-advanced><zl-planning-vertical-line day=planning.daysList[$index] zoom=planning.zoom drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d:day, entity: name, $data: $data, $event: $event})\" day-start=planning._dayStart day-end=planning._dayEnd events=planning.getEvents(name)[day] pauses=planning.entitiesPauses[name] absences=planning.absences[name] click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: day, entity: name})\"></zl-planning-vertical-line></div></div></div><div ng-if=\"planning.mode === \\'month\\'\" style=\"height: 100%; z-index: 1000;\"><div class=month-header><span class=month-text>{{planning.month | capitalize}}</span></div><div class=day-header><div class=day ng-repeat=\"day in []|range:7\"><span class=day-text>{{day | day}}</span></div></div><div class=month-container><zl-planning-day ng-repeat=\"day in planning.days\" day=day events=planning._events absences=planning.absences drop-callback=\"planning.dropEvent({$data: $data, $event: $event, moment: day.date})\" ng-dblclick=\"planning.clickWeekEvent(day, $event)\"></zl-planning-day><zl-planning-week-line ng-repeat=\"(week, events) in planning.multipleDaysEvents\" events=events week=week one-day-events=planning.oneDayEvents[week] style=\"height: 20%; pointer-events: none\"></zl-planning-week-line></div></div>');\n$templateCache.put('/directives/planning-day-block/planning-day.html','<div class=day-block ng-class=\"{\\'empty-day\\': dayCtrl.isDefined }\" ng-click=planning.dayCallback({$day:dayCtrl.day.date})><div style=position:absolute;left:5px;top:5px; ng-if=\"dayCtrl.day.date.day() === 1\">{{dayCtrl.day.date.week()}}</div><div class=day-number>{{ dayCtrl.day.date.date() }}</div><div class=events-container><div ng-style=\"{\\'background-color\\': event.color}\" class=month-event ng-repeat=\"event in dayCtrl.day.events |limitTo:5\">{{event.title}}</div></div><div class=absents-container tooltip-append-to-body=true ng-if=dayCtrl.absents.length uib-tooltip-html=dayCtrl.absentsString>{{dayCtrl.absents.length}} absent(s)</div></div>');\n$templateCache.put('/directives/planning-left-column/planning-left-column.html','<div class=left-column ng-switch=planningLeftColumn.mode><div class=planning-head></div><div class=left-body><div class=planning-2pc></div><div class=days-body ng-switch-when=week><div class=\"dayName row8 b-b animate\" ng-repeat=\"day in planningLeftColumn.days\" ng-class=\"{today: planning.isToday(day.dayOfYear())}\" ng-click=planning.dayCallback({$day:day})><h4>{{day | format:\\'dddd\\' | capitalize}}<br><small>{{day | format:\\'ll\\'}}</small></h4></div></div><div class=days-body ng-switch-when=day><div class=\"dayName row8 b-b animate\" ng-repeat=\"col in planningLeftColumn.column\"><h4>{{col}}</h4></div></div></div><div style=height:10px></div></div>');\n$templateCache.put('/directives/planning-line/planning-line.html','<div style=\"z-index: 1;\" zl-planning-drag-drop zl-drop=\"line.dropEvent($data, $event)\"><div class=\"b-b b-r all-day day-hour\" ng-style=\"{width: line.calcWidth(line.zoom)}\" ng-repeat=\"n in [] | range:line.range\" ng-dblclick=\"line.clickEvent(n, $event)\" hour={{n}}><span class=half-hour></span></div></div><div ng-repeat=\"event in line._events\" zl-planning-drag-drop ng-click=\"planning.eventCallback({\\'event\\':event})\" zl-drag=event ng-style=\"{ height: event.style.height, top: event.style.top, width: event.style.totalWidth, left: event.pre > 0 ? line.preEvent[event.id].style.left : event.style.left }\" style=\"position: absolute; z-index: 1; display: flex; flex-flow: row nowrap\"><div ng-if=\"event.pre > 0\" ng-style=\"{width: line.preEvent[event.id].style.width, \\'background\\': line.preEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; height: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.preEvent[event.id].tooltip}}><div class=title-container><span><i style=\"height: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div><div class=event style=\"display: inline-block; position: relative; height: 100%;\" data-context-menu=/templates/planning-context-menu.html tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip ng-style=\"{ width: event.style.width, background: event.style[\\'background-color\\'], \\'background-image\\': event.style[\\'background-image\\'], color: event.style.color, \\'border-left\\': event.pre > 0 ? \\'none\\': \\'\\' }\"><div class=event-line-container style><div class=event-line ng-style=\"{\\'background-color\\': event.color}\" ng-if=!event.continuedBefore></div></div><div class=title-container><span>{{event.title}}</span></div></div><div ng-if=\"event.post > 0\" ng-style=\"{width: line.postEvent[event.id].style.width, \\'background\\': line.postEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; height: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.postEvent[event.id].tooltip}}><div class=title-container><span><i style=\"height: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div></div><div ng-repeat=\"pause in line.breaks track by $index\" class=planning-pause-element style=\"height: 100%;\" ng-style=pause.style></div><div ng-repeat=\"absence in line._absences track by $index\" class={{absence.class}} tooltip-append-to-body=true tooltip-classes=absence-tooltip uib-tooltip={{absence.tooltip}} style=\"height: 100%;\" ng-style=absence.style></div>');\n$templateCache.put('/directives/planning-top-row/planning-top-row.html','<div class=planning-top-row><div ng-repeat=\"hour in planningTopRow.hours\" class=day-hour ng-style=\"{width: planningTopRow.calcWidth(planningTopRow.zoom), margin: planningTopRow.calcMargin(planningTopRow.zoom, $index)}\"><h4>{{hour | format:\\'HH:mm\\'}}</h4></div></div>');\n$templateCache.put('/directives/planning-vertical-line/planning-vertical-line.html','<div ng-style=\"{height: line.containerHeight}\"><div style=\"position: absolute; height: 100%; width: 100%; z-index: 1;\" zl-planning-drag-drop zl-drop=\"line.dropEvent($data, $event)\"><div class=\"b-b b-r all-day\" ng-style=\"{height: line.calcWidth(line.zoom)}\" ng-repeat=\"n in [] | range: line.range\" ng-dblclick=\"line.clickEvent(n, $event)\" hour=\"{{n + line.dayStart.h}}\"><span class=hour-text>{{n + 1 + line.dayStart.h}}</span></div></div><div ng-repeat=\"event in line._events\" zl-planning-drag-drop ng-click=\"planning.eventCallback({\\'event\\':event})\" zl-drag=event ng-style=\"{ width: event.style.height, right: event.style.top, height: event.pre > 0 ? line.preEvent[event.id].style.totalWidth : event.style.width, top: event.pre > 0 ? line.preEvent[event.id].style.left : event.style.left }\" style=\"position: absolute; z-index: 1;\"><div ng-if=\"event.pre > 0\" ng-style=\"{height: line.preEvent[event.id].style.width, \\'background\\': line.preEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; width: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.preEvent[event.id].tooltip}}><div class=title-container><span><i style=\"width: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div><div class=event style=\"display: inline-block; position: relative; width: 100%;\" tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip data-context-menu=/templates/planning-context-menu.html ng-style=\"{ height: event.style.width, \\'background-image\\': event.style[\\'background-image\\'], background: event.style[\\'background-color\\'], color: event.style.color, \\'border-left\\': event.pre > 0 ? \\'none\\': \\'\\' }\"><div class=event-line-container style><div class=event-line ng-style=\"{\\'background-color\\': event.color}\"></div></div><div class=title-container><span>{{event.title}}</span></div></div><div ng-if=\"event.post > 0\" ng-style=\"{height: line.postEvent[event.id].style.width, \\'background\\': line.postEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; width: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.postEvent[event.id].tooltip}}><div class=title-container><span><i style=\"width: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div></div><div ng-repeat=\"pause in line.breaks track by $index\" class=planning-pause-element style=\"width: 95%; left: 5%;\" ng-style=pause.style></div><div ng-repeat=\"absence in line._absences track by $index\" uib-tooltip={{absence.tooltip}} tooltip-append-to-body=true style=\"width: 95%; left: 5%;\" class={{absence.class}} ng-style=absence.style></div></div>');\n$templateCache.put('/directives/planning-week-line/planning-week-line.html','<div class=week-line ng-class=\"\\'week-\\' + line.week\" style=padding-top:20px;><div class=single-day-events style=\"height:40%; position:relative;\"><div zl-planning-drag-drop zl-drag=ev ng-repeat=\"ev in line.oneDayEvents\" ng-style=\"{\\'top\\': ev.style.top, \\'height\\': ev.style.height, \\'background-color\\': ev.style[\\'background-color\\'], \\'color\\' : ev.style.color, \\'width\\': ev.style.width, \\'left\\': ev.style.left}\" style=\"position:absolute;border: 1px solid black;pointer-events: auto; overflow: hidden;\" ng-click=\"planning.weekEventCallback({event: ev})\" tooltip-append-to-body=true tooltip-placement=\"{{ev.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!ev.tooltipTemplate ? ev.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + ev.tooltipTemplate}}\" tooltip-class=planning-event-tooltip class=single-day-event><div class=event-line-container><div class=event-line ng-style=\"{\\'background-color\\': ev.color}\" ng-if=!ev.continuedBefore></div></div><div class=single-day-event-title data-context-menu=/templates/planning-context-menu.html><span>{{ev.title}}</span></div></div></div><div class=multiple-days-events style=\"height:40%; position: relative;\"><div class=multiple-day-event ng-repeat=\"event in line.displayedEvents\" style=\"position: absolute; border: 1px solid black;pointer-events: auto; overflow: hidden;\" zl-planning-drag-drop zl-drag=event ng-click=\"planning.weekEventCallback({event: event})\" tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip ng-style=\"{\\'top\\': event.style.top, \\'height\\': event.style.height, \\'background-color\\': event.style[\\'background-color\\'], \\'color\\' : event.style.color, \\'width\\': event.style.width, \\'left\\': event.style.left}\"><div class=event-line-container><div class=event-line ng-style=\"{\\'background-color\\': event.color}\" ng-if=!event.continuedBefore></div></div><div class=multiple-day-event-title data-context-menu=/templates/planning-context-menu.html><span>{{event.title}}</span></div></div></div></div>');}]);"]}