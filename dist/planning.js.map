{"version":3,"sources":["index.js","filters/filters/dayFilter.js","filters/filters/momentFilter.js","filters/filters/range.js","filters/filters/strFilter.js","services/services/absences.service.js","services/absences.service.js","services/services/color.service.js","services/services/configurationProvider.js","services/services/pause.service.js","services/services/position.service.js","directives/drag-drop/directives/drag-drop/drag-drop.directive.js","directives/horizontal-scroll/directives/horizontal-scroll/horizontal-scroll.js","directives/planning/directives/planning/planning.js","directives/planning/planning.js","directives/planning-day-block/directives/planning-day-block/planning-day.js","directives/planning-day-block/planning-day.js","directives/planning-left-column/planning-left-column.js","directives/planning-left-column/directives/planning-left-column/planning-left-column.js","directives/planning-line/planning-line.js","directives/planning-line/directives/planning-line/planning-line.js","directives/planning-top-row/directives/planning-top-row/planning-top-row.js","directives/planning-vertical-line/directives/planning-vertical-line/planning-vertical-line.js","directives/planning-vertical-line/planning-vertical-line.js","directives/planning-week-line/directives/planning-week-line/planning-week-line.js","template.js"],"names":["angular","module","window","filter","day","undefined","isNaN","parseInt","time","format","str","charAt","toUpperCase","slice","RangeFilter","operation","input","total","i","push","planningConfiguration","val","strings","_","moment","AbsenceService","parseAbsences","absences","interval","Array","isArray","Error","parsed","abs","range","start","end","overlaps","map","absence","style","isSame","copy","top","isBefore","isAfter","mergeRanges","_x","_again","ranges","r","index","Object","assign","any","range1","range2","reduced","reduce","acc","value","arr","next","toDate","min","max","self","this","extend","service","ColorService","getLuminance","c","g","b","rgbRegex","test","exec","color","substring","rgb","luma","$inject","provider","BASE_SIZE","MAX_PARALLEL","nothing_to_show","DAYS","parallelText","setParallelText","text","setBaseSize","size","setMaxParallel","number","setString","key","setDays","$get","absentTechnicianCallback","callback","isFerieCallback","warningCallback","PauseService","generateGradient","event","direction","parsePause","pauses","pause","pauseRange","pauseDuration","diff","percentage","totalDuration","before","totalRange","clone","subtract","length","endPercentage","startPercentage","v","pauseColor","invertColor","mapped","hex","indexOf","toString","padZero","len","zeros","join","PositionService","overlap","lines","maxParallelEvents","toRemove","doublecheck","pre","depth","each","elt","eltRange","line","eventList","technician","eventClone","cloneDeep","directive","controller","scope","controllerAs","bindToController","zlDrag","zlDrop","link","element","dragStartEvent","e","dragImage","height","el","clientHeight","zIndex","position","left","bottom","innerHTML","children","float","backgroundColor","width","clientWidth","Math","dataTransfer","effectAllowed","document","body","appendChild","setDragImage","querySelectorAll","remove","setData","JSON","stringify","dragDropCtrl","classList","add","dropEvent","$apply","$data","parse","getData","$event","target","stopPropagation","dragEnterEvent","dragLeaveEvent","options","threshold","seen","createElement","entries","observer","isIntersecting","attributes","draggable","addEventListener","removeEventListener","IntersectionObserver","observe","ScrollHorizontalDirective","$timeout","restrict","scrollLeft","bind","wheelDelta","addClass","offsetWidth","PlanningController","$scope","init","zoom","allowedDays","usableDays","sort","daysList","d","weekday","_dayStart","parseTime","dayStart","_dayEnd","dayEnd","h","sortedEvents","mode","_events","flatten","events","split","groupBy","addMissingDays","dayField","mapValues","eventsByTechnician","addMissingEntities","entities","keys","groupedEvents","startOf","unix","k","result","date","hour","minute","m","second","stop","days","j","isEmpty","includes","found","find","group","obj","sortBy","firstDay","hours","minutes","seconds","month","decallage","isoWeekday","oneDayEvents","dayOfYear","floor","multipleDaysEvents","splitByWeeks","endWeek","endOf","isoWeek","startWeek","isoWeeksInYear","weekInMonth","unshift","times","daysInMonth","n","displayedDaysCount","getName","id","entitiesName","_id","fullname","first_event","startNextDay","endThisDay","continuedAfter","second_event","continuedBefore","concat","st","year","firstEvent","secondEvent","some","isBetween","startingDay","newDate","a","dateA","dateFromString","dateB","getEvents","isToday","week","isFerie","holidays","holiday","hasAbsence","_absences","contains","isInDayRange","currentTimeToPixels","totalMinutes","isCurrent","clickCallbackWrapper","opts","mom","entity","Date","clickCallback","$moment","$entity","clickWeekEvent","showAbsencesCallBackWrapper","showAbsencesCallback","$absences","$day","config","doy","dropCallback","dateSplitted","dayEvent","move","moveAction","$element","duplicateAction","$onInit","$watchCollection","PlanningDirective","templateUrl","entitiesPauses","eventCallback","dayCallback","weekEventCallback","action","PlanningDayController","data","ids","array","forEach","absents","isDefined","hasOverlap","within","absentsString","PlanningDayDirective","replace","preventDefault","dayCtrl","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","TypeError","PlanningLeftColumnController","threeDays","activateDuplicationButtons","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_step$value","column","triggerDayEvent","PlanningLineController","setAbsenceTooltip","state","absenceType","userName","user","confirmation","extractMinutesFromEvent","offsetX","hoverAbsence","tooltip","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getElementsByClassName","leaveAbsence","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getAttribute","dayOfWeek","checkAbsence","checkFerie","$hour","$minutes","clickEvent","currentId","preEvent","postEvent","breaks","SECONDS_BY_DAY","SLIDER_WIDTH","valueOf","toremove","difference","title","round","s","totalWidth","text-align","background","border-top","border-bottom","border-left","generatePostEvent","post","safeParse","get","createBreaks","calcWidth","compact","p","name","postPercentage","arguments","newValue","oldValue","log","string","PlanningLineDirective","topRowDirective","PlanningTopRowController","calcMargin","half","$watchGroup","$filter","offsetY","leaveLine","AVAILABLE_SPACE","calculateContainerHeight","containerHeight","tempTop","tempHeight","displayedEvents","positioning","setStyle","calculateLeft","calculateWidth","ceil","run","$templateCache","put"],"mappings":"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","file":"planning.js","sourcesContent":[";(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning', ['pikaday', 'zlContextMenu'])\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n  angular\n    .module('90Tech.planning')\n    .filter('day', [function () {\n      return function (day) {\n        if (day === undefined || day === null || isNaN(day) || parseInt(day) > 6) return ''\n        return ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'][day]\n      }\n    }])\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .filter('format', function () {\n      return function (time, format) {\n        return time.format(format)\n      }\n    })\n    .filter('capitalize', function () {\n      return function (str) {\n        if (!str) return ''\n        return str.charAt(0).toUpperCase() + str.slice(1)\n      }\n    })\n})(window.angular)\n","/**\n * WebApp Agenda\n * http://docs.pluginit.fr/agenda\n *\n * Copyright 2014 PluginIT\n * Non permissive commercial License.\n */\n\n;(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .filter('range', RangeFilter)\n\n  /**\n   * Class Range for emulate a \"for\" loop\n   * @class RangeFilter\n   * @constructor\n   */\n  function RangeFilter () {\n    /**\n     * Return decimal values arrays at wished size\n     * @param input\n     * @param total\n     * @returns {*}\n     */\n    var operation = function (input, total) {\n      // We parse just in case\n      total = parseInt(total)\n\n      // We're adding at empty array the current value for the loop\n      for (var i = 0; i < total; i++) {\n        input.push(i)\n      }\n\n      // We return the array finally\n      return input\n    }\n\n    /**\n     * Return callback to execute RangeFilter\n     */\n    return operation\n  }\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n  angular\n    .module('90Tech.planning')\n    .filter('strPlanning', ['planningConfiguration', function (planningConfiguration) {\n      return function (val) {\n        return planningConfiguration.strings[val]\n      }\n    }])\n})(window.angular)\n",";(function (angular, _, moment) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .service('AbsenceService', AbsenceService)\n\n  function AbsenceService () {\n    var self = this\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      parseAbsences: parseAbsences\n    })\n\n    function parseAbsences (absences, interval) {\n      if (!Array.isArray(interval)) {\n        throw new Error('Invalid interval')\n      }\n      var parsed = absences.filter(function (abs) {\n        return moment.range(abs.start, abs.end).overlaps(moment.range(interval[0], interval[1]))\n      }).map(function (absence) {\n        absence.style = {}\n        if (moment(absence.start).isSame(moment(angular.copy(interval[0]))) ) {\n          absence.style.top = 0 + 'px'\n          absence.start = interval[0]\n        }\n        if (moment(absence.start).isBefore(moment(angular.copy(interval[0])))) {\n          absence.start = interval[0]\n          absence.style.top = 0 + 'px'\n        }\n        if (moment(absence.end).isAfter(moment(angular.copy(interval[1])))) {\n          absence.end = interval[1]\n        }\n        return absence\n      })\n\n      return mergeRanges(parsed)\n    }\n\n    function mergeRanges (ranges) {\n      var copy = ranges.map(function (r, index) {\n        r.index = index\n        return Object.assign({}, r, {index: index})\n      })\n      // Check if any ranges overlaps\n      // If none overlap, return array\n      if (!_.any(copy, function (range1) {\n        return _.any(copy, function (range2) {\n          if (range1.index === range2.index) {\n            return false\n          }\n          return overlaps(range1, range2)\n        })\n      })) {\n        return ranges\n      }\n      var reduced = ranges.reduce(function (acc, value, index, arr) {\n        var next = arr[index + 1]\n        if (!next || !value) {\n          return acc\n        }\n        if (overlaps(\n          {\n            start: moment(angular.copy(value.start)).toDate(),\n            end: moment(angular.copy(value.end)).toDate()\n          }, {\n            start: moment(angular.copy(next.start)).toDate(),\n            end: moment(angular.copy(next.end)).toDate()\n          })) {\n          acc.push({\n            start: moment.min(\n              moment(angular.copy(value.start)),\n              moment(angular.copy(next.start))\n            ),\n            end: moment.max(\n              moment(angular.copy(value.end)),\n              moment(angular.copy(next.end))\n            )\n          })\n        }\n        return acc\n      }, [])\n\n      return mergeRanges(reduced)\n    }\n  }\n\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n  angular.module('90Tech.planning').service('AbsenceService', AbsenceService);\n\n  function AbsenceService() {\n    var self = this;\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      parseAbsences: parseAbsences\n    });\n\n    function parseAbsences(absences, interval) {\n      if (!Array.isArray(interval)) {\n        throw new Error('Invalid interval');\n      }\n      var parsed = absences.filter(function (abs) {\n        return moment.range(abs.start, abs.end).overlaps(moment.range(interval[0], interval[1]));\n      }).map(function (absence) {\n        absence.style = {};\n        if (moment(absence.start).isSame(moment(angular.copy(interval[0])))) {\n          absence.style.top = 0 + 'px';\n          absence.start = interval[0];\n        }\n        if (moment(absence.start).isBefore(moment(angular.copy(interval[0])))) {\n          absence.start = interval[0];\n          absence.style.top = 0 + 'px';\n        }\n        if (moment(absence.end).isAfter(moment(angular.copy(interval[1])))) {\n          absence.end = interval[1];\n        }\n        return absence;\n      });\n\n      return mergeRanges(parsed);\n    }\n\n    function mergeRanges(_x) {\n      var _again = true;\n\n      _function: while (_again) {\n        var ranges = _x;\n        _again = false;\n\n        var copy = ranges.map(function (r, index) {\n          r.index = index;\n          return Object.assign({}, r, { index: index });\n        });\n        // Check if any ranges overlaps\n        // If none overlap, return array\n        if (!_.any(copy, function (range1) {\n          return _.any(copy, function (range2) {\n            if (range1.index === range2.index) {\n              return false;\n            }\n            return overlaps(range1, range2);\n          });\n        })) {\n          return ranges;\n        }\n        var reduced = ranges.reduce(function (acc, value, index, arr) {\n          var next = arr[index + 1];\n          if (!next || !value) {\n            return acc;\n          }\n          if (overlaps({\n            start: moment(angular.copy(value.start)).toDate(),\n            end: moment(angular.copy(value.end)).toDate()\n          }, {\n            start: moment(angular.copy(next.start)).toDate(),\n            end: moment(angular.copy(next.end)).toDate()\n          })) {\n            acc.push({\n              start: moment.min(moment(angular.copy(value.start)), moment(angular.copy(next.start))),\n              end: moment.max(moment(angular.copy(value.end)), moment(angular.copy(next.end)))\n            });\n          }\n          return acc;\n        }, []);\n\n        _x = reduced;\n        _again = true;\n        copy = reduced = undefined;\n        continue _function;\n      }\n    }\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .service('ColorService', ColorService)\n\n  ColorService.$inject = []\n\n  function ColorService () {\n    var self = this\n\n    _.extend(self, {\n      getLuminance: getLuminance\n    })\n\n\n    /**\n     * return the luminance of a color : > 200 is black\n     * @param c Color\n     * @returns {number}\n     */\n    function getLuminance (c) {\n      c = c || '#ffffff'\n      var r, g, b\n      var rgbRegex = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/\n      if (rgbRegex.test(c)){\n          var exec = rgbRegex.exec(c)\n           r = parseInt(exec[1])\n           g = parseInt(exec[2])\n           b = parseInt(exec[3])\n      } else {\n        var color = c.substring(1) // strip #\n        var rgb = parseInt(color, 16) // convert rrggbb to decimal\n        r = (rgb >> 16) & 0xff // extract red\n        g = (rgb >> 8) & 0xff // extract green\n        b = (rgb >> 0) & 0xff // extract blue\n      }\n\n      var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n      // luma > 200 : black\n      return luma\n    }\n\n  }\n}(window.angular, window._, window.moment))\n",";(function (angular) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .provider('planningConfiguration', function () {\n      var self = this\n\n      self.BASE_SIZE = 10\n      self.MAX_PARALLEL = 3\n      self.strings = {\n        nothing_to_show: 'Rien à afficher'\n      }\n\n      self.DAYS = [0, 1, 2, 3, 4, 5, 6]\n\n      self.parallelText = 'parallel items'\n\n      this.setParallelText = function (text) {\n        self.parallelText = '' + text\n      }\n\n      this.setBaseSize = function (size) {\n        self.BASE_SIZE = size\n      }\n      this.setMaxParallel = function (number) {\n        self.MAX_PARALLEL = number\n      }\n\n      this.setString = function (key, value) {\n        self.strings[key] = value\n      }\n\n      this.setDays = function (value) {\n        self.DAYS = value\n      }\n\n      this.$get = [function () {\n        return {\n          strings: self.strings,\n          BASE_SIZE: self.BASE_SIZE,\n          MAX_PARALLEL: self.MAX_PARALLEL,\n          parallelText: self.parallelText,\n          DAYS: self.DAYS,\n          absentTechnicianCallback: function (callback) {\n            callback()\n          },\n          isFerieCallback: function (callback) {\n            callback()\n          },\n          warningCallback: function (callback) {\n            callback()\n          }\n        }\n      }]\n    })\n}(window.angular))\n",";(function (angular, _, moment) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .service('PauseService', PauseService)\n\n  PauseService.$inject = ['ColorService']\n\n  function PauseService (ColorService) {\n    var self = this\n\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      generateGradient: generateGradient\n    })\n\n    function generateGradient (event, direction) {\n      var color = event.style['background-color']\n      var pauseColor = invertColor(color)\n      var start = event.start\n      var end = event.end\n      var totalRange = moment.range(start, end)\n      var totalDuration = totalRange.diff('milliseconds')\n\n      function parsePause (pauses) {\n        return _.map(pauses, function (pause) {\n          var start = event.start.isAfter(pause.start) ? event.start : pause.start\n          var end = event.end.isBefore(pause.end) ? event.end : pause.end\n          var pauseRange = moment.range(start, end)\n          var pauseDuration = pauseRange.diff('milliseconds')\n          var percentage = pauseDuration / totalDuration * 100\n          var before = totalRange.clone()\n          before.subtract(pauseRange)\n          if (!before.length) {\n            return {range: pauseRange, endPercentage: 100, startPercentage: 0}\n          }\n          var v = (before[0].diff('milliseconds') || totalDuration) / totalDuration * 100\n          return {range: pauseRange, endPercentage: percentage + v, startPercentage: v}\n        })\n      }\n\n      var mapped = parsePause(event.pauses)\n\n      var reduced = _.reduce(mapped, function (acc, range) {\n        return acc + ', ' + color + ' ' + range.startPercentage + '%, ' + pauseColor + ' ' + range.startPercentage + '%, ' + pauseColor + ' ' + range.endPercentage + '%, ' + color + ' ' + range.endPercentage + '%'\n      }, 'linear-gradient(' + direction + ', ' + color)\n\n      reduced += ', ' + color + ' 100%)'\n      return reduced\n    }\n\n    function invertColor (hex) {\n      if (hex.indexOf('#') === 0) {\n        hex = hex.slice(1)\n      }\n      // convert 3-digit hex to 6-digits.\n      if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n      }\n      if (hex.length !== 6) {\n        throw new Error('Invalid HEX color.')\n      }\n      // invert color components\n      var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16)\n      // pad each with zeros and return\n      return '#' + padZero(r) + padZero(g) + padZero(b)\n    }\n\n    function padZero (str, len) {\n      len = len || 2\n      var zeros = new Array(len).join('0')\n      return (zeros + str).slice(-len)\n    }\n  }\n\n})(window.angular, window._, window.moment)\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .service('PositionService', PositionService)\n\n  PositionService.$inject = []\n\n  function PositionService () {\n    var self = this\n\n    _.extend(self, {\n      // Public Methods\n      overlap: overlap\n    })\n\n    /**\n     * Check if event overlap any events in line, merge if parallel items is over maxParallelEvents, and push event in toRemove\n     * @param lines Arrays, containing events example : [[event, event][event,event][event]]\n     * @param event Event\n     * @param maxParallelEvents Int, maximum parallelEvents\n     * @param toRemove Array containing event which have been integrated/merged with another event\n     * @param doublecheck Boolean If true, check if day isn't same between two events (useful for monthly view where hours doesn't overlap on same day)\n     */\n    function overlap (lines, event, maxParallelEvents, toRemove, doublecheck) {\n      var range = event.pre > 0\n        ? moment.range(moment(event.start).subtract(event.pre, 'minutes'), moment(event.end))\n        : event.range\n      for (var i = 0; i < lines.length; i++) {\n        if (event.depth > maxParallelEvents) {\n          var overlap = false\n          _.each(lines[maxParallelEvents], function (elt) {\n\n            var eltRange = elt.pre > 0\n              ? moment.range(moment(elt.start).subtract(elt.pre, 'minutes'), moment(elt.end))\n              : elt.range\n\n            overlap = range.overlaps(eltRange)\n            if (!overlap && doublecheck) {\n              overlap = (event.start.day() === elt.start.day() || event.start.day() === elt.end.day() || event.end.day() === elt.start.day() || event.end.day() === elt.end.day())\n            }\n            if (overlap) {\n              elt.start = moment.min(event.start, elt.start) // set start to minimum of 2 overlapping event\n              elt.end = moment.max(event.end, elt.end)  // set end to maximum of 2 overlapping event\n              elt.range = moment.range(elt.start, elt.end) // Update range\n              elt.line = maxParallelEvents\n              elt.eventList.push(event)\n              if (elt.technician !== event.technician) { // Technician isn't the same, hide it\n                elt.technician = ''\n                event.technician = ''\n              }\n            }\n          })\n          if (overlap) {\n            toRemove.push(event)\n            break\n          }\n          event.depth = maxParallelEvents\n          event.line = maxParallelEvents\n          if (!event.eventList) {\n            var eventClone = _.cloneDeep(event)\n            event.eventList = [eventClone]\n          }\n          lines[maxParallelEvents].push(event)\n          break\n        }\n        if (!lines[i].length) {\n          lines[i].push(event)\n          event.line = i\n          break\n        }\n        if (_.filter(lines[i], function (elt) { // if any event in lines[i] overlap\n          var eltRange = elt.pre > 0\n            ? moment.range(moment(elt.start).subtract(elt.pre, 'minutes'), moment(elt.end))\n            : elt.range\n          overlap = range.overlaps(eltRange)\n          if (!overlap && doublecheck) {\n            overlap = (event.start.day() === elt.start.day() || event.start.day() === elt.end.day() || event.end.day() === elt.start.day() || event.end.day() === elt.end.day())\n          }\n          if (overlap) {\n            elt.depth += 1\n            return true\n          } }).length) {\n          event.depth += 1\n          if (!lines[i + 1]) { // if next line is doesn't exist, add one\n            lines[i + 1] = []\n          }\n        } else {\n          lines[i].push(event)\n          event.line = i\n          break\n        }\n      }\n    }\n  }\n}(window.angular, window._, window.moment))\n",";(function (angular, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningDragDrop', function () {\n      return {\n        controller: function () {},\n        scope: {},\n        controllerAs: 'dragDropCtrl',\n        bindToController: {\n          zlDrag: '=',\n          zlDrop: '&'\n        },\n        link: function (scope, element) {\n          const options = {\n            threshold: 0.5\n          }\n          let seen = false\n          var dragImage = document.createElement('div')\n          var el = element[0]\n          const callback = (entries, observer) => {\n            if (entries[0].isIntersecting && !seen) {\n              seen = true\n              if (el.attributes['zl-drag']) {\n                el.draggable = true\n\n                el.addEventListener(\n                  'dragstart',\n                  dragStartEvent,\n                  false\n                )\n              }\n              if (el.attributes['zl-drop']) {\n                el.addEventListener(\n                  'drop',\n                  dropEvent,\n                  false\n                )\n\n                el.addEventListener(\n                  'dragenter',\n                  dragEnterEvent,\n                  false\n                )\n\n                el.addEventListener(\n                  'dragleave',\n                  dragLeaveEvent,\n                  false\n                )\n              }\n            } else if (!entries[0].isIntersecting && seen) {\n              el.removeEventListener(\n                'dragstart',\n                dragStartEvent,\n                false\n              )\n              el.removeEventListener(\n                'drop',\n                dropEvent,\n                false\n              )\n              el.removeEventListener(\n                'dragenter',\n                dragEnterEvent,\n                false\n              )\n              el.removeEventListener(\n                'dragleave',\n                dragLeaveEvent,\n                false\n              )\n              seen = false\n            }\n          }\n          const observer = new IntersectionObserver(callback, options)\n          observer.observe(element[0])\n\n          function dragStartEvent (e) {\n            dragImage.style.height = el.clientHeight + 'px'\n            dragImage.style.zIndex = '1000'\n            dragImage.style.position = 'relative'\n            dragImage.style.left = '-10000px'\n            dragImage.style.bottom = '-10000px;'\n            dragImage.innerHTML = el.innerHTML\n            if (el.children.length > 1) {\n              dragImage.children[0].style.float = 'left'\n              dragImage.style.backgroundColor = el.children[1].style.backgroundColor\n              dragImage.style.width = el.clientWidth + 'px'\n            } else {\n              dragImage.style.width = Math.min(el.clientWidth, 200) + 'px'\n              dragImage.style.backgroundColor = el.children[0].style.backgroundColor\n            }\n            e.dataTransfer.effectAllowed = 'move'\n\n            document.body.appendChild(dragImage)\n\n            // remove translucent drag if present\n            if (e.dataTransfer.setDragImage) {\n              e.dataTransfer.setDragImage(dragImage, 0, 0)\n            }\n            // Remove tooltips on drag\n            _.each(document.querySelectorAll('.planning-event-tooltip'), function (elt) {\n              elt.remove()\n            })\n            e.dataTransfer.setData('Text', JSON.stringify(scope.dragDropCtrl.zlDrag))\n            this.classList.add('drag')\n            return false\n          }\n          function dropEvent (e) {\n            scope.$apply(function () {\n              scope.dragDropCtrl.zlDrop({ $data: JSON.parse(e.dataTransfer.getData('Text')), $event: e })\n            })\n            e.target.classList.remove('over')\n            this.classList.remove('over')\n            e.stopPropagation()\n            return false\n          }\n          function dragEnterEvent (e) {\n            e.target.classList.add('over')\n            return false\n          }\n          function dragLeaveEvent (e) {\n            e.target.classList.remove('over')\n            return false\n          }\n        }\n      }\n    })\n})(window.angular, _)\n","/**\n * @author Toolito <toolito@90tech.fr>\n * @copyright 2015 Zenlabs SAS. All rights reserved.\n *\n * TODO Export in separate module ?\n */\n;(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlHorizontalScroll', ScrollHorizontalDirective)\n\n  ScrollHorizontalDirective.$inject = ['$timeout']\n\n  function ScrollHorizontalDirective ($timeout) {\n    return {\n      restrict: 'A',\n      scope: {\n        scrollLeft: '='\n      },\n      link: function link (scope, element,  attributes) { // eslint-disable-line\n        element.bind('mousewheel', function (e) {\n          element[0].scrollLeft -= e.wheelDelta / 3\n        })\n        element.addClass('slider')\n\n        if (scope.scrollLeft) {\n        }\n\n        $timeout(function () {\n          // Needs a delay since the offsetWidth we obtain first is off by ~300px\n          element[0].scrollLeft = scope.scrollLeft - element[0].offsetWidth / 2\n        }, 100)\n      }\n    }\n  }\n})(window.angular)\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanning', PlanningDirective)\n\n  PlanningController.$inject = ['$scope', 'planningConfiguration']\n\n  function PlanningController ($scope, planningConfiguration) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        //  sortedEvents       : sortedEvents,\n        isToday: isToday,\n        currentTimeToPixels: currentTimeToPixels,\n        isCurrent: isCurrent,\n        clickCallbackWrapper: clickCallbackWrapper,\n        showAbsencesCallBackWrapper: showAbsencesCallBackWrapper,\n        isInDayRange: isInDayRange,\n        keys: keys,\n        getEvents: getEvents,\n        clickWeekEvent: clickWeekEvent,\n        dropEvent: dropEvent,\n        isFerie: isFerie,\n        hasAbsence: hasAbsence,\n        getName: getName,\n        dayEvent\n      })\n\n      init()\n    }\n\n    function init () {\n      self.zoom = parseInt(self.zoom)\n      self.allowedDays = self.usableDays.sort() || planningConfiguration.DAYS\n      self.daysList = self.allowedDays.map(function (i) {\n        var d = moment(self.position)\n        d.weekday(i)\n        return d\n      })\n\n      if (!self.zoom || self.zoom < 1) {\n        self.zoom = 1\n      }\n\n      self._dayStart = self.dayStart ? parseTime(self.dayStart) : parseTime(0)\n      self._dayEnd = self.dayEnd ? parseTime(self.dayEnd) : parseTime(24)\n      self.width = (self.zoom * (parseInt(self._dayEnd.h) - parseInt(self._dayStart.h) + 1) * BASE_SIZE) + 'px'\n      self.sortedEvents = undefined\n      switch (self.mode) {\n        case 'week':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e.start.format('DD/MM/YYYY')\n          })\n          addMissingDays(self.sortedEvents)\n          break\n        case 'day':\n        case 'week-advanced':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e[self.dayField]\n          })\n          /* If we are in advanced week mode, we have a double grouping: first by technician, then by day of week */\n          if (self.mode === 'week-advanced') {\n            self.sortedEvents = _.mapValues(self.sortedEvents, function (eventsByTechnician) {\n              return _.groupBy(eventsByTechnician, function (e) {\n                return e.start.weekday()\n              })\n            })\n          }\n          addMissingEntities(self.sortedEvents)\n          break\n        case '3day':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n          self.sortedEvents = _.reduce(self.entities, function (acc, v) {\n            acc[v] = []\n            return acc\n          }, {})\n\n          var keys = _.keys(self.sortedEvents)\n          self.groupedEvents = _.map(_.groupBy(self._events, function (e) {\n            return moment(e.start).startOf('day').unix()\n          }), function (v, k) {\n            var result = {\n              key: k,\n              date: moment.unix(k).startOf('day').toDate(),\n              day: moment.unix(k).startOf('day').format('dddd DD MMMM'),\n              value: _.groupBy(v, function (e) {\n                return e.technician\n              }),\n              absences: angular.copy(self.absences)\n            }\n            _.each(self.entities, function (e) {\n              if (!result.value[e]) {\n                result.value[e] = []\n              }\n            })\n            return result\n          })\n\n          var start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n          var stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n          var days = [{start: angular.copy(start), end: angular.copy(stop)}]\n\n          var j = 0\n          while (j < 2) {\n            stop.add(1, 'day')\n            var d = stop.day() - 1\n            if (d < 0) {\n              d = 6\n            }\n            if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n              days.push({start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)})\n              j++\n            }\n          }\n\n          _.each(days, function (d) {\n            var date = \"\" + moment(d.start).startOf('day').unix()\n\n            var found = _.find(self.groupedEvents, function (group) {\n              return group.key === date\n            })\n\n            if (!found) {\n              var obj = {\n                key: date,\n                date: moment(angular.copy(d.start)).startOf('day').toDate(),\n                day: moment(angular.copy(d.start)).startOf('day').format('dddd DD MMMM'),\n                value: {},\n                absences: angular.copy(self.absences)\n              }\n              _.each(_.keys(self.sortedEvents), function (k) {\n                obj.value[k] = []\n              })\n              self.groupedEvents.push(obj)\n            }\n          })\n          self.groupedEvents = _.sortBy(self.groupedEvents, function (e) {\n            return e.key\n          })\n          break\n        case 'month':\n          var firstDay = moment(self.position).date(1).hours(0).minutes(0).seconds(0)\n          self.month = moment(self.position).date(1).hours(0).minutes(0).seconds(0).format('MMMM')\n          self.decallage = firstDay.isoWeekday() - 1 //\n\n          if (self.decallage < 0) {\n            self.decallage = 0\n          }\n          self.oneDayEvents = _(self.events)\n            .filter(function (event) {\n              return event.start.dayOfYear() === event.end.dayOfYear() && event.start.month() === moment(self.position).month()\n            })\n            .groupBy(\n              function (event) { return Math.floor((event.start.date() + self.decallage) / 7.01) }) // 7.01 -> Fix issue when start day = 7 (sunday)\n            .value()\n          self.multipleDaysEvents = _(self.events)\n            .filter(function (event) {\n              return event.start.dayOfYear() !== event.end.dayOfYear()\n            })\n            .map(splitByWeeks)\n            .flatten()\n            .groupBy(function (event) {\n              return Math.floor((event.start.date() + self.decallage) / 7.01) // 7.01 -> Fix issue when start day = 7 (sunday)\n            })\n            .value()\n\n\n          var endWeek = moment(self.position).endOf('month').isoWeek()\n          var startWeek = moment(self.position).startOf('month').isoWeek()\n          // When switching years, last week of month can be 1\n          if (endWeek === 1) {\n            endWeek = moment(self.position).isoWeeksInYear() + 1\n          }\n          if (endWeek < startWeek) {\n            endWeek = startWeek + endWeek\n          }\n          var weekInMonth = endWeek - startWeek + 1\n          for (var i = 0; i < weekInMonth; i++) {\n            if (self.multipleDaysEvents[i] === undefined) {\n              self.multipleDaysEvents[i] = []\n            }\n          }\n          self.days = []\n          // Add day from previous month\n          if (firstDay.isoWeekday() - 1 > 0) {\n            for (i = 0; i < firstDay.isoWeekday() - 1; i++) {\n              self.days.unshift({})\n            }\n          }\n          _.times(firstDay.daysInMonth(), function (n) {\n            var day = moment(firstDay).add(n, 'days')\n            self.days.push({ date: day, events: [] })\n          })\n\n          var displayedDaysCount = (self.days.length > 35 ? 42 : 35)\n          while (self.days.length < displayedDaysCount) {\n            self.days.push({})\n          }\n          break\n      }\n    }\n\n    function getName(id) {\n      return self.entitiesName.find((el) => el._id === id).fullname\n    }\n\n    function split (event) {\n      // Event starts and ends the same day\n      event = angular.copy(event)\n\n      var start = moment(event.start).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n      var stop = moment(event.end).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n      if (event.start.dayOfYear() === event.end.dayOfYear()) {\n        // reset the boundaries if they exceed the one fixed.\n        // And trim events that are entirely out of the boundaries\n        if (event.start.isBefore(start)) {\n          if (event.end.isBefore(start)) {\n            return []\n          }\n          event.start = start\n        }\n        if (event.end.isAfter(stop)) {\n          if (event.start.isAfter(stop)) {\n            return []\n          }\n          event.end = stop\n        }\n        return [event]\n      }\n      // Event is on several days.\n      // Build a first event that ends at the end of the first day\n      var first_event = angular.copy(event)\n      first_event.end = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n      if (event.start.isBefore(start)) {\n        first_event.start = start\n      }\n\n      var startNextDay = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m)\n      var endThisDay = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m)\n      if (event.end.isBefore(startNextDay)) {\n        if (first_event.start.isAfter(endThisDay)) {\n          return []\n        }\n        // Event finishes before start hour next day. No need to create another one\n        return [first_event]\n      }\n      first_event.continuedAfter = true\n\n      // Build a second event that starts at the beginning of the following days.\n      // This event may end several days later. Recursion will handle it\n      var second_event = angular.copy(event)\n      second_event.start = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m)\n      second_event.continuedBefore = true\n\n      if (event.start.isAfter(endThisDay)) {\n        // If the first event starts after curfew, don't add it\n        return split(second_event)\n      }\n\n      return [first_event].concat(split(second_event))\n    }\n\n    function splitByWeeks (event) {\n      if (event.start.isAfter(event.end)) {\n        var st = event.start\n        event.start = event.end\n        event.end = st\n      }\n\n      if (event.start.year() < self.position.year() || event.start.month() < self.position.month()) {\n        // Event starts before our current month\n        if (event.end.year() < self.position.year() || event.end.month() < self.position.month()) {\n          // Event also ends before. Return nothing\n          return []\n        }\n        // Set the beginning at the start of the month\n        event.start = moment(self.position).startOf('month')\n      }\n      if (event.end.month() > self.position.month() || event.end.year() !== self.position.year()) {\n        // Event ends after current month\n        if (event.start.month() > self.position.month()) {\n          return []\n        }\n        event.end = moment(self.position).endOf('month')\n      }\n      // console.info(_.cloneDeep(event))\n      if (event.start.isoWeek() === event.end.isoWeek()) {\n        // If our event is on one week, we're all set\n        return [event]\n      }\n\n      // Split\n      var firstEvent = angular.copy(event)\n      var secondEvent = angular.copy(event)\n      // make it end on the same week\n      firstEvent.continuedAfter = true\n      secondEvent.continuedBefore = true\n      firstEvent.end = moment(firstEvent.start).endOf('week')\n      secondEvent.start.add(1, 'week').startOf('week')\n      // Recursion will handle potential split needed by second event\n      return [firstEvent].concat(splitByWeeks(secondEvent))\n    }\n\n    function filter (events) { // remove event not in range (month, week, day)\n      return _.filter(events, function (e) {\n        var start, stop\n        switch (self.mode) {\n          case 'week':\n          case 'week-advanced':\n            start = moment(self.position).weekday(0).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).weekday(6).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            break\n          case 'day':\n            start = moment(self.position).startOf('day').hour(self._dayStart.h).minute(self._dayStart.m)\n            stop = moment(self.position).endOf('day').hour(self._dayEnd.h).minute(self._dayEnd.m)\n            break\n          case '3day':\n            start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            var days = [{start: angular.copy(start), end: angular.copy(stop)}]\n\n            var i = 0\n            while (i < 2) {\n              stop.add(1, 'day')\n              var d = stop.day() - 1\n              if (d < 0) {\n                d = 6\n              }\n              if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n                days.push({start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)})\n                i++\n              }\n            }\n            return _.some(days, function (d) {\n              return e.start.isBetween(d.start, d.end) || e.end.isBetween(d.start, d.end)\n            })\n          case 'month':\n            start = moment(self.position).date(1).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).weekday(moment(self.position).daysInMonth()).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            break\n        }\n        return e.start.isBetween(start, stop) || e.end.isBetween(start, stop)\n      })\n    }\n\n    function addMissingDays (sortedEvents) {\n      sortedEvents = sortedEvents || {}\n      var startingDay = moment(self.position).weekday(0)\n      _.times(7, function (i) {\n        var newDate = moment(angular.copy(startingDay)).add(i, 'days').format('DD/MM/YYYY')\n        if (!sortedEvents[newDate]) {\n          sortedEvents[newDate] = []\n        }\n      })\n    }\n\n    function addMissingEntities (sortedEvents) {\n      sortedEvents = sortedEvents || {}\n      _.each(self.entities, function (e) {\n        if (!sortedEvents[e]) {\n          sortedEvents[e] = []\n        }\n      })\n    }\n\n    function parseTime (h) {\n      if (h >= 24) {\n        return { h: 23, m: 59 }\n      }\n      return { h: h, m: 0 }\n    }\n\n    function keys (sortedEvents) {\n      switch (self.mode) {\n        case 'week':\n          return Object.keys(sortedEvents).sort(function(a, b) {\n            var dateA = dateFromString(a)\n            var dateB = dateFromString(b)\n            return dateA - dateB\n          })\n        case 'week-advanced':\n        case 'day':\n        case '3day':\n          if (self.entitiesName) {\n            return self.entitiesName.map(e => e._id)\n          }\n          return []\n      }\n    }\n\n    function getEvents (key) {\n      return self.sortedEvents[key]\n    }\n\n    $scope.$watchCollection(function () {\n      return [self.events, self.entities, self.position, self.mode, self.dayStart, self.dayEnd, self.zoom, self.usableDays]\n    }, init)\n\n    function isToday (n) {\n      return self.position.week() === moment().week() && n === moment().dayOfYear()\n    }\n\n    function isFerie (day) {\n      if(self.holidays) {\n        return self.holidays.find(holiday => moment(holiday.date).format('L') === moment(day).format('L'));\n      }\n    }\n\n    function hasAbsence (date) {\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n    }\n\n    function isInDayRange () {\n      return moment().hour() > parseInt(self._dayStart.h) && moment().hour() < parseInt(self._dayEnd.h)\n    }\n\n    function currentTimeToPixels () {\n      var totalMinutes = (moment().hour() - parseInt(self._dayStart ? self._dayStart.h : 0)) * 60 + moment().minutes()\n      return Math.floor(self.zoom * (BASE_SIZE * totalMinutes) / 60)\n    }\n\n    function isCurrent () {\n      return self.position.isSame(moment(), self.mode)\n    }\n\n    function clickCallbackWrapper (opts) {\n      var mom\n      var entity\n      switch (self.mode) {\n        case 'week':\n          var split = opts.d.split('/')\n          /**\n           * split[2] === year\n           * split[1] === month, we need to subtract 1 because momentJS months starts at 0\n           * split[0] === dayOfMonth\n           */\n          mom = moment(new Date(split[2], split[1] - 1, split[0], opts.h, opts.m))\n          break\n        case '3day':\n        case 'day':\n          mom = moment(self.position).hour(opts.h).minute(opts.m)\n          entity = opts.entity\n          break\n        case 'week-advanced':\n          entity = opts.entity\n          mom = moment(self.position).hour(opts.h).minute(opts.m).second(0).weekday(opts.d)\n          break\n      }\n      self.clickCallback({ $moment: mom, $entity: entity })\n    }\n\n    function clickWeekEvent (day, $event) {\n      if (day.date) {\n        self.clickCallback({ $moment: day.date })\n      }\n    }\n\n    function showAbsencesCallBackWrapper (absences, day) {\n      self.showAbsencesCallback({$absences: absences, $day: day})\n    }\n\n    function dropEvent (config) {\n      var mom = config.moment\n      if (!mom) {\n        switch (self.mode) {\n          case 'week':\n            var doy = moment(dateFromString(config.d)).dayOfYear()\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).dayOfYear(doy)\n            break\n          case 'week-advanced':\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).weekday(config.d)\n            break\n          case 'day':\n            mom = moment(self.position).hour(config.h).minute(config.m)\n            break\n          case '3day':\n            mom = moment.unix(config.day).hour(config.h).minute(config.m)\n        }\n      }\n      var entity = (_.includes(['week-advanced', 'day', '3day'], self.mode)) ? config.entity : undefined\n      if((self.mode === 'month') && isFerie(mom)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity })\n        })\n      } else {\n        self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity })\n      }\n    }\n\n    function calculateAdvancedWeekContainerHeight () {\n      return (parseInt(self.zoom) * Math.max(planningConfiguration.BASE_SIZE - 8, 1)) + 'px'\n    }\n\n    function dateFromString (date) {\n      var dateSplitted = date.split('/')\n      return new Date(dateSplitted[2], dateSplitted[1] - 1, dateSplitted[0])\n    }\n\n    function dayEvent (line, move) {\n      if (move) {\n        return self.moveAction({ $element: angular.copy(line) })\n      } else {\n        return self.duplicateAction({ $element: angular.copy(line) })\n      }\n    }\n\n  }\n\n  function PlanningDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning/planning.html',\n      controller: PlanningController,\n      controllerAs: 'planning',\n      bindToController: {\n        zoom: '=',\n        events: '=',\n        entities: '=',\n        entitiesName: '=',\n        entitiesPauses: '=?',\n        absences: '=?',\n        position: '=',\n        mode: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        dayField: '=',\n        eventCallback: '&',\n        dayCallback: '&',\n        clickCallback: '&',\n        weekEventCallback: '&',\n        dropCallback: '&',\n        usableDays: '=?',\n        action: '&?',\n        duplicateAction: '&?',\n        moveAction: '&?',\n        holidays: '=',\n        showAbsencesCallback: '&'\n      },\n      scope: {}\n    }\n  }\n})(window.angular, window.moment, window._)\n","'use strict';\n\n;(function (angular, moment, _) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanning', PlanningDirective);\n\n  PlanningController.$inject = ['$scope', 'planningConfiguration'];\n\n  function PlanningController($scope, planningConfiguration) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE;\n\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        //  sortedEvents       : sortedEvents,\n        isToday: isToday,\n        currentTimeToPixels: currentTimeToPixels,\n        isCurrent: isCurrent,\n        clickCallbackWrapper: clickCallbackWrapper,\n        showAbsencesCallBackWrapper: showAbsencesCallBackWrapper,\n        isInDayRange: isInDayRange,\n        keys: keys,\n        getEvents: getEvents,\n        clickWeekEvent: clickWeekEvent,\n        dropEvent: dropEvent,\n        isFerie: isFerie,\n        hasAbsence: hasAbsence,\n        getName: getName,\n        dayEvent: dayEvent\n      });\n\n      init();\n    };\n\n    function init() {\n      self.zoom = parseInt(self.zoom);\n      self.allowedDays = self.usableDays.sort() || planningConfiguration.DAYS;\n      self.daysList = self.allowedDays.map(function (i) {\n        var d = moment(self.position);\n        d.weekday(i);\n        return d;\n      });\n\n      if (!self.zoom || self.zoom < 1) {\n        self.zoom = 1;\n      }\n\n      self._dayStart = self.dayStart ? parseTime(self.dayStart) : parseTime(0);\n      self._dayEnd = self.dayEnd ? parseTime(self.dayEnd) : parseTime(24);\n      self.width = self.zoom * (parseInt(self._dayEnd.h) - parseInt(self._dayStart.h) + 1) * BASE_SIZE + 'px';\n      self.sortedEvents = undefined;\n      switch (self.mode) {\n        case 'week':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e.start.format('DD/MM/YYYY');\n          });\n          addMissingDays(self.sortedEvents);\n          break;\n        case 'day':\n        case 'week-advanced':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e[self.dayField];\n          });\n          /* If we are in advanced week mode, we have a double grouping: first by technician, then by day of week */\n          if (self.mode === 'week-advanced') {\n            self.sortedEvents = _.mapValues(self.sortedEvents, function (eventsByTechnician) {\n              return _.groupBy(eventsByTechnician, function (e) {\n                return e.start.weekday();\n              });\n            });\n          }\n          addMissingEntities(self.sortedEvents);\n          break;\n        case '3day':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n          self.sortedEvents = _.reduce(self.entities, function (acc, v) {\n            acc[v] = [];\n            return acc;\n          }, {});\n\n          var keys = _.keys(self.sortedEvents);\n          self.groupedEvents = _.map(_.groupBy(self._events, function (e) {\n            return moment(e.start).startOf('day').unix();\n          }), function (v, k) {\n            var result = {\n              key: k,\n              date: moment.unix(k).startOf('day').toDate(),\n              day: moment.unix(k).startOf('day').format('dddd DD MMMM'),\n              value: _.groupBy(v, function (e) {\n                return e.technician;\n              }),\n              absences: angular.copy(self.absences)\n            };\n            _.each(self.entities, function (e) {\n              if (!result.value[e]) {\n                result.value[e] = [];\n              }\n            });\n            return result;\n          });\n\n          var start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n          var stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n          var days = [{ start: angular.copy(start), end: angular.copy(stop) }];\n\n          var j = 0;\n          while (j < 2) {\n            stop.add(1, 'day');\n            var d = stop.day() - 1;\n            if (d < 0) {\n              d = 6;\n            }\n            if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n              days.push({ start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59) });\n              j++;\n            }\n          }\n\n          _.each(days, function (d) {\n            var date = \"\" + moment(d.start).startOf('day').unix();\n\n            var found = _.find(self.groupedEvents, function (group) {\n              return group.key === date;\n            });\n\n            if (!found) {\n              var obj = {\n                key: date,\n                date: moment(angular.copy(d.start)).startOf('day').toDate(),\n                day: moment(angular.copy(d.start)).startOf('day').format('dddd DD MMMM'),\n                value: {},\n                absences: angular.copy(self.absences)\n              };\n              _.each(_.keys(self.sortedEvents), function (k) {\n                obj.value[k] = [];\n              });\n              self.groupedEvents.push(obj);\n            }\n          });\n          self.groupedEvents = _.sortBy(self.groupedEvents, function (e) {\n            return e.key;\n          });\n          break;\n        case 'month':\n          var firstDay = moment(self.position).date(1).hours(0).minutes(0).seconds(0);\n          self.month = moment(self.position).date(1).hours(0).minutes(0).seconds(0).format('MMMM');\n          self.decallage = firstDay.isoWeekday() - 1; //\n\n          if (self.decallage < 0) {\n            self.decallage = 0;\n          }\n          self.oneDayEvents = _(self.events).filter(function (event) {\n            return event.start.dayOfYear() === event.end.dayOfYear() && event.start.month() === moment(self.position).month();\n          }).groupBy(function (event) {\n            return Math.floor((event.start.date() + self.decallage) / 7.01);\n          }) // 7.01 -> Fix issue when start day = 7 (sunday)\n          .value();\n          self.multipleDaysEvents = _(self.events).filter(function (event) {\n            return event.start.dayOfYear() !== event.end.dayOfYear();\n          }).map(splitByWeeks).flatten().groupBy(function (event) {\n            return Math.floor((event.start.date() + self.decallage) / 7.01); // 7.01 -> Fix issue when start day = 7 (sunday)\n          }).value();\n\n          var endWeek = moment(self.position).endOf('month').isoWeek();\n          var startWeek = moment(self.position).startOf('month').isoWeek();\n          // When switching years, last week of month can be 1\n          if (endWeek === 1) {\n            endWeek = moment(self.position).isoWeeksInYear() + 1;\n          }\n          if (endWeek < startWeek) {\n            endWeek = startWeek + endWeek;\n          }\n          var weekInMonth = endWeek - startWeek + 1;\n          for (var i = 0; i < weekInMonth; i++) {\n            if (self.multipleDaysEvents[i] === undefined) {\n              self.multipleDaysEvents[i] = [];\n            }\n          }\n          self.days = [];\n          // Add day from previous month\n          if (firstDay.isoWeekday() - 1 > 0) {\n            for (i = 0; i < firstDay.isoWeekday() - 1; i++) {\n              self.days.unshift({});\n            }\n          }\n          _.times(firstDay.daysInMonth(), function (n) {\n            var day = moment(firstDay).add(n, 'days');\n            self.days.push({ date: day, events: [] });\n          });\n\n          var displayedDaysCount = self.days.length > 35 ? 42 : 35;\n          while (self.days.length < displayedDaysCount) {\n            self.days.push({});\n          }\n          break;\n      }\n    }\n\n    function getName(id) {\n      return self.entitiesName.find(function (el) {\n        return el._id === id;\n      }).fullname;\n    }\n\n    function split(_x) {\n      var _again = true;\n\n      _function: while (_again) {\n        var event = _x;\n        _again = false;\n\n        // Event starts and ends the same day\n        event = angular.copy(event);\n\n        var start = moment(event.start).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n        var stop = moment(event.end).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n        if (event.start.dayOfYear() === event.end.dayOfYear()) {\n          // reset the boundaries if they exceed the one fixed.\n          // And trim events that are entirely out of the boundaries\n          if (event.start.isBefore(start)) {\n            if (event.end.isBefore(start)) {\n              return [];\n            }\n            event.start = start;\n          }\n          if (event.end.isAfter(stop)) {\n            if (event.start.isAfter(stop)) {\n              return [];\n            }\n            event.end = stop;\n          }\n          return [event];\n        }\n        // Event is on several days.\n        // Build a first event that ends at the end of the first day\n        var first_event = angular.copy(event);\n        first_event.end = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n        if (event.start.isBefore(start)) {\n          first_event.start = start;\n        }\n\n        var startNextDay = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m);\n        var endThisDay = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m);\n        if (event.end.isBefore(startNextDay)) {\n          if (first_event.start.isAfter(endThisDay)) {\n            return [];\n          }\n          // Event finishes before start hour next day. No need to create another one\n          return [first_event];\n        }\n        first_event.continuedAfter = true;\n\n        // Build a second event that starts at the beginning of the following days.\n        // This event may end several days later. Recursion will handle it\n        var second_event = angular.copy(event);\n        second_event.start = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m);\n        second_event.continuedBefore = true;\n\n        if (event.start.isAfter(endThisDay)) {\n          // If the first event starts after curfew, don't add it\n          _x = second_event;\n          _again = true;\n          start = stop = first_event = startNextDay = endThisDay = second_event = undefined;\n          continue _function;\n        }\n\n        return [first_event].concat(split(second_event));\n      }\n    }\n\n    function splitByWeeks(event) {\n      if (event.start.isAfter(event.end)) {\n        var st = event.start;\n        event.start = event.end;\n        event.end = st;\n      }\n\n      if (event.start.year() < self.position.year() || event.start.month() < self.position.month()) {\n        // Event starts before our current month\n        if (event.end.year() < self.position.year() || event.end.month() < self.position.month()) {\n          // Event also ends before. Return nothing\n          return [];\n        }\n        // Set the beginning at the start of the month\n        event.start = moment(self.position).startOf('month');\n      }\n      if (event.end.month() > self.position.month() || event.end.year() !== self.position.year()) {\n        // Event ends after current month\n        if (event.start.month() > self.position.month()) {\n          return [];\n        }\n        event.end = moment(self.position).endOf('month');\n      }\n      // console.info(_.cloneDeep(event))\n      if (event.start.isoWeek() === event.end.isoWeek()) {\n        // If our event is on one week, we're all set\n        return [event];\n      }\n\n      // Split\n      var firstEvent = angular.copy(event);\n      var secondEvent = angular.copy(event);\n      // make it end on the same week\n      firstEvent.continuedAfter = true;\n      secondEvent.continuedBefore = true;\n      firstEvent.end = moment(firstEvent.start).endOf('week');\n      secondEvent.start.add(1, 'week').startOf('week');\n      // Recursion will handle potential split needed by second event\n      return [firstEvent].concat(splitByWeeks(secondEvent));\n    }\n\n    function filter(events) {\n      // remove event not in range (month, week, day)\n      return _.filter(events, function (e) {\n        var start, stop;\n        switch (self.mode) {\n          case 'week':\n          case 'week-advanced':\n            start = moment(self.position).weekday(0).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).weekday(6).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            break;\n          case 'day':\n            start = moment(self.position).startOf('day').hour(self._dayStart.h).minute(self._dayStart.m);\n            stop = moment(self.position).endOf('day').hour(self._dayEnd.h).minute(self._dayEnd.m);\n            break;\n          case '3day':\n            start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            var days = [{ start: angular.copy(start), end: angular.copy(stop) }];\n\n            var i = 0;\n            while (i < 2) {\n              stop.add(1, 'day');\n              var d = stop.day() - 1;\n              if (d < 0) {\n                d = 6;\n              }\n              if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n                days.push({ start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59) });\n                i++;\n              }\n            }\n            return _.some(days, function (d) {\n              return e.start.isBetween(d.start, d.end) || e.end.isBetween(d.start, d.end);\n            });\n          case 'month':\n            start = moment(self.position).date(1).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).weekday(moment(self.position).daysInMonth()).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            break;\n        }\n        return e.start.isBetween(start, stop) || e.end.isBetween(start, stop);\n      });\n    }\n\n    function addMissingDays(sortedEvents) {\n      sortedEvents = sortedEvents || {};\n      var startingDay = moment(self.position).weekday(0);\n      _.times(7, function (i) {\n        var newDate = moment(angular.copy(startingDay)).add(i, 'days').format('DD/MM/YYYY');\n        if (!sortedEvents[newDate]) {\n          sortedEvents[newDate] = [];\n        }\n      });\n    }\n\n    function addMissingEntities(sortedEvents) {\n      sortedEvents = sortedEvents || {};\n      _.each(self.entities, function (e) {\n        if (!sortedEvents[e]) {\n          sortedEvents[e] = [];\n        }\n      });\n    }\n\n    function parseTime(h) {\n      if (h >= 24) {\n        return { h: 23, m: 59 };\n      }\n      return { h: h, m: 0 };\n    }\n\n    function keys(sortedEvents) {\n      switch (self.mode) {\n        case 'week':\n          return Object.keys(sortedEvents).sort(function (a, b) {\n            var dateA = dateFromString(a);\n            var dateB = dateFromString(b);\n            return dateA - dateB;\n          });\n        case 'week-advanced':\n        case 'day':\n        case '3day':\n          if (self.entitiesName) {\n            return self.entitiesName.map(function (e) {\n              return e._id;\n            });\n          }\n          return [];\n      }\n    }\n\n    function getEvents(key) {\n      return self.sortedEvents[key];\n    }\n\n    $scope.$watchCollection(function () {\n      return [self.events, self.entities, self.position, self.mode, self.dayStart, self.dayEnd, self.zoom, self.usableDays];\n    }, init);\n\n    function isToday(n) {\n      return self.position.week() === moment().week() && n === moment().dayOfYear();\n    }\n\n    function isFerie(day) {\n      if (self.holidays) {\n        return self.holidays.find(function (holiday) {\n          return moment(holiday.date).format('L') === moment(day).format('L');\n        });\n      }\n    }\n\n    function hasAbsence(date) {\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n\n    function isInDayRange() {\n      return moment().hour() > parseInt(self._dayStart.h) && moment().hour() < parseInt(self._dayEnd.h);\n    }\n\n    function currentTimeToPixels() {\n      var totalMinutes = (moment().hour() - parseInt(self._dayStart ? self._dayStart.h : 0)) * 60 + moment().minutes();\n      return Math.floor(self.zoom * (BASE_SIZE * totalMinutes) / 60);\n    }\n\n    function isCurrent() {\n      return self.position.isSame(moment(), self.mode);\n    }\n\n    function clickCallbackWrapper(opts) {\n      var mom;\n      var entity;\n      switch (self.mode) {\n        case 'week':\n          var split = opts.d.split('/');\n          /**\n           * split[2] === year\n           * split[1] === month, we need to subtract 1 because momentJS months starts at 0\n           * split[0] === dayOfMonth\n           */\n          mom = moment(new Date(split[2], split[1] - 1, split[0], opts.h, opts.m));\n          break;\n        case '3day':\n        case 'day':\n          mom = moment(self.position).hour(opts.h).minute(opts.m);\n          entity = opts.entity;\n          break;\n        case 'week-advanced':\n          entity = opts.entity;\n          mom = moment(self.position).hour(opts.h).minute(opts.m).second(0).weekday(opts.d);\n          break;\n      }\n      self.clickCallback({ $moment: mom, $entity: entity });\n    }\n\n    function clickWeekEvent(day, $event) {\n      if (day.date) {\n        self.clickCallback({ $moment: day.date });\n      }\n    }\n\n    function showAbsencesCallBackWrapper(absences, day) {\n      self.showAbsencesCallback({ $absences: absences, $day: day });\n    }\n\n    function dropEvent(config) {\n      var mom = config.moment;\n      if (!mom) {\n        switch (self.mode) {\n          case 'week':\n            var doy = moment(dateFromString(config.d)).dayOfYear();\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).dayOfYear(doy);\n            break;\n          case 'week-advanced':\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).weekday(config.d);\n            break;\n          case 'day':\n            mom = moment(self.position).hour(config.h).minute(config.m);\n            break;\n          case '3day':\n            mom = moment.unix(config.day).hour(config.h).minute(config.m);\n        }\n      }\n      var entity = _.includes(['week-advanced', 'day', '3day'], self.mode) ? config.entity : undefined;\n      if (self.mode === 'month' && isFerie(mom)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity });\n        });\n      } else {\n        self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity });\n      }\n    }\n\n    function calculateAdvancedWeekContainerHeight() {\n      return parseInt(self.zoom) * Math.max(planningConfiguration.BASE_SIZE - 8, 1) + 'px';\n    }\n\n    function dateFromString(date) {\n      var dateSplitted = date.split('/');\n      return new Date(dateSplitted[2], dateSplitted[1] - 1, dateSplitted[0]);\n    }\n\n    function dayEvent(line, move) {\n      if (move) {\n        return self.moveAction({ $element: angular.copy(line) });\n      } else {\n        return self.duplicateAction({ $element: angular.copy(line) });\n      }\n    }\n  }\n\n  function PlanningDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning/planning.html',\n      controller: PlanningController,\n      controllerAs: 'planning',\n      bindToController: {\n        zoom: '=',\n        events: '=',\n        entities: '=',\n        entitiesName: '=',\n        entitiesPauses: '=?',\n        absences: '=?',\n        position: '=',\n        mode: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        dayField: '=',\n        eventCallback: '&',\n        dayCallback: '&',\n        clickCallback: '&',\n        weekEventCallback: '&',\n        dropCallback: '&',\n        usableDays: '=?',\n        action: '&?',\n        duplicateAction: '&?',\n        moveAction: '&?',\n        holidays: '=',\n        showAbsencesCallback: '&'\n      },\n      scope: {}\n    };\n  }\n})(window.angular, window.moment, window._);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningDay', PlanningDayDirective)\n\n  PlanningDayController.$inject = [\n    // Angular\n    '$scope'\n    // Libs\n    // Managers\n    // Services\n    // Const\n    // Resolved\n  ]\n  function PlanningDayController (\n    // Angular\n    $scope\n    // Libs\n    // Managers\n    // Services\n    // Const\n    // Resolved\n  ) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        dropEvent: dropEvent,\n        getName,\n        absents: []\n      })\n\n      self.isDefined = (self.day.events === undefined)\n      init()\n      $scope.$watchCollection([self.day, self.absences], function () {\n        if (self.day && self.day.date && self.absences && Object.keys(self.absences).length) {\n          self.absents = Object.keys(self.absences).reduce(function (acc, key) {\n            var array = self.absences[key]\n            var hasOverlap = _.any(array, function (absence) {\n              var range = moment.range(absence.start, absence.end)\n              if (moment(absence.start).diff(absence.end, 'minutes') === 0) {\n                return false\n              }\n              if (moment(absence.start).hours() === 12 && moment(absence.start).isSame(self.day.date, 'day') ) {\n                return !!moment(absence.start).isBetween(self.day.date, moment(self.day.date).endOf('day'))\n              }\n              if (self.day.date.within(range) ) {\n                return true\n              }\n            })\n            if (hasOverlap) {\n              acc.push(key)\n            }\n            return acc\n          }, [])\n          self.absentsString = '<div>' + self.getName(self.absents).join('<br>') + '</div>'\n        } else {\n          self.absentsString = ''\n          self.absents = []\n        }\n      })\n    }\n\n\n    function init () {\n      if(self.holidays && self.day.date) {\n        self.isFerie = self.holidays.find(holiday => moment(holiday.date).format('L') === moment(self.day.date).format('L'));\n      }\n    }\n\n\n    function dropEvent (data, event) {\n      self.dropCallback({ $data: data, $event: event})\n    }\n\n    function getName(ids) {\n      const array = []\n      ids.forEach((id) => {\n        array.push(self.entities.find((el) => el._id === id).fullname)\n      })\n      return array\n    }\n  }\n\n  /**\n   *\n   */\n  function PlanningDayDirective () {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-day-block/planning-day.html',\n      controller: PlanningDayController,\n      controllerAs: 'dayCtrl',\n      bindToController: {\n        day: '=',\n        events: '=',\n        clickCallback: '&',\n        entities: '=?',\n        dropCallback: '&',\n        absences: '=?',\n        holidays: \"=\"\n      },\n      scope: true,\n      link: function (scope, element) {\n        var el = element[0]\n        window.addEventListener('dragover', function (e) {\n          e.preventDefault();\n        }, false);\n        window.addEventListener('drop', function (e) {\n          e.preventDefault();\n        }, false);\n        el.addEventListener(\n          'drop',\n          function (e) {\n            e.preventDefault()\n            e.stopPropagation()\n            if (e.stopPropagation) e.stopPropagation()\n            this.classList.remove('over')\n            scope.$apply(function () {\n              scope.dayCtrl.dropEvent(JSON.parse(e.dataTransfer.getData('Text')), e)\n            })\n            return false\n          },\n          false\n        )\n\n        el.addEventListener(\n          'dragenter',\n          function (e) {\n            this.classList.add('over')\n            return false\n          },\n          false\n        )\n\n        el.addEventListener(\n          'dragleave',\n          function (e) {\n            this.classList.remove('over')\n            return false\n          },\n          false\n        )\n      }\n    }\n  }\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningDay', PlanningDayDirective);\n\n  PlanningDayController.$inject = [\n  // Angular\n  '$scope'\n  // Libs\n  // Managers\n  // Services\n  // Const\n  // Resolved\n  ];\n  function PlanningDayController(\n  // Angular\n  $scope\n  // Libs\n  // Managers\n  // Services\n  // Const\n  // Resolved\n  ) {\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        dropEvent: dropEvent,\n        getName: getName,\n        absents: []\n      });\n\n      self.isDefined = self.day.events === undefined;\n      init();\n      $scope.$watchCollection([self.day, self.absences], function () {\n        if (self.day && self.day.date && self.absences && Object.keys(self.absences).length) {\n          self.absents = Object.keys(self.absences).reduce(function (acc, key) {\n            var array = self.absences[key];\n            var hasOverlap = _.any(array, function (absence) {\n              var range = moment.range(absence.start, absence.end);\n              if (moment(absence.start).diff(absence.end, 'minutes') === 0) {\n                return false;\n              }\n              if (moment(absence.start).hours() === 12 && moment(absence.start).isSame(self.day.date, 'day')) {\n                return !!moment(absence.start).isBetween(self.day.date, moment(self.day.date).endOf('day'));\n              }\n              if (self.day.date.within(range)) {\n                return true;\n              }\n            });\n            if (hasOverlap) {\n              acc.push(key);\n            }\n            return acc;\n          }, []);\n          self.absentsString = '<div>' + self.getName(self.absents).join('<br>') + '</div>';\n        } else {\n          self.absentsString = '';\n          self.absents = [];\n        }\n      });\n    };\n\n    function init() {\n      if (self.holidays && self.day.date) {\n        self.isFerie = self.holidays.find(function (holiday) {\n          return moment(holiday.date).format('L') === moment(self.day.date).format('L');\n        });\n      }\n    }\n\n    function dropEvent(data, event) {\n      self.dropCallback({ $data: data, $event: event });\n    }\n\n    function getName(ids) {\n      var array = [];\n      ids.forEach(function (id) {\n        array.push(self.entities.find(function (el) {\n          return el._id === id;\n        }).fullname);\n      });\n      return array;\n    }\n  }\n\n  /**\n   *\n   */\n  function PlanningDayDirective() {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-day-block/planning-day.html',\n      controller: PlanningDayController,\n      controllerAs: 'dayCtrl',\n      bindToController: {\n        day: '=',\n        events: '=',\n        clickCallback: '&',\n        entities: '=?',\n        dropCallback: '&',\n        absences: '=?',\n        holidays: \"=\"\n      },\n      scope: true,\n      link: function link(scope, element) {\n        var el = element[0];\n        window.addEventListener('dragover', function (e) {\n          e.preventDefault();\n        }, false);\n        window.addEventListener('drop', function (e) {\n          e.preventDefault();\n        }, false);\n        el.addEventListener('drop', function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.stopPropagation) e.stopPropagation();\n          this.classList.remove('over');\n          scope.$apply(function () {\n            scope.dayCtrl.dropEvent(JSON.parse(e.dataTransfer.getData('Text')), e);\n          });\n          return false;\n        }, false);\n\n        el.addEventListener('dragenter', function (e) {\n          this.classList.add('over');\n          return false;\n        }, false);\n\n        el.addEventListener('dragleave', function (e) {\n          this.classList.remove('over');\n          return false;\n        }, false);\n      }\n    };\n  }\n})(window.angular, window._, window.moment);\n\n","'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\n;(function (angular, moment, _) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningLeftColumn', PlanningDirective);\n\n  PlanningLeftColumnController.$inject = ['$scope'];\n\n  function PlanningLeftColumnController($scope) {\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        triggerDayEvent: triggerDayEvent\n      });\n      $scope.$watchCollection(function () {\n        return [self.events, self.position, self.mode, self.dayStart, self.dayEnd, self.usableDays, self.entitiesName];\n      }, init);\n    };\n\n    function init() {\n      if (!self.threeDays) self.activateDuplicationButtons = true;\n      self.days = [];\n      self.allowedDays = self.usableDays;\n      self._absences = [];\n      if (self.mode === 'week') {\n        _.forEach(self.allowedDays, function (d) {\n          var day = moment(self.position);\n          day.weekday(d);\n          self.days.push(day);\n        });\n        self.days = _.sortBy(self.days, function (d) {\n          return moment(d).toDate();\n        });\n        if (self.absences) {\n          (function () {\n            var index = 0;\n            self.days.forEach(function (day) {\n              self._absences[index] = [];\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = Object.entries(self.absences)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _step$value = _slicedToArray(_step.value, 2);\n\n                  var key = _step$value[0];\n                  var value = _step$value[1];\n\n                  value.forEach(function (absence) {\n                    if (day.isBetween(moment(absence.start), moment(absence.end)) || moment(day).isSame(moment(absence.start), 'day') && moment(day).isSame(moment(absence.end), 'day')) {\n                      self._absences[index].push(angular.copy(absence));\n                    }\n                  });\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator['return']) {\n                    _iterator['return']();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              index++;\n            });\n          })();\n        }\n      } else if (self.mode === 'day' && self.dayField) {\n        self.column = self.entitiesName;\n      }\n    }\n\n    function triggerDayEvent(line, move) {\n      if (move) {\n        return self.dayEvent(angular.copy(self.events[line._id]), true);\n      } else {\n        return self.dayEvent(angular.copy(self.events[line._id]));\n      }\n    }\n  }\n\n  function PlanningDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-left-column/planning-left-column.html',\n      controller: PlanningLeftColumnController,\n      controllerAs: 'planningLeftColumn',\n      bindToController: {\n        events: '=',\n        entitiesName: '=',\n        position: '=',\n        mode: '=',\n        dayField: '=',\n        usableDays: '=',\n        isFerie: '=?',\n        absences: '=',\n        dayEvent: '=',\n        threeDays: '<'\n      },\n      scope: true\n    };\n  }\n})(window.angular, window.moment, window._);\n\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningLeftColumn', PlanningDirective)\n\n  PlanningLeftColumnController.$inject = ['$scope']\n\n  function PlanningLeftColumnController ($scope) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        triggerDayEvent\n      })\n      $scope.$watchCollection(function () {\n        return [self.events, self.position, self.mode, self.dayStart, self.dayEnd, self.usableDays, self.entitiesName]\n      }, init)\n    }\n\n    function init () {\n      if (!self.threeDays) self.activateDuplicationButtons = true\n      self.days = []\n      self.allowedDays = self.usableDays\n      self._absences = []\n      if (self.mode === 'week') {\n        _.forEach(self.allowedDays, function (d) {\n          var day = moment(self.position)\n          day.weekday(d)\n          self.days.push(day)\n        })\n        self.days = _.sortBy(self.days, function (d) {\n          return moment(d).toDate()\n        })\n        if(self.absences) {\n          let index = 0\n          self.days.forEach(day => {\n            self._absences[index]=[]\n            for (const [key, value] of Object.entries(self.absences)) {\n              value.forEach(absence => {\n                if(day.isBetween(moment(absence.start), moment(absence.end)) || (moment(day).isSame(moment(absence.start),'day') && moment(day).isSame(moment(absence.end),'day'))){\n                  self._absences[index].push(angular.copy(absence))\n                }\n              })\n            }\n            index++\n          });\n        }\n      } else if (self.mode === 'day' && self.dayField) {\n        self.column = self.entitiesName\n      }\n    }\n\n    function triggerDayEvent (line, move) {\n      if (move) {\n        return self.dayEvent(angular.copy(self.events[line._id]), true)\n      } else {\n        return self.dayEvent(angular.copy(self.events[line._id]))\n      }\n    }\n  }\n\n  function PlanningDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-left-column/planning-left-column.html',\n      controller: PlanningLeftColumnController,\n      controllerAs: 'planningLeftColumn',\n      bindToController: {\n        events: '=',\n        entitiesName: '=',\n        position: '=',\n        mode: '=',\n        dayField: '=',\n        usableDays: '=',\n        isFerie: '=?',\n        absences: '=',\n        dayEvent: '=',\n        threeDays: '<'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window.moment, window._)\n","'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningLine', PlanningLineDirective);\n\n  PlanningLineController.$inject = ['$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService'];\n\n  /**\n   *\n   */\n  function PlanningLineController($scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n    var BASE_SIZE = planningConfiguration.BASE_SIZE;\n    var parallelText = planningConfiguration.parallelText;\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL;\n\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveAbsence: leaveAbsence\n      });\n      init();\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd];\n      }, init);\n\n      $scope.$watchCollection(function () {\n        return [self.absences];\n      }, function (newValue, oldValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.position)).startOf('day');\n          var end = moment(angular.copy(self.position)).endOf('day');\n          self._absences = AbsenceService.parseAbsences(self.absences, [start, end]).map(function (abs) {\n            abs.style = {\n              left: (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * moment.range(abs.start, abs.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px'\n            };\n            abs.range = moment.range(abs.start, abs.end);\n            abs['class'] = 'planning-absence-' + abs.confirmation.state;\n            abs.tooltip = setAbsenceTooltip(abs);\n            return abs;\n          });\n        } else if (self.absences) {\n          var start = moment(angular.copy(self.dayOfWeek)).startOf('day');\n          var end = moment(angular.copy(self.dayOfWeek)).endOf('day');\n          self._absences = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = Object.entries(self.absences)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var _step$value = _slicedToArray(_step.value, 2);\n\n              var key = _step$value[0];\n              var value = _step$value[1];\n\n              value.forEach(function (absence) {\n                if (self.dayOfWeek.isBetween(moment(absence.start), moment(absence.end)) || moment(self.dayOfWeek).isSame(moment(absence.start), 'day') && moment(self.dayOfWeek).isSame(moment(absence.end), 'day')) {\n                  self._absences.push(angular.copy(absence));\n                }\n              });\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator['return']) {\n                _iterator['return']();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          self._absences.forEach(function (absence) {\n            var index = self._absences.indexOf(absence);\n            if (moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('day')) && moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day')) || moment(absence.end).isSame(moment(self.dayOfWeek).endOf('day')) && moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('hour')) || moment(absence.start).isSame(moment(self.dayOfWeek).startOf('day')) && moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day'))) {\n              absence.start = moment(self.dayOfWeek).startOf('day');\n              absence.end = moment(self.dayOfWeek).endOf('day');\n            }\n\n            absence.style = {\n              left: (moment(absence.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(absence.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * moment.range(absence.start, absence.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              height: 100 / self._absences.length + '%',\n              position: 'absolute',\n              top: 100 / self._absences.length * index + '%'\n            };\n            absence.range = moment.range(absence.start, absence.end);\n            absence['class'] = 'planning-absence-' + absence.confirmation.state;\n            absence.tooltip = setAbsenceTooltip(absence);\n            absence.index = index;\n          });\n        } else {\n          self._absences = [];\n        }\n      });\n    };\n\n    self.log = function (a) {};\n\n    self.replace = function (string) {\n      if (!string) return;\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '');\n    };\n\n    self.preEvent = {};\n    self.postEvent = {};\n\n    function setAbsenceTooltip(abs) {\n      var state = '';\n      var absenceType = abs.absenceType;\n      var userName = self.mode === 'week' ? abs.user.fullname + ' - ' : '';\n      switch (abs.confirmation.state) {\n        case 'sending':\n          state = userName + 'Absence envoyée';\n          break;\n        case 'pending':\n          state = userName + 'Absence en cours de traitement';\n          break;\n        case 'partial-accepted':\n          state = userName + 'Absence en cours de traitement';\n          break;\n        case 'accepted':\n          state = userName + 'Absence acceptée';\n          break;\n      }\n      if (absenceType) {\n        return state + '\\nRaison: ' + absenceType;\n      } else {\n        return state;\n      }\n    }\n    function extractMinutesFromEvent($event) {\n      var minutes;\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30;\n      } else {\n        minutes = Math.floor($event.offsetX / (BASE_SIZE * self.zoom) * 60);\n      }\n      return minutes;\n    }\n\n    function hoverAbsence(absence) {\n      self.tooltip = setAbsenceTooltip(absence);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = document.getElementsByClassName(absence._id)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var iterator = _step2.value;\n\n          iterator.classList.add('absence-hover');\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    function leaveAbsence() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = document.getElementsByClassName('absence')[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var iterator = _step3.value;\n\n          iterator.classList.remove('absence-hover');\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3['return']) {\n            _iterator3['return']();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    function dropEvent(data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'));\n      var minutes = extractMinutesFromEvent(event);\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      var day = line.dayOfWeek ? line.dayOfWeek : line.position;\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      }\n    }\n\n    function clickEvent(hour, $event, line) {\n      var day = !!line.dayOfWeek ? line.dayOfWeek : line.position;\n      var minutes = extractMinutesFromEvent($event);\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else {\n        self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      }\n    }\n\n    function init() {\n      var currentId = 0;\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {};\n      self.postEvent = {};\n      self.breaks = [];\n\n      self._events = angular.copy(self.events);\n\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf();\n      });\n\n      var lines = [[]];\n      var toremove = [];\n      _.each(self._events, function (event) {\n        var style = {};\n        event.depth = 1;\n        event.range = moment.range(event.start, event.end);\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes');\n          event.range = moment.range(event.start, end);\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * event.range / self.SECONDS_BY_DAY / 1000 + 'px';\n        style['background-color'] = event['background-color'] || '#778899';\n        if (ColorService.getLuminance(style['background-color']) > 200) {\n          style.color = 'black';\n        } else {\n          style.color = 'white';\n        }\n        event.style = style;\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove);\n      });\n      self._events = _.difference(self._events, toremove);\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId);\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n          event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n          event.style['background-color'] = '#000';\n          event.style['font-weight'] = 'bold';\n          event.style.color = '#fff';\n          event.title = event.eventList.length + ' ' + parallelText;\n          if (event.tooltip) event.tooltip = event.title;\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n        if (event.line === undefined) event.line = MAX_PARALLEL;\n        event.style.top = Math.round(parseInt(event.line) * 70 / lines.length) + '%';\n        event.style.height = Math.round(70 / lines.length) + '%';\n        event.percentage = '100%';\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none';\n          var s = moment(event.start).subtract(event.pre, 'minutes');\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day');\n          }\n          var e = moment(event.start);\n          var r = moment.range(s, e);\n          var totalRange = moment.range(s, event.range.end);\n          var percentage = r.valueOf() / totalRange.valueOf() * 100;\n          event.percentage = 100 - percentage + '%';\n          var obj = {\n            percentage: percentage + '%',\n            style: {\n              left: (moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(s).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * r.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background': 'repeating-linear-gradient(45deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          };\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj;\n          } else {\n            event.pre = 0;\n          }\n        }\n        generatePostEvent(event);\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to right');\n          event.style['background-color'] = undefined;\n        }\n        var pre = self.preEvent[event.id];\n        var post = self.postEvent[event.id];\n        event.style.totalWidth = safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1 + 'px';\n        currentId++;\n      });\n      if (self.pauses) {\n        createBreaks();\n      }\n    }\n\n    function calcWidth(zoom) {\n      return parseInt(zoom) * BASE_SIZE + 'px';\n    }\n\n    function createBreaks() {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        };\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return;\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart));\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd));\n        }\n        pause.style.left = (pause.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + pause.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        pause.style.width = self.zoom * self.SLIDER_WIDTH * moment.range(pause.start, pause.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n\n        return pause;\n      }));\n    }\n\n    function checkAbsence(date) {\n      if (self.mode === 'week') {\n        return false;\n      }\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n\n    function checkFerie(date) {\n      return self.holidays.find(function (holiday) {\n        return moment(holiday.date).format('L') === moment(date).format('L');\n      });\n    }\n\n    function generatePostEvent(event) {\n      if (!event.post) {\n        return null;\n      }\n      event.style['border-right'] = 'none';\n      var end = moment(event.end).add(event.post, 'minutes');\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day');\n      }\n      var start = moment(event.end);\n      var range = moment.range(start, end);\n      var totalRange = moment.range(event.range.start, event.range.end);\n      var percentage = range.valueOf() / totalRange.valueOf() * 100;\n      event.postPercentage = 100 - percentage + '%';\n      var obj = {\n        percentage: percentage + '%',\n        style: {\n          left: (moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(start).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n          width: self.zoom * self.SLIDER_WIDTH * range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background': 'repeating-linear-gradient(135deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      };\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj;\n      } else {\n        event.post = 0;\n      }\n    }\n\n    function safeParse() {\n      var width = arguments.length <= 0 || arguments[0] === undefined ? '0px' : arguments[0];\n\n      return parseInt(width.replace('px', ''));\n    }\n  }\n\n  function PlanningLineDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-line/planning-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        clickCallback: '&',\n        dropCallback: '&',\n        pauses: '=?',\n        absences: '=?',\n        position: '=?',\n        mode: '=?',\n        entities: '=?',\n        dayOfWeek: '=',\n        holidays: '='\n      },\n      scope: true\n    };\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService']\n\n  /**\n   *\n   */\n  function\n  PlanningLineController ($scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveAbsence: leaveAbsence\n      })\n      init()\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd]\n      }, init)\n\n      $scope.$watchCollection(function () {\n        return [self.absences]\n      }, function (newValue, oldValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.position)).startOf('day')\n          var end = moment(angular.copy(self.position)).endOf('day')\n            self._absences = AbsenceService.parseAbsences(self.absences , [start, end]).map(function (abs) {\n                abs.style = {\n                left: (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n                width: self.zoom * self.SLIDER_WIDTH * (moment.range(abs.start, abs.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n              }\n              abs.range = moment.range(abs.start, abs.end)\n              abs.class = 'planning-absence-' + abs.confirmation.state\n              abs.tooltip = setAbsenceTooltip(abs)\n              return abs\n            })\n\n        } else if (self.absences) {\n          var start = moment(angular.copy(self.dayOfWeek)).startOf('day')\n          var end = moment(angular.copy(self.dayOfWeek)).endOf('day')\n          self._absences = []\n          for (const [key, value] of Object.entries(self.absences)) {\n            value.forEach(absence => {\n              if(self.dayOfWeek.isBetween(moment(absence.start), moment(absence.end)) || (moment(self.dayOfWeek).isSame(moment(absence.start),'day') && moment(self.dayOfWeek).isSame(moment(absence.end),'day'))){\n                self._absences.push(angular.copy(absence))\n              }\n            })\n          }\n          self._absences.forEach(absence => {\n            let index = self._absences.indexOf(absence)\n            if (\n              (moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('day')) && (moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day')))) ||\n              (moment(absence.end).isSame(moment(self.dayOfWeek).endOf('day')) && moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('hour'))) ||\n              ((moment(absence.start).isSame(moment(self.dayOfWeek).startOf('day')) && (moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day')))))){\n              absence.start = moment(self.dayOfWeek).startOf('day')\n              absence.end = moment(self.dayOfWeek).endOf('day')\n            }\n\n            absence.style = {\n              left: (moment(absence.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(absence.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * (moment.range(absence.start, absence.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              height: (100 / self._absences.length) + '%',\n              position: 'absolute',\n              top: (100 / self._absences.length) * index + '%'\n              }\n              absence.range = moment.range(absence.start, absence.end)\n              absence.class = 'planning-absence-' + absence.confirmation.state\n              absence.tooltip = setAbsenceTooltip(absence)\n              absence.index = index\n          })\n        } else {\n          self._absences = []\n        }\n      })\n    }\n\n    self.log = function (a) {\n    }\n\n    self.replace = function (string) {\n      if (!string) return\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '')\n    }\n\n    self.preEvent = {}\n    self.postEvent = {}\n\n    function setAbsenceTooltip(abs) {\n        let state = ''\n        const absenceType = abs.absenceType\n        const userName = self.mode === 'week' ? abs.user.fullname + ' - ' : ''\n        switch (abs.confirmation.state) {\n            case 'sending':\n                state = userName + 'Absence envoyée'\n                break\n            case 'pending':\n                state = userName + 'Absence en cours de traitement'\n                break\n            case 'partial-accepted':\n                state = userName + 'Absence en cours de traitement'\n                break;\n            case 'accepted':\n                state = userName + 'Absence acceptée'\n                break\n        }\n        if(absenceType) {\n            return state + '\\nRaison: '+ absenceType\n        } else {\n            return state\n        }\n    }\n    function extractMinutesFromEvent($event){\n      var minutes\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30\n      } else {\n        minutes = Math.floor($event.offsetX / (BASE_SIZE * self.zoom) * 60)\n      }\n      return minutes\n    }\n\n    function hoverAbsence(absence) {\n      self.tooltip = setAbsenceTooltip(absence)\n      for (const iterator of document.getElementsByClassName(absence._id)) {\n        iterator.classList.add('absence-hover')\n      }\n    }\n\n    function leaveAbsence() {\n      for (const iterator of document.getElementsByClassName('absence')) {\n        iterator.classList.remove('absence-hover')\n      }\n    }\n\n    function dropEvent (data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'))\n      var minutes = extractMinutesFromEvent(event)\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      var day = line.dayOfWeek ? line.dayOfWeek : line.position\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      }\n    }\n\n    function clickEvent (hour, $event, line) {\n      let day = !!line.dayOfWeek ? line.dayOfWeek : line.position\n      var minutes = extractMinutesFromEvent($event)\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else {\n        self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      }\n    }\n\n    function init () {\n      var currentId = 0\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {}\n      self.postEvent = {}\n      self.breaks = []\n\n      self._events = angular.copy(self.events)\n\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf()\n      })\n\n      var lines = [[]]\n      var toremove = []\n      _.each(self._events, function (event) {\n        var style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes')\n          event.range = moment.range(event.start, end)\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * (event.range) / self.SECONDS_BY_DAY / 1000 + 'px'\n        style['background-color'] = event['background-color'] || '#778899'\n        if (ColorService.getLuminance(style['background-color'])> 200){\n          style.color = 'black'\n        } else {\n          style.color = 'white'\n        }\n        event.style = style\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove)\n      })\n      self._events = _.difference(self._events, toremove)\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId)\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n          event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n          event.style['background-color'] = '#000'\n          event.style['font-weight'] = 'bold'\n          event.style.color = '#fff'\n          event.title = (event.eventList.length) + ' ' + parallelText\n          if (event.tooltip) event.tooltip = event.title\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n        if (event.line === undefined) event.line = MAX_PARALLEL\n        event.style.top = Math.round((parseInt(event.line)) * 70 / lines.length) + '%'\n        event.style.height = Math.round(70 / lines.length) + '%'\n        event.percentage = '100%'\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none'\n          var s = moment(event.start).subtract(event.pre, 'minutes')\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day')\n          }\n          var e = moment(event.start)\n          var r = moment.range(s, e)\n          var totalRange = moment.range(s, event.range.end)\n          var percentage = r.valueOf() / totalRange.valueOf() * 100\n          event.percentage = (100 - percentage) + '%'\n          var obj = {\n            percentage: (percentage) + '%',\n            style: {\n              left: (((moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(s).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n              width: self.zoom * self.SLIDER_WIDTH * (r.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background' : 'repeating-linear-gradient(45deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          }\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj\n          } else {\n            event.pre = 0\n          }\n\n        }\n        generatePostEvent(event)\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to right')\n          event.style['background-color'] = undefined\n        }\n        const pre = self.preEvent[event.id]\n        const post = self.postEvent[event.id]\n        event.style.totalWidth = (safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1) + 'px'\n        currentId++\n      })\n      if (self.pauses) {\n        createBreaks()\n      }\n\n    }\n\n    function calcWidth (zoom) {\n      return (parseInt(zoom) * BASE_SIZE) + 'px'\n    }\n\n    function createBreaks () {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        }\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart))\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd))\n        }\n        pause.style.left = (pause.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + pause.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        pause.style.width = self.zoom * self.SLIDER_WIDTH * (moment.range(pause.start, pause.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n\n        return pause\n      }))\n    }\n\n    function checkAbsence (date) {\n      if(self.mode === 'week') {\n        return false\n      }\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n    }\n\n    function checkFerie (date) {\n      return self.holidays.find(holiday => moment(holiday.date).format('L') === moment(date).format('L'));\n    }\n\n    function generatePostEvent (event) {\n      if (!event.post) {\n        return null\n      }\n      event.style['border-right'] = 'none'\n      let end = moment(event.end).add(event.post, 'minutes')\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day')\n      }\n      const start = moment(event.end)\n      const range = moment.range(start, end)\n      const totalRange = moment.range(event.range.start, event.range.end)\n      const percentage = range.valueOf() / totalRange.valueOf() * 100\n      event.postPercentage = (100 - percentage) + '%'\n      var obj = {\n        percentage: (percentage) + '%',\n        style: {\n          left: (((moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(start).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n          width: self.zoom * self.SLIDER_WIDTH * (range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background' : 'repeating-linear-gradient(135deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      }\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj\n      } else {\n        event.post = 0\n      }\n    }\n\n    function safeParse (width = '0px') {\n      return parseInt(width.replace('px', ''))\n    }\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-line/planning-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        clickCallback: '&',\n        dropCallback: '&',\n        pauses: '=?',\n        absences: '=?',\n        position: '=?',\n        mode: '=?',\n        entities:'=?',\n        dayOfWeek:'=',\n        holidays: '='\n      },\n      scope: true\n    }\n  }\n})(window.angular, window._, window.moment)\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningTopRow', topRowDirective)\n\n  topRowDirective.$inject = ['planningConfiguration']\n\n  function topRowDirective (planningConfiguration) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-top-row/planning-top-row.html',\n      controller: ['$scope', PlanningTopRowController],\n      controllerAs: 'planningTopRow',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        entities: '=',\n        position: '=',\n        mode: '=',\n        callback: '&',\n        holidays: '='\n      },\n      scope: {}\n    }\n\n    function PlanningTopRowController ($scope) {\n      var self = this\n\n      self.$onInit = function () {\n        $scope.$watchGroup([function () { return self.dayStart }, function () { return self.dayEnd }], init)\n\n        _.extend(self, {\n          calcWidth: calcWidth,\n          calcMargin: calcMargin\n        })\n\n        init()\n      }\n\n      function init () {\n        var range = self.dayEnd.h - self.dayStart.h + 1\n        self.hours = []\n        _.times(range, function (i) {\n          var d = moment(self.position)\n          d.hour(i + parseInt(self.dayStart.h))\n          d.minute(0)\n          self.hours.push(d)\n        })\n      }\n\n\n\n      function calcWidth (zoom) {\n        return (parseInt(zoom) * BASE_SIZE) + 'px'\n      }\n\n      function calcMargin (zoom, index) {\n        var half = (parseInt(zoom) * (BASE_SIZE / 2))\n        if (!index) half = half - (3 * parseInt(zoom))\n        return '0 ' + half + 'px 0 -' + half + 'px'\n      }\n\n    }\n  }\n})(window.angular, window.moment, window._)\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningVerticalLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$filter', '$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService']\n\n  /**\n   *\n   */\n  function\n  PlanningLineController ($filter, $scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n\n    /** BASE_SIZE is the span of an hour. It gets multiplied by zoom (default 10) to get the size in pixel\n     * in vertical mode, we need to reduce it since we have much less space\n     */\n    var BASE_SIZE = Math.max(planningConfiguration.BASE_SIZE - 8, 1)\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n    var AVAILABLE_SPACE = 90 // Total horizontal space taken by the events\n\n    var self = this\n\n    self.$onInit = function () {\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd]\n      }, init)\n\n      $scope.$watchCollection(function () {\n        return self.absences\n      }, function (oldValue, newValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.day)).startOf('day')\n          var end = moment(angular.copy(self.day)).endOf('day')\n          self._absences = AbsenceService.parseAbsences(angular.copy(self.absences), [start, end]).map(function (abs) {\n            let tempTop = (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60\n            let tempHeight = self.zoom * self.SLIDER_WIDTH * (moment.range(abs.start, abs.end).valueOf()) / self.SECONDS_BY_DAY / 1000\n            if (abs.style.top === 0 + 'px') {\n              abs.style.height = (tempTop + tempHeight) + 'px'\n            } else {\n              abs.style.height = tempHeight + 'px'\n              abs.style.top = tempTop + 'px'\n            }\n\n            abs.range = moment.range(abs.start, abs.end)\n            abs.class = 'planning-absence-' + abs.confirmation.state\n            abs.tooltip = setAbsenceTooltip(abs)\n            return abs\n          })\n        } else {\n          self._absences = []\n        }\n      })\n\n\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveLine: leaveLine\n      })\n\n      init()\n    }\n\n    self.log = function (a) {\n    }\n\n    self.replace = function (string) {\n      if (!string) return\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '')\n    }\n\n    self.preEvent = {}\n    self.postEvent = {}\n\n    function setAbsenceTooltip(abs) {\n      let state = ''\n      const absenceType = abs.absenceType\n      switch (abs.confirmation.state) {\n          case 'sending':\n              state = 'Absence envoyée'\n              break\n          case 'pending':\n              state = 'Absence en cours de traitement'\n              break\n          case 'partial-accepted':\n              state = 'Absence en cours de traitement'\n              break;\n          case 'accepted':\n              state = 'Absence acceptée'\n              break\n      }\n      if(absenceType) {\n          return state + '\\nRaison:'+ absenceType\n      } else {\n          return state\n      }\n    }\n\n    function extractMinutesFromEvent($event){\n      var minutes\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30\n      } else {\n        minutes = Math.floor($event.offsetY / (BASE_SIZE * self.zoom) * 6)*10\n      }\n      return minutes\n    }\n\n    function dropEvent (data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'))\n      var minutes = extractMinutesFromEvent(event)\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      var day = line\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n        })\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n      }\n\n    }\n\n    function hoverAbsence() {\n      for (const iterator of document.getElementsByClassName('absence')) {\n        iterator.classList.add('absence-week-advanced-hover')\n      }\n    }\n\n    function leaveLine() {\n      for (const iterator of document.getElementsByClassName('absence')) {\n        iterator.classList.remove('absence-week-advanced-hover')\n      }\n    }\n\n    function clickEvent (hour, $event, line) {\n      var minutes = extractMinutesFromEvent($event)\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (checkAbsence(date) && checkFerie(line)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(line)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(line)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else {\n        self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      }\n\n    }\n\n    function init () {\n      var currentId = 0\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {}\n      self.breaks = []\n\n      self._events = angular.copy(self.events)\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf()\n      })\n\n      var lines = [[]]\n      var toremove = []\n      _.each(self._events, function (event) {\n        var style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes')\n          event.range = moment.range(event.start, end)\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * (event.range) / self.SECONDS_BY_DAY / 1000 + 'px'\n        style['background-color'] = event['background-color'] || '#778899'\n        if (ColorService.getLuminance(style['background-color'])> 200){\n          style.color = 'black'\n        } else {\n          style.color = 'white'\n        }\n        event.style = style\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove)\n      })\n      self._events = _.difference(self._events, toremove)\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId)\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n          event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n          event.style['background-color'] = '#000'\n          event.style['font-weight'] = 'bold'\n          event.title = (event.eventList.length) + ' ' + parallelText\n          event.style.color = '#fff'\n          if (event.tooltip) event.tooltip = event.title\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n        if (event.line === undefined) event.line = MAX_PARALLEL\n        event.style.top = Math.round((parseInt(event.line)) * AVAILABLE_SPACE / lines.length) + '%'\n        event.style.height = Math.round(AVAILABLE_SPACE / lines.length) + '%'\n        event.percentage = '100%'\n        if (event.continuedBefore) event.pre = 0\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none'\n          var s = moment(event.start).subtract(event.pre, 'minutes')\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day')\n          }\n          var e = moment(event.start)\n          var r = moment.range(s, e)\n          var totalRange = moment.range(s, event.range.end)\n          var percentage = r.valueOf() / totalRange.valueOf() * 100\n          event.percentage = (100 - percentage) + '%'\n          var obj = {\n            percentage: (percentage) + '%',\n            style: {\n              left: (((moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(s).minutes()) * BASE_SIZE * self.zoom / 60)) +  'px',\n              width: self.zoom * self.SLIDER_WIDTH * (r.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background' : 'repeating-linear-gradient(45deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          }\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj\n          } else {\n            event.pre = 0\n          }\n        }\n        generatePostEvent(event)\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to bottom')\n          event.style['background-color'] = undefined\n        }\n        const pre = self.preEvent[event.id]\n        const post = self.postEvent[event.id]\n        event.style.totalWidth = (safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1) + 'px'\n        currentId++\n      })\n      if (self.pauses) {\n        createBreaks()\n      }\n      calculateContainerHeight()\n    }\n\n    function safeParse (width = '0px') {\n      return parseInt(width.replace('px', ''))\n    }\n\n    function generatePostEvent (event) {\n      if (!event.post) {\n        return null\n      }\n      let end = moment(event.end).add(event.post, 'minutes')\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day')\n      }\n      const start = moment(event.end)\n      const range = moment.range(start, end)\n      const totalRange = moment.range(event.range.start, event.range.end)\n      const percentage = range.valueOf() / totalRange.valueOf() * 100\n      event.postPercentage = (100 - percentage) + '%'\n      var obj = {\n        percentage: (percentage) + '%',\n        style: {\n          left: (((moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(start).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n          width: self.zoom * self.SLIDER_WIDTH * (range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background' : 'repeating-linear-gradient(135deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      }\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj\n      } else {\n        event.post = 0\n      }\n    }\n\n    function calcWidth (zoom) {\n      return (parseInt(zoom) * BASE_SIZE) + 'px'\n    }\n\n    function createBreaks () {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        }\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart))\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd))\n        }\n\n        pause.style.top = (((moment(pause.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(pause.start).minutes()) * BASE_SIZE * self.zoom / 60)) +  'px'\n        pause.style.height = self.zoom * self.SLIDER_WIDTH * (moment.range(pause.start, pause.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n\n        return pause\n      }))\n    }\n\n    function calculateContainerHeight () {\n      self.containerHeight = (parseInt(self.zoom) * BASE_SIZE) * $filter('range')(self.range) + 'px'\n    }\n\n    function checkAbsence (date) {\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n    }\n\n    function checkFerie (date) {\n      return self.holidays.find(holiday => moment(holiday.date).format('L') === moment(date).format('L'));\n    }\n\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-vertical-line/planning-vertical-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        pauses: '=?',\n        day: '=',\n        absences: '=?',\n        holidays: '=?',\n        clickCallback: '&',\n        dropCallback: '&'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningVerticalLine', PlanningLineDirective);\n\n  PlanningLineController.$inject = ['$filter', '$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService'];\n\n  /**\n   *\n   */\n  function PlanningLineController($filter, $scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService) {\n\n    /** BASE_SIZE is the span of an hour. It gets multiplied by zoom (default 10) to get the size in pixel\n     * in vertical mode, we need to reduce it since we have much less space\n     */\n    var BASE_SIZE = Math.max(planningConfiguration.BASE_SIZE - 8, 1);\n    var parallelText = planningConfiguration.parallelText;\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL;\n    var AVAILABLE_SPACE = 90; // Total horizontal space taken by the events\n\n    var self = this;\n\n    self.$onInit = function () {\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd];\n      }, init);\n\n      $scope.$watchCollection(function () {\n        return self.absences;\n      }, function (oldValue, newValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.day)).startOf('day');\n          var end = moment(angular.copy(self.day)).endOf('day');\n          self._absences = AbsenceService.parseAbsences(angular.copy(self.absences), [start, end]).map(function (abs) {\n            var tempTop = (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60;\n            var tempHeight = self.zoom * self.SLIDER_WIDTH * moment.range(abs.start, abs.end).valueOf() / self.SECONDS_BY_DAY / 1000;\n            if (abs.style.top === 0 + 'px') {\n              abs.style.height = tempTop + tempHeight + 'px';\n            } else {\n              abs.style.height = tempHeight + 'px';\n              abs.style.top = tempTop + 'px';\n            }\n\n            abs.range = moment.range(abs.start, abs.end);\n            abs['class'] = 'planning-absence-' + abs.confirmation.state;\n            abs.tooltip = setAbsenceTooltip(abs);\n            return abs;\n          });\n        } else {\n          self._absences = [];\n        }\n      });\n\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveLine: leaveLine\n      });\n\n      init();\n    };\n\n    self.log = function (a) {};\n\n    self.replace = function (string) {\n      if (!string) return;\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '');\n    };\n\n    self.preEvent = {};\n    self.postEvent = {};\n\n    function setAbsenceTooltip(abs) {\n      var state = '';\n      var absenceType = abs.absenceType;\n      switch (abs.confirmation.state) {\n        case 'sending':\n          state = 'Absence envoyée';\n          break;\n        case 'pending':\n          state = 'Absence en cours de traitement';\n          break;\n        case 'partial-accepted':\n          state = 'Absence en cours de traitement';\n          break;\n        case 'accepted':\n          state = 'Absence acceptée';\n          break;\n      }\n      if (absenceType) {\n        return state + '\\nRaison:' + absenceType;\n      } else {\n        return state;\n      }\n    }\n\n    function extractMinutesFromEvent($event) {\n      var minutes;\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30;\n      } else {\n        minutes = Math.floor($event.offsetY / (BASE_SIZE * self.zoom) * 6) * 10;\n      }\n      return minutes;\n    }\n\n    function dropEvent(data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'));\n      var minutes = extractMinutesFromEvent(event);\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      var day = line;\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n        });\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n      }\n    }\n\n    function hoverAbsence() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = document.getElementsByClassName('absence')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var iterator = _step.value;\n\n          iterator.classList.add('absence-week-advanced-hover');\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    function leaveLine() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = document.getElementsByClassName('absence')[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var iterator = _step2.value;\n\n          iterator.classList.remove('absence-week-advanced-hover');\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    function clickEvent(hour, $event, line) {\n      var minutes = extractMinutesFromEvent($event);\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (checkAbsence(date) && checkFerie(line)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(line)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(line)) {\n        planningConfiguration.isFerieCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else {\n        self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      }\n    }\n\n    function init() {\n      var currentId = 0;\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {};\n      self.breaks = [];\n\n      self._events = angular.copy(self.events);\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf();\n      });\n\n      var lines = [[]];\n      var toremove = [];\n      _.each(self._events, function (event) {\n        var style = {};\n        event.depth = 1;\n        event.range = moment.range(event.start, event.end);\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes');\n          event.range = moment.range(event.start, end);\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * event.range / self.SECONDS_BY_DAY / 1000 + 'px';\n        style['background-color'] = event['background-color'] || '#778899';\n        if (ColorService.getLuminance(style['background-color']) > 200) {\n          style.color = 'black';\n        } else {\n          style.color = 'white';\n        }\n        event.style = style;\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove);\n      });\n      self._events = _.difference(self._events, toremove);\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId);\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n          event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n          event.style['background-color'] = '#000';\n          event.style['font-weight'] = 'bold';\n          event.title = event.eventList.length + ' ' + parallelText;\n          event.style.color = '#fff';\n          if (event.tooltip) event.tooltip = event.title;\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n        if (event.line === undefined) event.line = MAX_PARALLEL;\n        event.style.top = Math.round(parseInt(event.line) * AVAILABLE_SPACE / lines.length) + '%';\n        event.style.height = Math.round(AVAILABLE_SPACE / lines.length) + '%';\n        event.percentage = '100%';\n        if (event.continuedBefore) event.pre = 0;\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none';\n          var s = moment(event.start).subtract(event.pre, 'minutes');\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day');\n          }\n          var e = moment(event.start);\n          var r = moment.range(s, e);\n          var totalRange = moment.range(s, event.range.end);\n          var percentage = r.valueOf() / totalRange.valueOf() * 100;\n          event.percentage = 100 - percentage + '%';\n          var obj = {\n            percentage: percentage + '%',\n            style: {\n              left: (moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(s).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * r.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background': 'repeating-linear-gradient(45deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          };\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj;\n          } else {\n            event.pre = 0;\n          }\n        }\n        generatePostEvent(event);\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to bottom');\n          event.style['background-color'] = undefined;\n        }\n        var pre = self.preEvent[event.id];\n        var post = self.postEvent[event.id];\n        event.style.totalWidth = safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1 + 'px';\n        currentId++;\n      });\n      if (self.pauses) {\n        createBreaks();\n      }\n      calculateContainerHeight();\n    }\n\n    function safeParse() {\n      var width = arguments.length <= 0 || arguments[0] === undefined ? '0px' : arguments[0];\n\n      return parseInt(width.replace('px', ''));\n    }\n\n    function generatePostEvent(event) {\n      if (!event.post) {\n        return null;\n      }\n      var end = moment(event.end).add(event.post, 'minutes');\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day');\n      }\n      var start = moment(event.end);\n      var range = moment.range(start, end);\n      var totalRange = moment.range(event.range.start, event.range.end);\n      var percentage = range.valueOf() / totalRange.valueOf() * 100;\n      event.postPercentage = 100 - percentage + '%';\n      var obj = {\n        percentage: percentage + '%',\n        style: {\n          left: (moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(start).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n          width: self.zoom * self.SLIDER_WIDTH * range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background': 'repeating-linear-gradient(135deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      };\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj;\n      } else {\n        event.post = 0;\n      }\n    }\n\n    function calcWidth(zoom) {\n      return parseInt(zoom) * BASE_SIZE + 'px';\n    }\n\n    function createBreaks() {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        };\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return;\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart));\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd));\n        }\n\n        pause.style.top = (moment(pause.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(pause.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        pause.style.height = self.zoom * self.SLIDER_WIDTH * moment.range(pause.start, pause.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n\n        return pause;\n      }));\n    }\n\n    function calculateContainerHeight() {\n      self.containerHeight = parseInt(self.zoom) * BASE_SIZE * $filter('range')(self.range) + 'px';\n    }\n\n    function checkAbsence(date) {\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n\n    function checkFerie(date) {\n      return self.holidays.find(function (holiday) {\n        return moment(holiday.date).format('L') === moment(date).format('L');\n      });\n    }\n  }\n\n  function PlanningLineDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-vertical-line/planning-vertical-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        pauses: '=?',\n        day: '=',\n        absences: '=?',\n        holidays: '=?',\n        clickCallback: '&',\n        dropCallback: '&'\n      },\n      scope: true\n    };\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningWeekLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$scope', 'PositionService', 'planningConfiguration', 'ColorService']\n\n  /**\n   *\n   */\n  function PlanningLineController ($scope, PositionService, planningConfiguration, ColorService) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        calculateWidth: calculateWidth,\n        calculateLeft: calculateLeft\n      })\n\n      init()\n\n      $scope.$watchCollection(function () {\n        return [self.events, self.week]\n      }, init)\n\n    }\n\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n\n    function init () {\n      self.displayedEvents = _(self.events).sortBy(function (event) {\n        return event.continuedBefore ? -1 : (event.continuedAfter ? 0 : 1) // Order event list\n      }).value()\n\n      self.displayedEvents = positioning(self.displayedEvents)\n      self.oneDayEvents = positioning(self.oneDayEvents)\n    }\n\n\n\n    function positioning (eventList) {\n      var lines = [[]]\n      var toRemove = []\n      _.each(eventList, function (event) {\n        event.style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        PositionService.overlap(lines, event, MAX_PARALLEL, toRemove, true)\n      })\n      eventList = _.difference(eventList, toRemove)\n      _.each(eventList, function (event) {\n        setStyle(event, lines.length)\n      })\n      return eventList\n    }\n\n    function setStyle (event, height) {\n      event.style.left = calculateLeft(event)\n      event.style.width = calculateWidth(event)\n      event.style['background-color'] = event['background-color']\n      if (ColorService.getLuminance(event.style['background-color'])> 200){\n        event.style.color = 'black'\n      } else{\n        event.style.color = 'white'\n      }\n\n      event.style.top = Math.ceil((event.line) * 100 / height) + '%'\n      event.style.height = Math.round(100 / height) + '%'\n      if (event.line === undefined) event.line = MAX_PARALLEL\n      if (event.eventList && event.eventList.length > 1) {\n        event.style['background-color'] = '#000'\n        event.style['color'] = '#FFF'\n        event.style['font-weight'] = 'bold'\n        event.title = (event.eventList.length) + ' ' + parallelText\n        if (event.tooltip) event.tooltip = event.title\n      }\n    }\n\n\n    function calculateWidth (event) {\n      if (event.start.day() === event.end.day()) {\n        return (event.end.diff(event.start, 'days') + 1) * (100 / 7) + '%'\n      } else {\n        var diff = Math.ceil(event.end.diff(event.start, 'hours') / 24)\n        if (event.end.hours() < event.start.hours()) {\n          diff += 1\n        }\n        return (diff * (100 / 7)) + '%'\n      }\n    }\n\n    function calculateLeft (event) {\n      return ((event.start.isoWeekday() - 1)) * (99.9 / 7) + '%'\n    }\n\n\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-week-line/planning-week-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        events: '=',\n        week: '=',\n        oneDayEvents: '=',\n        weekEventCallback: '&'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window.moment, window._)\n","angular.module('90Tech.planning').run(['$templateCache', function($templateCache) {$templateCache.put('/templates/planning-context-menu.html','<ul class=\"dropdown-menu context-menu\" ng-click=$event.stopPropagation(); style=\"z-index: 10\"><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.action({$element: event || ev})\"><i class=\"mdi mdi-chevron-down\"></i> Ouvrir dans un nouvel onglet {{event.eventList.length}}</a></li><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.duplicateAction({$element: event || ev})\"><i class=\"mdi mdi-chevron-down\"></i> Dupliquer l\\'intervention {{event.eventList.length}}</a></li></ul>');\n$templateCache.put('/templates/planning-line-context-menu.html','<ul class=\"dropdown-menu context-menu\" ng-click=$event.stopPropagation(); style=\"z-index: 10\"><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.dayEvent(line._events, false)\"><i class=\"mdi mdi-chevron-down\"></i> Dupliquer la journ\\xE9e {{event.eventList.length}}</a></li><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.dayEvent(line._events, true)\"><i class=\"mdi mdi-chevron-down\"></i> D\\xE9placer la journ\\xE9e {{event.eventList.length}}</a></li></ul>');\n$templateCache.put('/directives/planning/planning.html','<div ng-if=\"planning.mode ===\\'day\\' || planning.mode === \\'week\\'\" style=\"height: 100%;\"><zl-planning-left-column mode=planning.mode position=planning.position day-field=planning.dayField entities-name=planning.entitiesName , usable-days=planning.allowedDays day-event=planning.dayEvent move-action=planning.moveAction show-absences-callback=\"planning.showAbsencesCallBackWrapper({absences: absences, day: day})\" events=planning.sortedEvents absences=planning.absences is-ferie=planning.isFerie(planning.position)></zl-planning-left-column><div class style=height:100%><div zl-horizontal-scroll scroll-left=planning.currentTimeToPixels() style=height:100%><div ng-style=\"{width: planning.width}\" class=planning-body><zl-planning-top-row mode=planning.mode zoom=planning.zoom position=planning.position holidays=planning.holidays day-start=planning._dayStart day-end=planning._dayEnd></zl-planning-top-row><div class=hour-cursor ng-style=\"{left: planning.currentTimeToPixels()+\\'px\\'}\" ng-if=\"planning.isCurrent() && planning.isInDayRange()\"><div class=hour-caret></div></div><div ng-if=planning.isFerie(planning.position)></div><div class=planning-2pc ng-class=\"{isFerie: (planning.mode === \\'day\\' && planning.isFerie(planning.position))}\"></div><zl-planning-line ng-if=\"planning.mode === \\'day\\'\" zoom=planning.zoom absences=planning.absences[i] position=planning.position day-start=planning._dayStart day-end=planning._dayEnd ng-repeat=\"i in planning.keys(planning.sortedEvents)\" class=\"day b-b\" ng-class=\"{today: planning.isToday(i)}\" events=planning.getEvents(i) pauses=planning.entitiesPauses[i][0] holidays=planning.holidays drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: i, entity: i, $data: $data, $event: $event})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: i, entity: i})\"></zl-planning-line><zl-planning-line ng-if=\"planning.mode === \\'week\\'\" zoom=planning.zoom ng-repeat=\"day in planning.usableDays\" position=planning.position entities=planning.entities day-of-week=planning.daysList[day] mode=planning.mode holidays=planning.holidays day-start=planning._dayStart day-end=planning._dayEnd class=\"day b-b\" ng-class=\"{today: planning.isToday(planning.keys(planning.sortedEvents)[day])}\" events=planning.getEvents(planning.keys(planning.sortedEvents)[day]) drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: planning.keys(planning.sortedEvents)[day], entity: planning.keys(planning.sortedEvents)[day], $data: $data, $event: $event})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: planning.keys(planning.sortedEvents)[day], entity: planning.keys(planning.sortedEvents)[day]})\"></zl-planning-line></div></div></div></div><div ng-if=\"planning.mode === \\'3day\\'\" style=\"height: 100%;\"><zl-planning-left-column mode=\"\\'day\\'\" three-days=true position=planning.position entities-name=planning.entitiesName day-field=planning.dayField usable-days=planning.allowedDays events=planning.sortedEvents></zl-planning-left-column><div style=\"height: 100%; display: flex; flex-flow: row nowrap;\" zl-horizontal-scroll><div style=height:100%; ng-repeat=\"day in planning.groupedEvents track by $index\"><div style=\"height:100%; display: inline-block;\"><div ng-style=\"{width: planning.width}\" class=planning-body><zl-planning-top-row mode=\"\\'day\\'\" zoom=planning.zoom position=planning.position day-start=planning._dayStart day-end=planning._dayEnd></zl-planning-top-row><p style=\"position: absolute; top: 27px; font-size: 1.4em; font-weight: bold; width: 100%; padding-left: 5px;\" ng-class=\"{isFerie: planning.isFerie(day.date)}\">{{day.day}}<span class=holidays ng-if=planning.isFerie(day.date)>f\\xE9ri\\xE9</span></p><div class=hour-cursor ng-style=\"{left: planning.currentTimeToPixels()+\\'px\\'}\" ng-if=\"planning.isCurrent() && planning.isInDayRange()\"><div class=hour-caret></div></div><div class=planning-2pc></div><zl-planning-line zoom=planning.zoom position=day.date absences=day.absences[i] day-start=planning._dayStart day-end=planning._dayEnd ng-repeat=\"i in planning.keys(day.value) track by $index\" class=\"day b-b\" events=day.value[i] pauses=planning.entitiesPauses[i][$parent.$index] holidays=planning.holidays drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: i, entity: i, $data: $data, $event: $event, day: day.key})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: i, entity: i})\"></zl-planning-line></div></div></div></div></div><div ng-if=\"planning.mode ===\\'week-advanced\\'\" class=advanced-week><div class=days-list><div class=day-advanced>&nbsp;</div><div class=day-advanced ng-repeat=\"day in planning.daysList\" ng-click=planning.dayCallback({$day:day}) ng-class=\"{isFerie: planning.isFerie(day)}\"><span class=day-text>{{day | format:\\'dddd\\' | capitalize}}<br><small>{{day | format:\\'ll\\'}}</small> <span class=holidays ng-if=planning.isFerie(day)>f\\xE9ri\\xE9</span></span></div></div><div class=advanced-week-container ng-repeat=\"name in planning.keys(planning.sortedEvents)\"><div class=left-column-advanced><span style=margin:auto>{{planning.getName(name)}}</span></div><div ng-repeat=\"day in planning.allowedDays\" style=\"overflow: hidden;\" class=day-advanced><zl-planning-vertical-line day=planning.daysList[$index] zoom=planning.zoom drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d:day, entity: name, $data: $data, $event: $event})\" day-start=planning._dayStart day-end=planning._dayEnd events=planning.getEvents(name)[day] pauses=planning.entitiesPauses[name][$index] absences=planning.absences[name] holidays=planning.holidays click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: day, entity: name})\"></zl-planning-vertical-line></div></div></div><div ng-if=\"planning.mode === \\'month\\'\" style=\"height: 100%; z-index: 1000;\"><div class=month-header><span class=month-text>{{planning.month | capitalize}}</span></div><div class=day-header><div class=day ng-repeat=\"day in []|range:7\"><span class=day-text>{{day | day}}</span></div></div><div class=month-container><zl-planning-day ng-repeat=\"day in planning.days\" day=day events=planning._events absences=planning.absences drop-callback=\"planning.dropEvent({$data: $data, $event: $event, moment: day.date})\" entities=planning.entitiesName ng-dblclick=\"planning.clickWeekEvent(day, $event)\" holidays=planning.holidays></zl-planning-day><zl-planning-week-line ng-repeat=\"(week, events) in planning.multipleDaysEvents\" events=events week=week one-day-events=planning.oneDayEvents[week] style=\"height: 20%; pointer-events: none\"></zl-planning-week-line></div></div>');\n$templateCache.put('/directives/planning-left-column/planning-left-column.html','<div class=left-column ng-switch=planningLeftColumn.mode><div class=planning-head></div><div class=left-body><div class=planning-2pc><span class=holidays ng-if=\"planningLeftColumn.isFerie && (planningLeftColumn.mode === \\'day\\' || planningLeftColumn.mode === \\'3days\\')\">F\\xE9ri\\xE9</span></div><div class=days-body ng-switch-when=week><div class=\"dayName row8 b-b animate\" ng-repeat=\"day in planningLeftColumn.days track by $index\" ng-class=\"{today: (planning.isToday(day.dayOfYear())), isFerie: planning.isFerie(day)}\" ng-click=planning.dayCallback({$day:day})><h4>{{day | format:\\'dddd\\' | capitalize}}<br><small>{{day | format:\\'ll\\'}}<span class=holidays ng-if=planning.isFerie(day)>f\\xE9ri\\xE9</span></small></h4><div ng-click=$event.stopPropagation() class=day-absence ng-if=planningLeftColumn._absences[$index].length><div class=absents-container ng-click=\"planning.showAbsencesCallBackWrapper(planningLeftColumn._absences, $index)\">{{ planningLeftColumn._absences[$index].length }} absent(s)</div></div></div></div><div class=days-body ng-switch-when=day><div class=\"dayName row8 b-b animate\" ng-repeat=\"tech in planningLeftColumn.column\"><div class=buttons><button class=\"btn btn-primary duplication-buttons\" tooltip-append-to-body=true ng-click=planningLeftColumn.triggerDayEvent(tech) uib-tooltip=\"Dupliquer la journ\\xE9e\" tooltip-placement=right ng-if=planningLeftColumn.activateDuplicationButtons><i class=\"mdi mdi-content-duplicate\"></i></button> <button class=\"btn btn-primary duplication-buttons m-l-xs\" tooltip-append-to-body=true ng-click=\"planningLeftColumn.triggerDayEvent(tech, true)\" uib-tooltip=\"D\\xE9placer la journ\\xE9e\" tooltip-placement=right ng-if=planningLeftColumn.activateDuplicationButtons><i class=\"mdi mdi-cursor-move\"></i></button></div><h4>{{tech.fullname || \\'\\'}}</h4></div></div></div><div style=height:10px></div></div>');\n$templateCache.put('/directives/planning-day-block/planning-day.html','<div class=day-block ng-class=\"{\\'empty-day\\': dayCtrl.isDefined }\" ng-click=planning.dayCallback({$day:dayCtrl.day.date})><div style=position:absolute;left:5px;top:5px; ng-if=\"dayCtrl.day.date.day() === 1\">{{dayCtrl.day.date.week()}}</div><div class=day-number>{{ dayCtrl.day.date.date() }}</div><span ng-if=dayCtrl.isFerie class=holidays>f\\xE9ri\\xE9</span><div class=events-container><div ng-style=\"{\\'background-color\\': event.color}\" class=month-event ng-repeat=\"event in dayCtrl.day.events |limitTo:5\">{{event.title}}</div></div><div class=absents-container tooltip-append-to-body=true ng-if=dayCtrl.absents.length uib-tooltip-html=dayCtrl.absentsString>{{dayCtrl.absents.length}} absent(s)</div></div>');\n$templateCache.put('/directives/planning-line/planning-line.html','<div ng-style=\"{height: line.containerHeight}\"><div style=\"position: absolute; height: 100%; width: 100%; z-index: 1\" zl-planning-drag-drop zl-drop=\"line.dropEvent($data, $event, line)\"><div class=\"b-b b-r all-day day-hour\" ng-dblclick=\"line.clickEvent(n, $event, line)\" ng-mouseleave=line.leaveAbsence() uib-tooltip={{line.tooltip}} tooltip-append-to-body=true tooltip-placement=top ng-style=\"{width: line.calcWidth(line.zoom)}\" ng-repeat=\"n in [] | range:line.range\" hour={{n}}><span class=half-hour></span></div></div><div ng-repeat=\"absence in line._absences track by $index\" ng-mouseenter=line.hoverAbsence(absence) id={{absence._id}} class=\"{{absence.class}} absence {{absence._id}}\" tooltip-append-to-body=true tooltip-placement=top uib-tooltip={{absence.tooltip}} data-html=true style=\"height: 100%\" ng-style=absence.style></div><div ng-repeat=\"event in line._events\" zl-planning-drag-drop ng-click=\"planning.eventCallback({\\'event\\':event})\" zl-drag=event ng-style=\"{ height: event.style.height, top: event.style.top, width: event.style.totalWidth, left: event.pre > 0 ? line.preEvent[event.id].style.left : event.style.left }\" style=\"position: absolute; z-index: 3; display: flex; flex-flow: row nowrap\"><div ng-if=\"event.pre > 0\" ng-style=\"{width: line.preEvent[event.id].style.width, \\'background\\': line.preEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; height: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.preEvent[event.id].tooltip}}><div class=title-container><span><i style=\"height: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div><div class=event style=\"display: inline-block; position: relative; height: 100%;\" data-context-menu=/templates/planning-context-menu.html tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip ng-style=\"{ width: event.style.width, background: event.style[\\'background-color\\'], \\'background-image\\': event.style[\\'background-image\\'], color: event.style.color, \\'border-left\\': event.pre > 0 ? \\'none\\': \\'\\' }\"><div class=event-line-container style><div class=event-line ng-style=\"{\\'background-color\\': event.color}\" ng-if=!event.continuedBefore></div></div><div class=title-container><span>{{event.title}}</span></div></div><div ng-if=\"event.post > 0\" ng-style=\"{width: line.postEvent[event.id].style.width, \\'background\\': line.postEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; height: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.postEvent[event.id].tooltip}}><div class=title-container><span><i style=\"height: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div></div><div ng-repeat=\"pause in line.breaks track by $index\" class=planning-pause-element style=\"height: 100%;\" ng-style=pause.style></div></div>');\n$templateCache.put('/directives/planning-top-row/planning-top-row.html','<div class=planning-top-row><div ng-repeat=\"hour in planningTopRow.hours\" class=day-hour ng-style=\"{width: planningTopRow.calcWidth(planningTopRow.zoom), margin: planningTopRow.calcMargin(planningTopRow.zoom, $index)}\"><h4>{{hour | format:\\'HH:mm\\'}}</h4></div></div>');\n$templateCache.put('/directives/planning-vertical-line/planning-vertical-line.html','<div ng-style=\"{height: line.containerHeight}\" data-context-menu=/templates/planning-line-context-menu.html><div style=\"position: absolute; height: 100%; width: 100%; z-index: 1\" ng-mouseleave=line.leaveLine()><div ng-repeat=\"n in [] | range: line.range\" style=\"display: flex; z-index: 1\"><div style=\"display: flex; align-items: flex-end;\"><span class=hour-text>{{n + 1 + line.dayStart.h}}</span></div><div style=\"width: 100%;\" class=\"b-b b-r all-day\" ng-style=\"{height: line.calcWidth(line.zoom)}\" ng-dblclick=\"line.clickEvent(n, $event, line.day)\" hour=\"{{n + line.dayStart.h}}\" zl-planning-drag-drop zl-drop=\"line.dropEvent($data, $event, line.day)\"></div></div></div><div ng-repeat=\"event in line._events\" zl-planning-drag-drop ng-click=\"planning.eventCallback({\\'event\\':event})\" zl-drag=event ng-style=\"{ width: event.style.height, right: event.style.top, height: event.pre > 0 ? line.preEvent[event.id].style.totalWidth : event.style.width, top: event.pre > 0 ? line.preEvent[event.id].style.left : event.style.left }\" style=\"position: absolute; z-index: 2;\"><div ng-if=\"event.pre > 0\" ng-style=\"{height: line.preEvent[event.id].style.width, \\'background\\': line.preEvent[event.id].style[\\'background\\']}\" style=\"display: flex; position: relative; width: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.preEvent[event.id].tooltip}}><div class=title-container><span><i style=\"width: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div><div class=event style=\"display: flex; position: relative; width: 100%;\" tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip data-context-menu=/templates/planning-context-menu.html ng-style=\"{ height: event.style.width, overflow: \\'hidden\\', \\'background-image\\': event.style[\\'background-image\\'], background: event.style[\\'background-color\\'], color: event.style.color, \\'border-left\\': event.pre > 0 ? \\'none\\': \\'\\' }\"><div class=event-line-container style><div class=event-line ng-style=\"{\\'background-color\\': event.color}\"></div></div><div class=title-container><span>{{event.title}}</span></div></div><div ng-if=\"event.post > 0\" ng-style=\"{height: line.postEvent[event.id].style.width, \\'background\\': line.postEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; width: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.postEvent[event.id].tooltip}}><div class=title-container><span><i style=\"width: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div></div><div ng-repeat=\"pause in line.breaks track by $index\" class=planning-pause-element style=\"width: 95%; left: 5%;\" ng-style=pause.style></div><div ng-repeat=\"absence in line._absences track by $index\" id={{absence._id}} class=\"{{absence.class}} absence {{absence._id}}\" ng-mouseover=line.hoverAbsence(absence) tooltip-append-to-body=true tooltip-placement=top tooltip-classes=absence-tooltip uib-tooltip={{absence.tooltip}} style=\"width: 95%; left: 5%;\" ng-style=absence.style></div></div>');\n$templateCache.put('/directives/planning-week-line/planning-week-line.html','<div class=week-line ng-class=\"\\'week-\\' + line.week\" style=padding-top:20px;><div class=single-day-events style=\"height:40%; position:relative;\"><div zl-planning-drag-drop zl-drag=ev ng-repeat=\"ev in line.oneDayEvents\" ng-style=\"{\\'top\\': ev.style.top, \\'height\\': ev.style.height, \\'background-color\\': ev.style[\\'background-color\\'], \\'color\\' : ev.style.color, \\'width\\': ev.style.width, \\'left\\': ev.style.left}\" style=\"position:absolute;border: 1px solid black;pointer-events: auto; overflow: hidden;\" ng-click=\"planning.weekEventCallback({event: ev})\" tooltip-append-to-body=true tooltip-placement=\"{{ev.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!ev.tooltipTemplate ? ev.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + ev.tooltipTemplate}}\" tooltip-class=planning-event-tooltip class=single-day-event><div class=event-line-container><div class=event-line ng-style=\"{\\'background-color\\': ev.color}\" ng-if=!ev.continuedBefore></div></div><div class=single-day-event-title data-context-menu=/templates/planning-context-menu.html><span>{{ev.title}}</span></div></div></div><div class=multiple-days-events style=\"height:40%; position: relative;\"><div class=multiple-day-event ng-repeat=\"event in line.displayedEvents\" style=\"position: absolute; border: 1px solid black;pointer-events: auto; overflow: hidden;\" zl-planning-drag-drop zl-drag=event ng-click=\"planning.weekEventCallback({event: event})\" tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip ng-style=\"{\\'top\\': event.style.top, \\'height\\': event.style.height, \\'background-color\\': event.style[\\'background-color\\'], \\'color\\' : event.style.color, \\'width\\': event.style.width, \\'left\\': event.style.left}\"><div class=event-line-container><div class=event-line ng-style=\"{\\'background-color\\': event.color}\" ng-if=!event.continuedBefore></div></div><div class=multiple-day-event-title data-context-menu=/templates/planning-context-menu.html><span>{{event.title}}</span></div></div></div></div>');}]);"]}