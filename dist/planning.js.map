{"version":3,"sources":["index.js","filters/filters/dayFilter.js","filters/filters/momentFilter.js","filters/filters/range.js","filters/filters/strFilter.js","services/services/absences.service.js","services/absences.service.js","services/services/color.service.js","services/services/configurationProvider.js","services/services/holidays.service.js","services/holidays.service.js","services/services/pause.service.js","services/services/position.service.js","directives/drag-drop/directives/drag-drop/drag-drop.directive.js","directives/horizontal-scroll/directives/horizontal-scroll/horizontal-scroll.js","directives/planning/directives/planning/planning.js","directives/planning/planning.js","directives/planning-day-block/directives/planning-day-block/planning-day.js","directives/planning-day-block/planning-day.js","directives/planning-left-column/planning-left-column.js","directives/planning-left-column/directives/planning-left-column/planning-left-column.js","directives/planning-line/planning-line.js","directives/planning-line/directives/planning-line/planning-line.js","directives/planning-top-row/directives/planning-top-row/planning-top-row.js","directives/planning-vertical-line/directives/planning-vertical-line/planning-vertical-line.js","directives/planning-vertical-line/planning-vertical-line.js","directives/planning-week-line/directives/planning-week-line/planning-week-line.js","template.js"],"names":["angular","module","window","filter","day","undefined","isNaN","parseInt","time","format","str","charAt","toUpperCase","slice","RangeFilter","operation","input","total","i","push","planningConfiguration","val","strings","_","moment","AbsenceService","parseAbsences","absences","interval","Array","isArray","Error","parsed","abs","range","start","end","overlaps","map","absence","style","isSame","copy","top","isBefore","isAfter","mergeRanges","_x","_again","ranges","r","index","Object","assign","any","range1","range2","reduced","reduce","acc","value","arr","next","min","max","self","this","extend","service","ColorService","getLuminance","c","g","b","rgbRegex","test","exec","color","substring","rgb","luma","$inject","provider","BASE_SIZE","MAX_PARALLEL","nothing_to_show","DAYS","parallelText","setParallelText","text","setBaseSize","size","setMaxParallel","number","setString","key","setDays","$get","absentTechnicianCallback","callback","isFerieCallback","warningCallback","HolidaysServicePlanning","isSolidarityDay","bool","get","aliaCompanySettings","parsedDay","solidarityDays","forEach","solidarityDay","master","masterDay","masterDayRange","elt","date","rule","length","unix","endOf","showSolidarityDay","PauseService","generateGradient","event","direction","parsePause","pauses","pause","pauseRange","pauseDuration","diff","percentage","totalDuration","before","totalRange","clone","subtract","endPercentage","startPercentage","v","pauseColor","invertColor","mapped","hex","indexOf","toString","padZero","len","zeros","join","PositionService","overlap","lines","maxParallelEvents","toRemove","doublecheck","pre","depth","each","eltRange","line","eventList","technician","eventClone","cloneDeep","directive","controller","scope","controllerAs","bindToController","zlDrag","zlDrop","link","element","dragStartEvent","e","dragImage","height","el","clientHeight","zIndex","position","left","bottom","innerHTML","children","float","backgroundColor","width","clientWidth","Math","dataTransfer","effectAllowed","document","body","appendChild","setDragImage","querySelectorAll","remove","setData","JSON","stringify","dragDropCtrl","classList","add","dropEvent","$apply","$data","parse","getData","$event","target","stopPropagation","dragEnterEvent","dragLeaveEvent","options","threshold","seen","createElement","entries","observer","isIntersecting","attributes","draggable","addEventListener","removeEventListener","IntersectionObserver","observe","ScrollHorizontalDirective","$timeout","restrict","scrollLeft","bind","wheelDelta","addClass","offsetWidth","PlanningController","$scope","init","zoom","allowedDays","usableDays","sort","daysList","d","weekday","_dayStart","parseTime","dayStart","_dayEnd","dayEnd","h","sortedEvents","mode","_events","flatten","events","split","groupBy","addMissingDays","dayField","mapValues","eventsByTechnician","addMissingEntities","entities","keys","groupedEvents","startOf","k","result","toDate","hour","minute","m","second","stop","days","j","isEmpty","includes","found","find","group","obj","sortBy","firstDay","hours","minutes","seconds","month","decallage","isoWeekday","oneDayEvents","dayOfYear","floor","multipleDaysEvents","splitByWeeks","endWeek","isoWeek","startWeek","isoWeeksInYear","weekInMonth","unshift","times","daysInMonth","n","displayedDaysCount","getName","id","entitiesName","_id","fullname","first_event","startNextDay","endThisDay","continuedAfter","second_event","continuedBefore","concat","st","year","firstEvent","secondEvent","some","isBetween","startingDay","newDate","a","dateA","dateFromString","dateB","getEvents","isToday","week","isFerie","holidays","holiday","hasAbsence","_absences","contains","isInDayRange","currentTimeToPixels","totalMinutes","isCurrent","clickCallbackWrapper","opts","mom","entity","Date","clickCallback","$moment","$entity","clickWeekEvent","showAbsencesCallBackWrapper","showAbsencesCallback","$absences","$day","config","doy","dropCallback","dateSplitted","dayEvent","move","moveAction","$element","duplicateAction","$onInit","$watchCollection","PlanningDirective","templateUrl","entitiesPauses","eventCallback","dayCallback","weekEventCallback","action","PlanningDayController","data","ids","array","absents","isDefined","hasOverlap","within","absentsString","PlanningDayDirective","replace","preventDefault","dayCtrl","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","TypeError","PlanningLeftColumnController","threeDays","activateDuplicationButtons","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_step$value","column","triggerDayEvent","PlanningLineController","setAbsenceTooltip","state","absenceType","userName","user","confirmation","extractMinutesFromEvent","offsetX","hoverAbsence","tooltip","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getElementsByClassName","leaveAbsence","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getAttribute","dayOfWeek","checkAbsence","checkFerie","$hour","$minutes","clickEvent","currentId","preEvent","postEvent","breaks","SECONDS_BY_DAY","SLIDER_WIDTH","valueOf","toremove","difference","title","round","s","totalWidth","text-align","background","border-top","border-bottom","border-left","generatePostEvent","post","safeParse","createBreaks","calcWidth","compact","p","name","postPercentage","arguments","newValue","oldValue","log","string","PlanningLineDirective","topRowDirective","PlanningTopRowController","calcMargin","half","$watchGroup","$filter","$rootScope","offsetY","leaveLine","AVAILABLE_SPACE","calculateContainerHeight","$on","$broadcast","containerHeight","tempTop","tempHeight","displayedEvents","positioning","setStyle","calculateLeft","calculateWidth","ceil","run","$templateCache","put"],"mappings":"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","file":"planning.js","sourcesContent":[";(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning', ['pikaday', 'zlContextMenu'])\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n  angular\n    .module('90Tech.planning')\n    .filter('day', [function () {\n      return function (day) {\n        if (day === undefined || day === null || isNaN(day) || parseInt(day) > 6) return ''\n        return ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'][day]\n      }\n    }])\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .filter('format', function () {\n      return function (time, format) {\n        return time.format(format)\n      }\n    })\n    .filter('capitalize', function () {\n      return function (str) {\n        if (!str) return ''\n        return str.charAt(0).toUpperCase() + str.slice(1)\n      }\n    })\n})(window.angular)\n","/**\n * WebApp Agenda\n * http://docs.pluginit.fr/agenda\n *\n * Copyright 2014 PluginIT\n * Non permissive commercial License.\n */\n\n;(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .filter('range', RangeFilter)\n\n  /**\n   * Class Range for emulate a \"for\" loop\n   * @class RangeFilter\n   * @constructor\n   */\n  function RangeFilter () {\n    /**\n     * Return decimal values arrays at wished size\n     * @param input\n     * @param total\n     * @returns {*}\n     */\n    var operation = function (input, total) {\n      // We parse just in case\n      total = parseInt(total)\n\n      // We're adding at empty array the current value for the loop\n      for (var i = 0; i < total; i++) {\n        input.push(i)\n      }\n\n      // We return the array finally\n      return input\n    }\n\n    /**\n     * Return callback to execute RangeFilter\n     */\n    return operation\n  }\n})(window.angular)\n",";(function (angular) {\n  'use strict'\n  angular\n    .module('90Tech.planning')\n    .filter('strPlanning', ['planningConfiguration', function (planningConfiguration) {\n      return function (val) {\n        return planningConfiguration.strings[val]\n      }\n    }])\n})(window.angular)\n",";(function (angular, _, moment) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .service('AbsenceService', AbsenceService)\n\n  function AbsenceService () {\n    var self = this\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      parseAbsences: parseAbsences\n    })\n\n    function parseAbsences (absences, interval) {\n      if (!Array.isArray(interval)) {\n        throw new Error('Invalid interval')\n      }\n      var parsed = absences.filter(function (abs) {\n        return moment.range(abs.start, abs.end).overlaps(moment.range(interval[0], interval[1]))\n      }).map(function (absence) {\n        absence.style = {}\n        if (moment(absence.start).isSame(moment(angular.copy(interval[0])))) {\n          absence.style.top = 0 + 'px'\n          absence.start = interval[0]\n        }\n        if (moment(absence.start).isBefore(moment(angular.copy(interval[0])))) {\n          absence.start = interval[0]\n          absence.style.top = 0 + 'px'\n        }\n        if (moment(absence.end).isAfter(moment(angular.copy(interval[1])))) {\n          absence.end = interval[1]\n        }\n        return absence\n      })\n\n      return mergeRanges(parsed)\n    }\n\n    function mergeRanges (ranges) {\n      var copy = ranges.map(function (r, index) {\n        r.index = index\n        return Object.assign({}, r, {index: index})\n      })\n      // Check if any ranges overlaps\n      // If none overlap, return array\n      if (!_.any(copy, function (range1) {\n        return _.any(copy, function (range2) {\n          if (range1.index === range2.index) {\n            return false\n          }\n          return moment.range(range1.start, range1.end).overlaps(moment.range(range2.start, range2.end))\n        })\n      })) {\n        return ranges\n      }\n      var reduced = ranges.reduce(function (acc, value, index, arr) {\n        var next = arr[index + 1]\n        if (!next || !value) {\n          return acc\n        }\n\n        if (moment.range(value.start, value.end).overlaps(moment.range(next.start, next.end))) {\n          acc.push({\n            start: moment.min(\n              moment(angular.copy(value.start)),\n              moment(angular.copy(next.start))\n            ),\n            end: moment.max(\n              moment(angular.copy(value.end)),\n              moment(angular.copy(next.end))\n            )\n          })\n        }\n        return acc\n      }, [])\n\n      return mergeRanges(reduced)\n    }\n  }\n\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n  angular.module('90Tech.planning').service('AbsenceService', AbsenceService);\n\n  function AbsenceService() {\n    var self = this;\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      parseAbsences: parseAbsences\n    });\n\n    function parseAbsences(absences, interval) {\n      if (!Array.isArray(interval)) {\n        throw new Error('Invalid interval');\n      }\n      var parsed = absences.filter(function (abs) {\n        return moment.range(abs.start, abs.end).overlaps(moment.range(interval[0], interval[1]));\n      }).map(function (absence) {\n        absence.style = {};\n        if (moment(absence.start).isSame(moment(angular.copy(interval[0])))) {\n          absence.style.top = 0 + 'px';\n          absence.start = interval[0];\n        }\n        if (moment(absence.start).isBefore(moment(angular.copy(interval[0])))) {\n          absence.start = interval[0];\n          absence.style.top = 0 + 'px';\n        }\n        if (moment(absence.end).isAfter(moment(angular.copy(interval[1])))) {\n          absence.end = interval[1];\n        }\n        return absence;\n      });\n\n      return mergeRanges(parsed);\n    }\n\n    function mergeRanges(_x) {\n      var _again = true;\n\n      _function: while (_again) {\n        var ranges = _x;\n        _again = false;\n\n        var copy = ranges.map(function (r, index) {\n          r.index = index;\n          return Object.assign({}, r, { index: index });\n        });\n        // Check if any ranges overlaps\n        // If none overlap, return array\n        if (!_.any(copy, function (range1) {\n          return _.any(copy, function (range2) {\n            if (range1.index === range2.index) {\n              return false;\n            }\n            return moment.range(range1.start, range1.end).overlaps(moment.range(range2.start, range2.end));\n          });\n        })) {\n          return ranges;\n        }\n        var reduced = ranges.reduce(function (acc, value, index, arr) {\n          var next = arr[index + 1];\n          if (!next || !value) {\n            return acc;\n          }\n\n          if (moment.range(value.start, value.end).overlaps(moment.range(next.start, next.end))) {\n            acc.push({\n              start: moment.min(moment(angular.copy(value.start)), moment(angular.copy(next.start))),\n              end: moment.max(moment(angular.copy(value.end)), moment(angular.copy(next.end)))\n            });\n          }\n          return acc;\n        }, []);\n\n        _x = reduced;\n        _again = true;\n        copy = reduced = undefined;\n        continue _function;\n      }\n    }\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .service('ColorService', ColorService)\n\n  ColorService.$inject = []\n\n  function ColorService () {\n    var self = this\n\n    _.extend(self, {\n      getLuminance: getLuminance\n    })\n\n\n    /**\n     * return the luminance of a color : > 200 is black\n     * @param c Color\n     * @returns {number}\n     */\n    function getLuminance (c) {\n      c = c || '#ffffff'\n      var r, g, b\n      var rgbRegex = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/\n      if (rgbRegex.test(c)){\n          var exec = rgbRegex.exec(c)\n           r = parseInt(exec[1])\n           g = parseInt(exec[2])\n           b = parseInt(exec[3])\n      } else {\n        var color = c.substring(1) // strip #\n        var rgb = parseInt(color, 16) // convert rrggbb to decimal\n        r = (rgb >> 16) & 0xff // extract red\n        g = (rgb >> 8) & 0xff // extract green\n        b = (rgb >> 0) & 0xff // extract blue\n      }\n\n      var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n      // luma > 200 : black\n      return luma\n    }\n\n  }\n}(window.angular, window._, window.moment))\n",";(function (angular) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .provider('planningConfiguration', function () {\n      var self = this\n\n      self.BASE_SIZE = 10\n      self.MAX_PARALLEL = 3\n      self.strings = {\n        nothing_to_show: 'Rien à afficher'\n      }\n\n      self.DAYS = [0, 1, 2, 3, 4, 5, 6]\n\n      self.parallelText = 'parallel items'\n\n      this.setParallelText = function (text) {\n        self.parallelText = '' + text\n      }\n\n      this.setBaseSize = function (size) {\n        self.BASE_SIZE = size\n      }\n      this.setMaxParallel = function (number) {\n        self.MAX_PARALLEL = number\n      }\n\n      this.setString = function (key, value) {\n        self.strings[key] = value\n      }\n\n      this.setDays = function (value) {\n        self.DAYS = value\n      }\n\n      this.$get = [function () {\n        return {\n          strings: self.strings,\n          BASE_SIZE: self.BASE_SIZE,\n          MAX_PARALLEL: self.MAX_PARALLEL,\n          parallelText: self.parallelText,\n          DAYS: self.DAYS,\n          absentTechnicianCallback: function (callback) {\n            callback()\n          },\n          isFerieCallback: function (callback) {\n            callback()\n          },\n          warningCallback: function (callback) {\n            callback()\n          }\n        }\n      }]\n    })\n}(window.angular))\n",";(function (angular, _, moment) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .service('HolidaysServicePlanning', HolidaysServicePlanning)\n\n  function HolidaysServicePlanning () {\n    var self = this\n    _.extend(self, {\n      // Public Attributes\n      solidarityDays: [],\n      masterDayRange: [],\n      aliaCompanySettings: {\n        showSolidarityDay: false\n      },\n      // Public Methods\n      isSolidarityDay\n    })\n\n    function isSolidarityDay (day) {\n      let bool = false\n      if(day && _.get(self.aliaCompanySettings, 'showSolidarityDay', false)){\n        const parsedDay = moment(day)\n        self.solidarityDays.forEach((solidarityDay) => {\n          if(solidarityDay.master) self.masterDay = solidarityDay\n          if(parsedDay.get('year') >= _.get(self.masterDay, 'year')){\n            const filter = self.masterDayRange.filter(elt => moment(elt.date).get('year') === moment(parsedDay).get('year') && elt.rule === self.masterDay.rule)\n            if(filter.length){\n              solidarityDay = filter[0]\n            }\n          }\n          if (\n            moment(solidarityDay.start).unix() <= moment(parsedDay).endOf('day').unix() &&\n            moment(solidarityDay.end).unix() >= moment(parsedDay).endOf('day').unix()\n          ) {\n            bool = true\n          }\n        })\n      }\n      return bool\n    }\n  }\n\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n  angular.module('90Tech.planning').service('HolidaysServicePlanning', HolidaysServicePlanning);\n\n  function HolidaysServicePlanning() {\n    var self = this;\n    _.extend(self, {\n      // Public Attributes\n      solidarityDays: [],\n      masterDayRange: [],\n      aliaCompanySettings: {\n        showSolidarityDay: false\n      },\n      // Public Methods\n      isSolidarityDay: isSolidarityDay\n    });\n\n    function isSolidarityDay(day) {\n      var bool = false;\n      if (day && _.get(self.aliaCompanySettings, 'showSolidarityDay', false)) {\n        (function () {\n          var parsedDay = moment(day);\n          self.solidarityDays.forEach(function (solidarityDay) {\n            if (solidarityDay.master) self.masterDay = solidarityDay;\n            if (parsedDay.get('year') >= _.get(self.masterDay, 'year')) {\n              var filter = self.masterDayRange.filter(function (elt) {\n                return moment(elt.date).get('year') === moment(parsedDay).get('year') && elt.rule === self.masterDay.rule;\n              });\n              if (filter.length) {\n                solidarityDay = filter[0];\n              }\n            }\n            if (moment(solidarityDay.start).unix() <= moment(parsedDay).endOf('day').unix() && moment(solidarityDay.end).unix() >= moment(parsedDay).endOf('day').unix()) {\n              bool = true;\n            }\n          });\n        })();\n      }\n      return bool;\n    }\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, _, moment) {\n  'use strict'\n  angular.module('90Tech.planning')\n    .service('PauseService', PauseService)\n\n  PauseService.$inject = ['ColorService']\n\n  function PauseService (ColorService) {\n    var self = this\n\n    _.extend(self, {\n      // Public Attributes\n      // Public Methods\n      generateGradient: generateGradient\n    })\n\n    function generateGradient (event, direction) {\n      var color = event.style['background-color']\n      var pauseColor = invertColor(color)\n      var start = event.start\n      var end = event.end\n      var totalRange = moment.range(start, end)\n      var totalDuration = totalRange.diff('milliseconds')\n\n      function parsePause (pauses) {\n        return _.map(pauses, function (pause) {\n          var start = event.start.isAfter(pause.start) ? event.start : pause.start\n          var end = event.end.isBefore(pause.end) ? event.end : pause.end\n          var pauseRange = moment.range(start, end)\n          var pauseDuration = pauseRange.diff('milliseconds')\n          var percentage = pauseDuration / totalDuration * 100\n          var before = totalRange.clone()\n          before.subtract(pauseRange)\n          if (!before.length) {\n            return {range: pauseRange, endPercentage: 100, startPercentage: 0}\n          }\n          var v = (before[0].diff('milliseconds') || totalDuration) / totalDuration * 100\n          return {range: pauseRange, endPercentage: percentage + v, startPercentage: v}\n        })\n      }\n\n      var mapped = parsePause(event.pauses)\n\n      var reduced = _.reduce(mapped, function (acc, range) {\n        return acc + ', ' + color + ' ' + range.startPercentage + '%, ' + pauseColor + ' ' + range.startPercentage + '%, ' + pauseColor + ' ' + range.endPercentage + '%, ' + color + ' ' + range.endPercentage + '%'\n      }, 'linear-gradient(' + direction + ', ' + color)\n\n      reduced += ', ' + color + ' 100%)'\n      return reduced\n    }\n\n    function invertColor (hex) {\n      if (hex.indexOf('#') === 0) {\n        hex = hex.slice(1)\n      }\n      // convert 3-digit hex to 6-digits.\n      if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n      }\n      if (hex.length !== 6) {\n        throw new Error('Invalid HEX color.')\n      }\n      // invert color components\n      var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16)\n      // pad each with zeros and return\n      return '#' + padZero(r) + padZero(g) + padZero(b)\n    }\n\n    function padZero (str, len) {\n      len = len || 2\n      var zeros = new Array(len).join('0')\n      return (zeros + str).slice(-len)\n    }\n  }\n\n})(window.angular, window._, window.moment)\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .service('PositionService', PositionService)\n\n  PositionService.$inject = []\n\n  function PositionService () {\n    var self = this\n\n    _.extend(self, {\n      // Public Methods\n      overlap: overlap\n    })\n\n    /**\n     * Check if event overlap any events in line, merge if parallel items is over maxParallelEvents, and push event in toRemove\n     * @param lines Arrays, containing events example : [[event, event][event,event][event]]\n     * @param event Event\n     * @param maxParallelEvents Int, maximum parallelEvents\n     * @param toRemove Array containing event which have been integrated/merged with another event\n     * @param doublecheck Boolean If true, check if day isn't same between two events (useful for monthly view where hours doesn't overlap on same day)\n     */\n    function overlap (lines, event, maxParallelEvents, toRemove, doublecheck) {\n      var range = event.pre > 0\n        ? moment.range(moment(event.start).subtract(event.pre, 'minutes'), moment(event.end))\n        : event.range\n      for (var i = 0; i < lines.length; i++) {\n        if (event.depth > maxParallelEvents) {\n          var overlap = false\n          _.each(lines[maxParallelEvents], function (elt) {\n\n            var eltRange = elt.pre > 0\n              ? moment.range(moment(elt.start).subtract(elt.pre, 'minutes'), moment(elt.end))\n              : elt.range\n\n            overlap = range.overlaps(eltRange)\n            if (!overlap && doublecheck) {\n              overlap = (event.start.day() === elt.start.day() || event.start.day() === elt.end.day() || event.end.day() === elt.start.day() || event.end.day() === elt.end.day())\n            }\n            if (overlap) {\n              elt.start = moment.min(event.start, elt.start) // set start to minimum of 2 overlapping event\n              elt.end = moment.max(event.end, elt.end)  // set end to maximum of 2 overlapping event\n              elt.range = moment.range(elt.start, elt.end) // Update range\n              elt.line = maxParallelEvents\n              elt.eventList.push(event)\n              if (elt.technician !== event.technician) { // Technician isn't the same, hide it\n                elt.technician = ''\n                event.technician = ''\n              }\n            }\n          })\n          if (overlap) {\n            toRemove.push(event)\n            break\n          }\n          event.depth = maxParallelEvents\n          event.line = maxParallelEvents\n          if (!event.eventList) {\n            var eventClone = _.cloneDeep(event)\n            event.eventList = [eventClone]\n          }\n          lines[maxParallelEvents].push(event)\n          break\n        }\n        if (!lines[i].length) {\n          lines[i].push(event)\n          event.line = i\n          break\n        }\n        if (_.filter(lines[i], function (elt) { // if any event in lines[i] overlap\n          var eltRange = elt.pre > 0\n            ? moment.range(moment(elt.start).subtract(elt.pre, 'minutes'), moment(elt.end))\n            : elt.range\n          overlap = range.overlaps(eltRange)\n          if (!overlap && doublecheck) {\n            overlap = (event.start.day() === elt.start.day() || event.start.day() === elt.end.day() || event.end.day() === elt.start.day() || event.end.day() === elt.end.day())\n          }\n          if (overlap) {\n            elt.depth += 1\n            return true\n          } }).length) {\n          event.depth += 1\n          if (!lines[i + 1]) { // if next line is doesn't exist, add one\n            lines[i + 1] = []\n          }\n        } else {\n          lines[i].push(event)\n          event.line = i\n          break\n        }\n      }\n    }\n  }\n}(window.angular, window._, window.moment))\n",";(function (angular, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningDragDrop', function () {\n      return {\n        controller: function () {},\n        scope: {},\n        controllerAs: 'dragDropCtrl',\n        bindToController: {\n          zlDrag: '=',\n          zlDrop: '&'\n        },\n        link: function (scope, element) {\n          const options = {\n            threshold: 0.5\n          }\n          let seen = false\n          var dragImage = document.createElement('div')\n          var el = element[0]\n          const callback = (entries, observer) => {\n            if (entries[0].isIntersecting && !seen) {\n              seen = true\n              if (el.attributes['zl-drag']) {\n                el.draggable = true\n\n                el.addEventListener(\n                  'dragstart',\n                  dragStartEvent,\n                  false\n                )\n              }\n              if (el.attributes['zl-drop']) {\n                el.addEventListener(\n                  'drop',\n                  dropEvent,\n                  false\n                )\n\n                el.addEventListener(\n                  'dragenter',\n                  dragEnterEvent,\n                  false\n                )\n\n                el.addEventListener(\n                  'dragleave',\n                  dragLeaveEvent,\n                  false\n                )\n              }\n            } else if (!entries[0].isIntersecting && seen) {\n              el.removeEventListener(\n                'dragstart',\n                dragStartEvent,\n                false\n              )\n              el.removeEventListener(\n                'drop',\n                dropEvent,\n                false\n              )\n              el.removeEventListener(\n                'dragenter',\n                dragEnterEvent,\n                false\n              )\n              el.removeEventListener(\n                'dragleave',\n                dragLeaveEvent,\n                false\n              )\n              seen = false\n            }\n          }\n          const observer = new IntersectionObserver(callback, options)\n          observer.observe(element[0])\n\n          function dragStartEvent (e) {\n            dragImage.style.height = el.clientHeight + 'px'\n            dragImage.style.zIndex = '1000'\n            dragImage.style.position = 'relative'\n            dragImage.style.left = '-10000px'\n            dragImage.style.bottom = '-10000px;'\n            dragImage.innerHTML = el.innerHTML\n            if (el.children.length > 1) {\n              dragImage.children[0].style.float = 'left'\n              dragImage.style.backgroundColor = el.children[1].style.backgroundColor\n              dragImage.style.width = el.clientWidth + 'px'\n            } else {\n              dragImage.style.width = Math.min(el.clientWidth, 200) + 'px'\n              dragImage.style.backgroundColor = el.children[0].style.backgroundColor\n            }\n            e.dataTransfer.effectAllowed = 'move'\n\n            document.body.appendChild(dragImage)\n\n            // remove translucent drag if present\n            if (e.dataTransfer.setDragImage) {\n              e.dataTransfer.setDragImage(dragImage, 0, 0)\n            }\n            // Remove tooltips on drag\n            _.each(document.querySelectorAll('.planning-event-tooltip'), function (elt) {\n              elt.remove()\n            })\n            e.dataTransfer.setData('Text', JSON.stringify(scope.dragDropCtrl.zlDrag))\n            this.classList.add('drag')\n            return false\n          }\n          function dropEvent (e) {\n            scope.$apply(function () {\n              scope.dragDropCtrl.zlDrop({ $data: JSON.parse(e.dataTransfer.getData('Text')), $event: e })\n            })\n            e.target.classList.remove('over')\n            this.classList.remove('over')\n            e.stopPropagation()\n            return false\n          }\n          function dragEnterEvent (e) {\n            e.target.classList.add('over')\n            return false\n          }\n          function dragLeaveEvent (e) {\n            e.target.classList.remove('over')\n            return false\n          }\n        }\n      }\n    })\n})(window.angular, _)\n","/**\n * @author Toolito <toolito@90tech.fr>\n * @copyright 2015 Zenlabs SAS. All rights reserved.\n *\n * TODO Export in separate module ?\n */\n;(function (angular) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlHorizontalScroll', ScrollHorizontalDirective)\n\n  ScrollHorizontalDirective.$inject = ['$timeout']\n\n  function ScrollHorizontalDirective ($timeout) {\n    return {\n      restrict: 'A',\n      scope: {\n        scrollLeft: '='\n      },\n      link: function link (scope, element,  attributes) { // eslint-disable-line\n        element.bind('mousewheel', function (e) {\n          element[0].scrollLeft -= e.wheelDelta / 3\n        })\n        element.addClass('slider')\n\n        if (scope.scrollLeft) {\n        }\n\n        $timeout(function () {\n          // Needs a delay since the offsetWidth we obtain first is off by ~300px\n          element[0].scrollLeft = scope.scrollLeft - element[0].offsetWidth / 2\n        }, 100)\n      }\n    }\n  }\n})(window.angular)\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanning', PlanningDirective)\n\n  PlanningController.$inject = ['$scope', 'planningConfiguration', 'HolidaysServicePlanning']\n\n  function PlanningController ($scope, planningConfiguration, HolidaysServicePlanning) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        //  sortedEvents       : sortedEvents,\n        isToday: isToday,\n        currentTimeToPixels: currentTimeToPixels,\n        isCurrent: isCurrent,\n        clickCallbackWrapper: clickCallbackWrapper,\n        showAbsencesCallBackWrapper: showAbsencesCallBackWrapper,\n        isInDayRange: isInDayRange,\n        keys: keys,\n        getEvents: getEvents,\n        clickWeekEvent: clickWeekEvent,\n        dropEvent: dropEvent,\n        isFerie: isFerie,\n        isSolidarityDay,\n        hasAbsence: hasAbsence,\n        getName: getName,\n        dayEvent\n      })\n\n      init()\n    }\n\n    function init () {\n      if(self.solidarityDays.length) HolidaysServicePlanning.solidarityDays = self.solidarityDays\n      if(self.masterDayRange.length) HolidaysServicePlanning.masterDayRange = self.masterDayRange\n      HolidaysServicePlanning.aliaCompanySettings = self.aliaCompanySettings\n      self.zoom = parseInt(self.zoom)\n      self.allowedDays = self.usableDays.sort() || planningConfiguration.DAYS\n      self.daysList = self.allowedDays.map(function (i) {\n        var d = moment(self.position)\n        d.weekday(i)\n        return d\n      })\n\n      if (!self.zoom || self.zoom < 1) {\n        self.zoom = 1\n      }\n\n      self._dayStart = self.dayStart ? parseTime(self.dayStart) : parseTime(0)\n      self._dayEnd = self.dayEnd ? parseTime(self.dayEnd) : parseTime(24)\n      self.width = (self.zoom * (parseInt(self._dayEnd.h) - parseInt(self._dayStart.h) + 1) * BASE_SIZE) + 'px'\n      self.sortedEvents = undefined\n      switch (self.mode) {\n        case 'week':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e.start.format('DD/MM/YYYY')\n          })\n          addMissingDays(self.sortedEvents)\n          break\n        case 'day':\n        case 'week-advanced':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e[self.dayField]\n          })\n          /* If we are in advanced week mode, we have a double grouping: first by technician, then by day of week */\n          if (self.mode === 'week-advanced') {\n            self.sortedEvents = _.mapValues(self.sortedEvents, function (eventsByTechnician) {\n              return _.groupBy(eventsByTechnician, function (e) {\n                return e.start.weekday()\n              })\n            })\n          }\n          addMissingEntities(self.sortedEvents)\n          break\n        case '3day':\n          self._events = (_.flatten(_.map(self.events, split)))\n          self._events = filter(self._events)\n          self.sortedEvents = _.reduce(self.entities, function (acc, v) {\n            acc[v] = []\n            return acc\n          }, {})\n\n          var keys = _.keys(self.sortedEvents)\n          self.groupedEvents = _.map(_.groupBy(self._events, function (e) {\n            return moment(e.start).startOf('day').unix()\n          }), function (v, k) {\n            var result = {\n              key: k,\n              date: moment.unix(k).startOf('day').toDate(),\n              day: moment.unix(k).startOf('day').format('dddd DD MMMM'),\n              value: _.groupBy(v, function (e) {\n                return e.technician\n              }),\n              absences: angular.copy(self.absences)\n            }\n            _.each(self.entities, function (e) {\n              if (!result.value[e]) {\n                result.value[e] = []\n              }\n            })\n            return result\n          })\n\n          var start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n          var stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n          var days = [{start: angular.copy(start), end: angular.copy(stop)}]\n\n          var j = 0\n          while (j < 2) {\n            stop.add(1, 'day')\n            var d = stop.day() - 1\n            if (d < 0) {\n              d = 6\n            }\n            if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n              days.push({start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)})\n              j++\n            }\n          }\n\n          _.each(days, function (d) {\n            var date = \"\" + moment(d.start).startOf('day').unix()\n\n            var found = _.find(self.groupedEvents, function (group) {\n              return group.key === date\n            })\n\n            if (!found) {\n              var obj = {\n                key: date,\n                date: moment(angular.copy(d.start)).startOf('day').toDate(),\n                day: moment(angular.copy(d.start)).startOf('day').format('dddd DD MMMM'),\n                value: {},\n                absences: angular.copy(self.absences)\n              }\n              _.each(_.keys(self.sortedEvents), function (k) {\n                obj.value[k] = []\n              })\n              self.groupedEvents.push(obj)\n            }\n          })\n          self.groupedEvents = _.sortBy(self.groupedEvents, function (e) {\n            return e.key\n          })\n          break\n        case 'month':\n          var firstDay = moment(self.position).date(1).hours(0).minutes(0).seconds(0)\n          self.month = moment(self.position).date(1).hours(0).minutes(0).seconds(0).format('MMMM')\n          self.decallage = firstDay.isoWeekday() - 1 //\n\n          if (self.decallage < 0) {\n            self.decallage = 0\n          }\n          self.oneDayEvents = _(self.events)\n            .filter(function (event) {\n              return event.start.dayOfYear() === event.end.dayOfYear() && event.start.month() === moment(self.position).month()\n            })\n            .groupBy(\n              function (event) { return Math.floor((event.start.date() + self.decallage) / 7.01) }) // 7.01 -> Fix issue when start day = 7 (sunday)\n            .value()\n          self.multipleDaysEvents = _(self.events)\n            .filter(function (event) {\n              return event.start.dayOfYear() !== event.end.dayOfYear()\n            })\n            .map(splitByWeeks)\n            .flatten()\n            .groupBy(function (event) {\n              return Math.floor((event.start.date() + self.decallage) / 7.01) // 7.01 -> Fix issue when start day = 7 (sunday)\n            })\n            .value()\n\n\n          var endWeek = moment(self.position).endOf('month').isoWeek()\n          var startWeek = moment(self.position).startOf('month').isoWeek()\n          // When switching years, last week of month can be 1\n          if (endWeek === 1) {\n            endWeek = moment(self.position).isoWeeksInYear() + 1\n          }\n          if (endWeek < startWeek) {\n            endWeek = startWeek + endWeek\n          }\n          var weekInMonth = endWeek - startWeek + 1\n          for (var i = 0; i < weekInMonth; i++) {\n            if (self.multipleDaysEvents[i] === undefined) {\n              self.multipleDaysEvents[i] = []\n            }\n          }\n          self.days = []\n          // Add day from previous month\n          if (firstDay.isoWeekday() - 1 > 0) {\n            for (i = 0; i < firstDay.isoWeekday() - 1; i++) {\n              self.days.unshift({})\n            }\n          }\n          _.times(firstDay.daysInMonth(), function (n) {\n            var day = moment(firstDay).add(n, 'days')\n            self.days.push({ date: day, events: [] })\n          })\n\n          var displayedDaysCount = (self.days.length > 35 ? 42 : 35)\n          while (self.days.length < displayedDaysCount) {\n            self.days.push({})\n          }\n          break\n      }\n    }\n\n    function getName(id) {\n      return self.entitiesName.find((el) => el._id === id).fullname\n    }\n\n    function split (event) {\n      // Event starts and ends the same day\n      event = angular.copy(event)\n\n      var start = moment(event.start).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n      var stop = moment(event.end).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n      if (event.start.dayOfYear() === event.end.dayOfYear()) {\n        // reset the boundaries if they exceed the one fixed.\n        // And trim events that are entirely out of the boundaries\n        if (event.start.isBefore(start)) {\n          if (event.end.isBefore(start)) {\n            return []\n          }\n          event.start = start\n        }\n        if (event.end.isAfter(stop)) {\n          if (event.start.isAfter(stop)) {\n            return []\n          }\n          event.end = stop\n        }\n        return [event]\n      }\n      // Event is on several days.\n      // Build a first event that ends at the end of the first day\n      var first_event = angular.copy(event)\n      first_event.end = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n      if (event.start.isBefore(start)) {\n        first_event.start = start\n      }\n\n      var startNextDay = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m)\n      var endThisDay = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m)\n      if (event.end.isBefore(startNextDay)) {\n        if (first_event.start.isAfter(endThisDay)) {\n          return []\n        }\n        // Event finishes before start hour next day. No need to create another one\n        return [first_event]\n      }\n      first_event.continuedAfter = true\n\n      // Build a second event that starts at the beginning of the following days.\n      // This event may end several days later. Recursion will handle it\n      var second_event = angular.copy(event)\n      second_event.start = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m)\n      second_event.continuedBefore = true\n\n      if (event.start.isAfter(endThisDay)) {\n        // If the first event starts after curfew, don't add it\n        return split(second_event)\n      }\n\n      return [first_event].concat(split(second_event))\n    }\n\n    function splitByWeeks (event) {\n      if (event.start.isAfter(event.end)) {\n        var st = event.start\n        event.start = event.end\n        event.end = st\n      }\n\n      if (event.start.year() < self.position.year() || event.start.month() < self.position.month()) {\n        // Event starts before our current month\n        if (event.end.year() < self.position.year() || event.end.month() < self.position.month()) {\n          // Event also ends before. Return nothing\n          return []\n        }\n        // Set the beginning at the start of the month\n        event.start = moment(self.position).startOf('month')\n      }\n      if (event.end.month() > self.position.month() || event.end.year() !== self.position.year()) {\n        // Event ends after current month\n        if (event.start.month() > self.position.month()) {\n          return []\n        }\n        event.end = moment(self.position).endOf('month')\n      }\n      // console.info(_.cloneDeep(event))\n      if (event.start.isoWeek() === event.end.isoWeek()) {\n        // If our event is on one week, we're all set\n        return [event]\n      }\n\n      // Split\n      var firstEvent = angular.copy(event)\n      var secondEvent = angular.copy(event)\n      // make it end on the same week\n      firstEvent.continuedAfter = true\n      secondEvent.continuedBefore = true\n      firstEvent.end = moment(firstEvent.start).endOf('week')\n      secondEvent.start.add(1, 'week').startOf('week')\n      // Recursion will handle potential split needed by second event\n      return [firstEvent].concat(splitByWeeks(secondEvent))\n    }\n\n    function filter (events) { // remove event not in range (month, week, day)\n      return _.filter(events, function (e) {\n        var start, stop\n        switch (self.mode) {\n          case 'week':\n          case 'week-advanced':\n            start = moment(self.position).weekday(0).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).weekday(6).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            break\n          case 'day':\n            start = moment(self.position).startOf('day').hour(self._dayStart.h).minute(self._dayStart.m)\n            stop = moment(self.position).endOf('day').hour(self._dayEnd.h).minute(self._dayEnd.m)\n            break\n          case '3day':\n            start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            var days = [{start: angular.copy(start), end: angular.copy(stop)}]\n\n            var i = 0\n            while (i < 2) {\n              stop.add(1, 'day')\n              var d = stop.day() - 1\n              if (d < 0) {\n                d = 6\n              }\n              if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n                days.push({start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)})\n                i++\n              }\n            }\n            return _.some(days, function (d) {\n              return e.start.isBetween(d.start, d.end) || e.end.isBetween(d.start, d.end)\n            })\n          case 'month':\n            start = moment(self.position).date(1).hour(self._dayStart.h).minute(self._dayStart.m).second(0)\n            stop = moment(self.position).weekday(moment(self.position).daysInMonth()).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59)\n            break\n        }\n        return e.start.isBetween(start, stop) || e.end.isBetween(start, stop)\n      })\n    }\n\n    function addMissingDays (sortedEvents) {\n      sortedEvents = sortedEvents || {}\n      var startingDay = moment(self.position).weekday(0)\n      _.times(7, function (i) {\n        var newDate = moment(angular.copy(startingDay)).add(i, 'days').format('DD/MM/YYYY')\n        if (!sortedEvents[newDate]) {\n          sortedEvents[newDate] = []\n        }\n      })\n    }\n\n    function addMissingEntities (sortedEvents) {\n      sortedEvents = sortedEvents || {}\n      _.each(self.entities, function (e) {\n        if (!sortedEvents[e]) {\n          sortedEvents[e] = []\n        }\n      })\n    }\n\n    function parseTime (h) {\n      if (h >= 24) {\n        return { h: 23, m: 59 }\n      }\n      return { h: h, m: 0 }\n    }\n\n    function keys (sortedEvents) {\n      switch (self.mode) {\n        case 'week':\n          return Object.keys(sortedEvents).sort(function(a, b) {\n            var dateA = dateFromString(a)\n            var dateB = dateFromString(b)\n            return dateA - dateB\n          })\n        case 'week-advanced':\n        case 'day':\n        case '3day':\n          if (self.entitiesName) {\n            return self.entitiesName.map(e => e._id)\n          }\n          return []\n      }\n    }\n\n    function getEvents (key) {\n      return self.sortedEvents[key]\n    }\n\n    $scope.$watchCollection(function () {\n      return [self.events, self.entities, self.position, self.mode, self.dayStart, self.dayEnd, self.zoom, self.usableDays]\n    }, init)\n\n    function isToday (n) {\n      return self.position.week() === moment().week() && n === moment().dayOfYear()\n    }\n\n    function isFerie (day) {\n      if(self.holidays) {\n        return self.holidays.find(holiday => moment(holiday.date).format('L') === moment(day).format('L'));\n      }\n    }\n\n    function isSolidarityDay (day) {\n      return HolidaysServicePlanning.isSolidarityDay(day)\n    }\n\n    function hasAbsence (date) {\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n    }\n\n    function isInDayRange () {\n      return moment().hour() > parseInt(self._dayStart.h) && moment().hour() < parseInt(self._dayEnd.h)\n    }\n\n    function currentTimeToPixels () {\n      var totalMinutes = (moment().hour() - parseInt(self._dayStart ? self._dayStart.h : 0)) * 60 + moment().minutes()\n      return Math.floor(self.zoom * (BASE_SIZE * totalMinutes) / 60)\n    }\n\n    function isCurrent () {\n      return self.position.isSame(moment(), self.mode)\n    }\n\n    function clickCallbackWrapper (opts) {\n      var mom\n      var entity\n      switch (self.mode) {\n        case 'week':\n          var split = opts.d.split('/')\n          /**\n           * split[2] === year\n           * split[1] === month, we need to subtract 1 because momentJS months starts at 0\n           * split[0] === dayOfMonth\n           */\n          mom = moment(new Date(split[2], split[1] - 1, split[0], opts.h, opts.m))\n          break\n        case '3day':\n        case 'day':\n          mom = moment(self.position).hour(opts.h).minute(opts.m)\n          entity = opts.entity\n          break\n        case 'week-advanced':\n          entity = opts.entity\n          mom = moment(self.position).hour(opts.h).minute(opts.m).second(0).weekday(opts.d)\n          break\n      }\n      self.clickCallback({ $moment: mom, $entity: entity })\n    }\n\n    function clickWeekEvent (day, $event) {\n      if (day.date) {\n        self.clickCallback({ $moment: day.date })\n      }\n    }\n\n    function showAbsencesCallBackWrapper (absences, day) {\n      self.showAbsencesCallback({$absences: absences, $day: day})\n    }\n\n    function dropEvent (config) {\n      var mom = config.moment\n      if (!mom) {\n        switch (self.mode) {\n          case 'week':\n            var doy = moment(dateFromString(config.d)).dayOfYear()\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).dayOfYear(doy)\n            break\n          case 'week-advanced':\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).weekday(config.d)\n            break\n          case 'day':\n            mom = moment(self.position).hour(config.h).minute(config.m)\n            break\n          case '3day':\n            mom = moment.unix(config.day).hour(config.h).minute(config.m)\n        }\n      }\n      var entity = (_.includes(['week-advanced', 'day', '3day'], self.mode)) ? config.entity : undefined\n      if ((self.mode === 'month') && isFerie(mom)) {\n        if (!self.isSolidarityDay(mom)) {\n          planningConfiguration.isFerieCallback(function () {\n            self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity })\n          })\n        } else {\n          self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity })\n        }\n      } else {\n        self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity })\n      }\n    }\n\n    function calculateAdvancedWeekContainerHeight () {\n      return (parseInt(self.zoom) * Math.max(planningConfiguration.BASE_SIZE - 8, 1)) + 'px'\n    }\n\n    function dateFromString (date) {\n      var dateSplitted = date.split('/')\n      return new Date(dateSplitted[2], dateSplitted[1] - 1, dateSplitted[0])\n    }\n\n    function dayEvent (line, move) {\n      if (move) {\n        return self.moveAction({ $element: angular.copy(line) })\n      } else {\n        return self.duplicateAction({ $element: angular.copy(line) })\n      }\n    }\n\n  }\n\n  function PlanningDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning/planning.html',\n      controller: PlanningController,\n      controllerAs: 'planning',\n      bindToController: {\n        zoom: '=',\n        events: '=',\n        entities: '=',\n        entitiesName: '=',\n        entitiesPauses: '=?',\n        absences: '=?',\n        position: '=',\n        mode: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        dayField: '=',\n        eventCallback: '&',\n        dayCallback: '&',\n        clickCallback: '&',\n        weekEventCallback: '&',\n        dropCallback: '&',\n        usableDays: '=?',\n        action: '&?',\n        duplicateAction: '&?',\n        moveAction: '&?',\n        holidays: '=',\n        solidarityDays: '=',\n        showAbsencesCallback: '&',\n        aliaCompanySettings: '=',\n        masterDayRange: '='\n      },\n      scope: {}\n    }\n  }\n})(window.angular, window.moment, window._)\n","'use strict';\n\n;(function (angular, moment, _) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanning', PlanningDirective);\n\n  PlanningController.$inject = ['$scope', 'planningConfiguration', 'HolidaysServicePlanning'];\n\n  function PlanningController($scope, planningConfiguration, HolidaysServicePlanning) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE;\n\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        //  sortedEvents       : sortedEvents,\n        isToday: isToday,\n        currentTimeToPixels: currentTimeToPixels,\n        isCurrent: isCurrent,\n        clickCallbackWrapper: clickCallbackWrapper,\n        showAbsencesCallBackWrapper: showAbsencesCallBackWrapper,\n        isInDayRange: isInDayRange,\n        keys: keys,\n        getEvents: getEvents,\n        clickWeekEvent: clickWeekEvent,\n        dropEvent: dropEvent,\n        isFerie: isFerie,\n        isSolidarityDay: isSolidarityDay,\n        hasAbsence: hasAbsence,\n        getName: getName,\n        dayEvent: dayEvent\n      });\n\n      init();\n    };\n\n    function init() {\n      if (self.solidarityDays.length) HolidaysServicePlanning.solidarityDays = self.solidarityDays;\n      if (self.masterDayRange.length) HolidaysServicePlanning.masterDayRange = self.masterDayRange;\n      HolidaysServicePlanning.aliaCompanySettings = self.aliaCompanySettings;\n      self.zoom = parseInt(self.zoom);\n      self.allowedDays = self.usableDays.sort() || planningConfiguration.DAYS;\n      self.daysList = self.allowedDays.map(function (i) {\n        var d = moment(self.position);\n        d.weekday(i);\n        return d;\n      });\n\n      if (!self.zoom || self.zoom < 1) {\n        self.zoom = 1;\n      }\n\n      self._dayStart = self.dayStart ? parseTime(self.dayStart) : parseTime(0);\n      self._dayEnd = self.dayEnd ? parseTime(self.dayEnd) : parseTime(24);\n      self.width = self.zoom * (parseInt(self._dayEnd.h) - parseInt(self._dayStart.h) + 1) * BASE_SIZE + 'px';\n      self.sortedEvents = undefined;\n      switch (self.mode) {\n        case 'week':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e.start.format('DD/MM/YYYY');\n          });\n          addMissingDays(self.sortedEvents);\n          break;\n        case 'day':\n        case 'week-advanced':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n          self.sortedEvents = _.groupBy(self._events, function (e) {\n            return e[self.dayField];\n          });\n          /* If we are in advanced week mode, we have a double grouping: first by technician, then by day of week */\n          if (self.mode === 'week-advanced') {\n            self.sortedEvents = _.mapValues(self.sortedEvents, function (eventsByTechnician) {\n              return _.groupBy(eventsByTechnician, function (e) {\n                return e.start.weekday();\n              });\n            });\n          }\n          addMissingEntities(self.sortedEvents);\n          break;\n        case '3day':\n          self._events = _.flatten(_.map(self.events, split));\n          self._events = filter(self._events);\n          self.sortedEvents = _.reduce(self.entities, function (acc, v) {\n            acc[v] = [];\n            return acc;\n          }, {});\n\n          var keys = _.keys(self.sortedEvents);\n          self.groupedEvents = _.map(_.groupBy(self._events, function (e) {\n            return moment(e.start).startOf('day').unix();\n          }), function (v, k) {\n            var result = {\n              key: k,\n              date: moment.unix(k).startOf('day').toDate(),\n              day: moment.unix(k).startOf('day').format('dddd DD MMMM'),\n              value: _.groupBy(v, function (e) {\n                return e.technician;\n              }),\n              absences: angular.copy(self.absences)\n            };\n            _.each(self.entities, function (e) {\n              if (!result.value[e]) {\n                result.value[e] = [];\n              }\n            });\n            return result;\n          });\n\n          var start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n          var stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n          var days = [{ start: angular.copy(start), end: angular.copy(stop) }];\n\n          var j = 0;\n          while (j < 2) {\n            stop.add(1, 'day');\n            var d = stop.day() - 1;\n            if (d < 0) {\n              d = 6;\n            }\n            if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n              days.push({ start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59) });\n              j++;\n            }\n          }\n\n          _.each(days, function (d) {\n            var date = \"\" + moment(d.start).startOf('day').unix();\n\n            var found = _.find(self.groupedEvents, function (group) {\n              return group.key === date;\n            });\n\n            if (!found) {\n              var obj = {\n                key: date,\n                date: moment(angular.copy(d.start)).startOf('day').toDate(),\n                day: moment(angular.copy(d.start)).startOf('day').format('dddd DD MMMM'),\n                value: {},\n                absences: angular.copy(self.absences)\n              };\n              _.each(_.keys(self.sortedEvents), function (k) {\n                obj.value[k] = [];\n              });\n              self.groupedEvents.push(obj);\n            }\n          });\n          self.groupedEvents = _.sortBy(self.groupedEvents, function (e) {\n            return e.key;\n          });\n          break;\n        case 'month':\n          var firstDay = moment(self.position).date(1).hours(0).minutes(0).seconds(0);\n          self.month = moment(self.position).date(1).hours(0).minutes(0).seconds(0).format('MMMM');\n          self.decallage = firstDay.isoWeekday() - 1; //\n\n          if (self.decallage < 0) {\n            self.decallage = 0;\n          }\n          self.oneDayEvents = _(self.events).filter(function (event) {\n            return event.start.dayOfYear() === event.end.dayOfYear() && event.start.month() === moment(self.position).month();\n          }).groupBy(function (event) {\n            return Math.floor((event.start.date() + self.decallage) / 7.01);\n          }) // 7.01 -> Fix issue when start day = 7 (sunday)\n          .value();\n          self.multipleDaysEvents = _(self.events).filter(function (event) {\n            return event.start.dayOfYear() !== event.end.dayOfYear();\n          }).map(splitByWeeks).flatten().groupBy(function (event) {\n            return Math.floor((event.start.date() + self.decallage) / 7.01); // 7.01 -> Fix issue when start day = 7 (sunday)\n          }).value();\n\n          var endWeek = moment(self.position).endOf('month').isoWeek();\n          var startWeek = moment(self.position).startOf('month').isoWeek();\n          // When switching years, last week of month can be 1\n          if (endWeek === 1) {\n            endWeek = moment(self.position).isoWeeksInYear() + 1;\n          }\n          if (endWeek < startWeek) {\n            endWeek = startWeek + endWeek;\n          }\n          var weekInMonth = endWeek - startWeek + 1;\n          for (var i = 0; i < weekInMonth; i++) {\n            if (self.multipleDaysEvents[i] === undefined) {\n              self.multipleDaysEvents[i] = [];\n            }\n          }\n          self.days = [];\n          // Add day from previous month\n          if (firstDay.isoWeekday() - 1 > 0) {\n            for (i = 0; i < firstDay.isoWeekday() - 1; i++) {\n              self.days.unshift({});\n            }\n          }\n          _.times(firstDay.daysInMonth(), function (n) {\n            var day = moment(firstDay).add(n, 'days');\n            self.days.push({ date: day, events: [] });\n          });\n\n          var displayedDaysCount = self.days.length > 35 ? 42 : 35;\n          while (self.days.length < displayedDaysCount) {\n            self.days.push({});\n          }\n          break;\n      }\n    }\n\n    function getName(id) {\n      return self.entitiesName.find(function (el) {\n        return el._id === id;\n      }).fullname;\n    }\n\n    function split(_x) {\n      var _again = true;\n\n      _function: while (_again) {\n        var event = _x;\n        _again = false;\n\n        // Event starts and ends the same day\n        event = angular.copy(event);\n\n        var start = moment(event.start).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n        var stop = moment(event.end).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n        if (event.start.dayOfYear() === event.end.dayOfYear()) {\n          // reset the boundaries if they exceed the one fixed.\n          // And trim events that are entirely out of the boundaries\n          if (event.start.isBefore(start)) {\n            if (event.end.isBefore(start)) {\n              return [];\n            }\n            event.start = start;\n          }\n          if (event.end.isAfter(stop)) {\n            if (event.start.isAfter(stop)) {\n              return [];\n            }\n            event.end = stop;\n          }\n          return [event];\n        }\n        // Event is on several days.\n        // Build a first event that ends at the end of the first day\n        var first_event = angular.copy(event);\n        first_event.end = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n        if (event.start.isBefore(start)) {\n          first_event.start = start;\n        }\n\n        var startNextDay = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m);\n        var endThisDay = moment(event.start).hour(self._dayEnd.h).minute(self._dayEnd.m);\n        if (event.end.isBefore(startNextDay)) {\n          if (first_event.start.isAfter(endThisDay)) {\n            return [];\n          }\n          // Event finishes before start hour next day. No need to create another one\n          return [first_event];\n        }\n        first_event.continuedAfter = true;\n\n        // Build a second event that starts at the beginning of the following days.\n        // This event may end several days later. Recursion will handle it\n        var second_event = angular.copy(event);\n        second_event.start = moment(event.start).add(1, 'day').hour(self._dayStart.h).minute(self._dayStart.m);\n        second_event.continuedBefore = true;\n\n        if (event.start.isAfter(endThisDay)) {\n          // If the first event starts after curfew, don't add it\n          _x = second_event;\n          _again = true;\n          start = stop = first_event = startNextDay = endThisDay = second_event = undefined;\n          continue _function;\n        }\n\n        return [first_event].concat(split(second_event));\n      }\n    }\n\n    function splitByWeeks(event) {\n      if (event.start.isAfter(event.end)) {\n        var st = event.start;\n        event.start = event.end;\n        event.end = st;\n      }\n\n      if (event.start.year() < self.position.year() || event.start.month() < self.position.month()) {\n        // Event starts before our current month\n        if (event.end.year() < self.position.year() || event.end.month() < self.position.month()) {\n          // Event also ends before. Return nothing\n          return [];\n        }\n        // Set the beginning at the start of the month\n        event.start = moment(self.position).startOf('month');\n      }\n      if (event.end.month() > self.position.month() || event.end.year() !== self.position.year()) {\n        // Event ends after current month\n        if (event.start.month() > self.position.month()) {\n          return [];\n        }\n        event.end = moment(self.position).endOf('month');\n      }\n      // console.info(_.cloneDeep(event))\n      if (event.start.isoWeek() === event.end.isoWeek()) {\n        // If our event is on one week, we're all set\n        return [event];\n      }\n\n      // Split\n      var firstEvent = angular.copy(event);\n      var secondEvent = angular.copy(event);\n      // make it end on the same week\n      firstEvent.continuedAfter = true;\n      secondEvent.continuedBefore = true;\n      firstEvent.end = moment(firstEvent.start).endOf('week');\n      secondEvent.start.add(1, 'week').startOf('week');\n      // Recursion will handle potential split needed by second event\n      return [firstEvent].concat(splitByWeeks(secondEvent));\n    }\n\n    function filter(events) {\n      // remove event not in range (month, week, day)\n      return _.filter(events, function (e) {\n        var start, stop;\n        switch (self.mode) {\n          case 'week':\n          case 'week-advanced':\n            start = moment(self.position).weekday(0).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).weekday(6).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            break;\n          case 'day':\n            start = moment(self.position).startOf('day').hour(self._dayStart.h).minute(self._dayStart.m);\n            stop = moment(self.position).endOf('day').hour(self._dayEnd.h).minute(self._dayEnd.m);\n            break;\n          case '3day':\n            start = moment(self.position).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            var days = [{ start: angular.copy(start), end: angular.copy(stop) }];\n\n            var i = 0;\n            while (i < 2) {\n              stop.add(1, 'day');\n              var d = stop.day() - 1;\n              if (d < 0) {\n                d = 6;\n              }\n              if (_.isEmpty(self.allowedDays) || _.includes(self.allowedDays, d)) {\n                days.push({ start: angular.copy(stop).hour(self._dayStart.h).minute(self._dayStart.m).second(0), end: angular.copy(stop).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59) });\n                i++;\n              }\n            }\n            return _.some(days, function (d) {\n              return e.start.isBetween(d.start, d.end) || e.end.isBetween(d.start, d.end);\n            });\n          case 'month':\n            start = moment(self.position).date(1).hour(self._dayStart.h).minute(self._dayStart.m).second(0);\n            stop = moment(self.position).weekday(moment(self.position).daysInMonth()).hour(self._dayEnd.h).minute(self._dayEnd.m).second(59);\n            break;\n        }\n        return e.start.isBetween(start, stop) || e.end.isBetween(start, stop);\n      });\n    }\n\n    function addMissingDays(sortedEvents) {\n      sortedEvents = sortedEvents || {};\n      var startingDay = moment(self.position).weekday(0);\n      _.times(7, function (i) {\n        var newDate = moment(angular.copy(startingDay)).add(i, 'days').format('DD/MM/YYYY');\n        if (!sortedEvents[newDate]) {\n          sortedEvents[newDate] = [];\n        }\n      });\n    }\n\n    function addMissingEntities(sortedEvents) {\n      sortedEvents = sortedEvents || {};\n      _.each(self.entities, function (e) {\n        if (!sortedEvents[e]) {\n          sortedEvents[e] = [];\n        }\n      });\n    }\n\n    function parseTime(h) {\n      if (h >= 24) {\n        return { h: 23, m: 59 };\n      }\n      return { h: h, m: 0 };\n    }\n\n    function keys(sortedEvents) {\n      switch (self.mode) {\n        case 'week':\n          return Object.keys(sortedEvents).sort(function (a, b) {\n            var dateA = dateFromString(a);\n            var dateB = dateFromString(b);\n            return dateA - dateB;\n          });\n        case 'week-advanced':\n        case 'day':\n        case '3day':\n          if (self.entitiesName) {\n            return self.entitiesName.map(function (e) {\n              return e._id;\n            });\n          }\n          return [];\n      }\n    }\n\n    function getEvents(key) {\n      return self.sortedEvents[key];\n    }\n\n    $scope.$watchCollection(function () {\n      return [self.events, self.entities, self.position, self.mode, self.dayStart, self.dayEnd, self.zoom, self.usableDays];\n    }, init);\n\n    function isToday(n) {\n      return self.position.week() === moment().week() && n === moment().dayOfYear();\n    }\n\n    function isFerie(day) {\n      if (self.holidays) {\n        return self.holidays.find(function (holiday) {\n          return moment(holiday.date).format('L') === moment(day).format('L');\n        });\n      }\n    }\n\n    function isSolidarityDay(day) {\n      return HolidaysServicePlanning.isSolidarityDay(day);\n    }\n\n    function hasAbsence(date) {\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n\n    function isInDayRange() {\n      return moment().hour() > parseInt(self._dayStart.h) && moment().hour() < parseInt(self._dayEnd.h);\n    }\n\n    function currentTimeToPixels() {\n      var totalMinutes = (moment().hour() - parseInt(self._dayStart ? self._dayStart.h : 0)) * 60 + moment().minutes();\n      return Math.floor(self.zoom * (BASE_SIZE * totalMinutes) / 60);\n    }\n\n    function isCurrent() {\n      return self.position.isSame(moment(), self.mode);\n    }\n\n    function clickCallbackWrapper(opts) {\n      var mom;\n      var entity;\n      switch (self.mode) {\n        case 'week':\n          var split = opts.d.split('/');\n          /**\n           * split[2] === year\n           * split[1] === month, we need to subtract 1 because momentJS months starts at 0\n           * split[0] === dayOfMonth\n           */\n          mom = moment(new Date(split[2], split[1] - 1, split[0], opts.h, opts.m));\n          break;\n        case '3day':\n        case 'day':\n          mom = moment(self.position).hour(opts.h).minute(opts.m);\n          entity = opts.entity;\n          break;\n        case 'week-advanced':\n          entity = opts.entity;\n          mom = moment(self.position).hour(opts.h).minute(opts.m).second(0).weekday(opts.d);\n          break;\n      }\n      self.clickCallback({ $moment: mom, $entity: entity });\n    }\n\n    function clickWeekEvent(day, $event) {\n      if (day.date) {\n        self.clickCallback({ $moment: day.date });\n      }\n    }\n\n    function showAbsencesCallBackWrapper(absences, day) {\n      self.showAbsencesCallback({ $absences: absences, $day: day });\n    }\n\n    function dropEvent(config) {\n      var mom = config.moment;\n      if (!mom) {\n        switch (self.mode) {\n          case 'week':\n            var doy = moment(dateFromString(config.d)).dayOfYear();\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).dayOfYear(doy);\n            break;\n          case 'week-advanced':\n            mom = moment(self.position).hour(config.h).minute(config.m).second(0).weekday(config.d);\n            break;\n          case 'day':\n            mom = moment(self.position).hour(config.h).minute(config.m);\n            break;\n          case '3day':\n            mom = moment.unix(config.day).hour(config.h).minute(config.m);\n        }\n      }\n      var entity = _.includes(['week-advanced', 'day', '3day'], self.mode) ? config.entity : undefined;\n      if (self.mode === 'month' && isFerie(mom)) {\n        if (!self.isSolidarityDay(mom)) {\n          planningConfiguration.isFerieCallback(function () {\n            self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity });\n          });\n        } else {\n          self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity });\n        }\n      } else {\n        self.dropCallback({ $moment: mom, $data: config.$data, $event: config.$event, $entity: entity });\n      }\n    }\n\n    function calculateAdvancedWeekContainerHeight() {\n      return parseInt(self.zoom) * Math.max(planningConfiguration.BASE_SIZE - 8, 1) + 'px';\n    }\n\n    function dateFromString(date) {\n      var dateSplitted = date.split('/');\n      return new Date(dateSplitted[2], dateSplitted[1] - 1, dateSplitted[0]);\n    }\n\n    function dayEvent(line, move) {\n      if (move) {\n        return self.moveAction({ $element: angular.copy(line) });\n      } else {\n        return self.duplicateAction({ $element: angular.copy(line) });\n      }\n    }\n  }\n\n  function PlanningDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning/planning.html',\n      controller: PlanningController,\n      controllerAs: 'planning',\n      bindToController: {\n        zoom: '=',\n        events: '=',\n        entities: '=',\n        entitiesName: '=',\n        entitiesPauses: '=?',\n        absences: '=?',\n        position: '=',\n        mode: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        dayField: '=',\n        eventCallback: '&',\n        dayCallback: '&',\n        clickCallback: '&',\n        weekEventCallback: '&',\n        dropCallback: '&',\n        usableDays: '=?',\n        action: '&?',\n        duplicateAction: '&?',\n        moveAction: '&?',\n        holidays: '=',\n        solidarityDays: '=',\n        showAbsencesCallback: '&',\n        aliaCompanySettings: '=',\n        masterDayRange: '='\n      },\n      scope: {}\n    };\n  }\n})(window.angular, window.moment, window._);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningDay', PlanningDayDirective)\n\n  PlanningDayController.$inject = [\n    // Angular\n    '$scope',\n    // Libs\n    // Managers\n    // Services\n    'HolidaysServicePlanning'\n    // Const\n    // Resolved\n  ]\n  function PlanningDayController (\n    // Angular\n    $scope,\n    // Libs\n    // Managers\n    // Services\n    HolidaysServicePlanning\n    // Const\n    // Resolved\n  ) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        dropEvent: dropEvent,\n        getName,\n        isSolidarityDay,\n        absents: []\n      })\n\n      self.isDefined = (self.day.events === undefined)\n      init()\n      $scope.$watchCollection([self.day, self.absences], function () {\n        if (self.day && self.day.date && self.absences && Object.keys(self.absences).length) {\n          self.absents = Object.keys(self.absences).reduce(function (acc, key) {\n            var array = self.absences[key]\n            var hasOverlap = _.any(array, function (absence) {\n              var range = moment.range(absence.start, absence.end)\n              if (moment(absence.start).diff(absence.end, 'minutes') === 0) {\n                return false\n              }\n              if (moment(absence.start).hours() === 12 && moment(absence.start).isSame(self.day.date, 'day') ) {\n                return !!moment(absence.start).isBetween(self.day.date, moment(self.day.date).endOf('day'))\n              }\n              if (self.day.date.within(range) ) {\n                return true\n              }\n            })\n            if (hasOverlap) {\n              acc.push(key)\n            }\n            return acc\n          }, [])\n          self.absentsString = '<div>' + self.getName(self.absents).join('<br>') + '</div>'\n        } else {\n          self.absentsString = ''\n          self.absents = []\n        }\n      })\n    }\n\n\n    function init () {\n      if(self.holidays && self.day.date) {\n        self.isFerie = self.holidays.find(holiday => moment(holiday.date).format('L') === moment(self.day.date).format('L'));\n      }\n    }\n\n\n    function dropEvent (data, event) {\n      self.dropCallback({ $data: data, $event: event})\n    }\n    function isSolidarityDay (day) {\n      return HolidaysServicePlanning.isSolidarityDay(day)\n    }\n\n    function getName(ids) {\n      const array = []\n      ids.forEach((id) => {\n        array.push(self.entities.find((el) => el._id === id).fullname)\n      })\n      return array\n    }\n  }\n\n  /**\n   *\n   */\n  function PlanningDayDirective () {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-day-block/planning-day.html',\n      controller: PlanningDayController,\n      controllerAs: 'dayCtrl',\n      bindToController: {\n        day: '=',\n        events: '=',\n        clickCallback: '&',\n        entities: '=?',\n        dropCallback: '&',\n        absences: '=?',\n        holidays: \"=\"\n      },\n      scope: true,\n      link: function (scope, element) {\n        var el = element[0]\n        window.addEventListener('dragover', function (e) {\n          e.preventDefault();\n        }, false);\n        window.addEventListener('drop', function (e) {\n          e.preventDefault();\n        }, false);\n        el.addEventListener(\n          'drop',\n          function (e) {\n            e.preventDefault()\n            e.stopPropagation()\n            if (e.stopPropagation) e.stopPropagation()\n            this.classList.remove('over')\n            scope.$apply(function () {\n              scope.dayCtrl.dropEvent(JSON.parse(e.dataTransfer.getData('Text')), e)\n            })\n            return false\n          },\n          false\n        )\n\n        el.addEventListener(\n          'dragenter',\n          function (e) {\n            this.classList.add('over')\n            return false\n          },\n          false\n        )\n\n        el.addEventListener(\n          'dragleave',\n          function (e) {\n            this.classList.remove('over')\n            return false\n          },\n          false\n        )\n      }\n    }\n  }\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningDay', PlanningDayDirective);\n\n  PlanningDayController.$inject = [\n  // Angular\n  '$scope',\n  // Libs\n  // Managers\n  // Services\n  'HolidaysServicePlanning'\n  // Const\n  // Resolved\n  ];\n  function PlanningDayController(\n  // Angular\n  $scope,\n  // Libs\n  // Managers\n  HolidaysServicePlanning\n  // Const\n  // Resolved\n  ) // Services\n  {\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        dropEvent: dropEvent,\n        getName: getName,\n        isSolidarityDay: isSolidarityDay,\n        absents: []\n      });\n\n      self.isDefined = self.day.events === undefined;\n      init();\n      $scope.$watchCollection([self.day, self.absences], function () {\n        if (self.day && self.day.date && self.absences && Object.keys(self.absences).length) {\n          self.absents = Object.keys(self.absences).reduce(function (acc, key) {\n            var array = self.absences[key];\n            var hasOverlap = _.any(array, function (absence) {\n              var range = moment.range(absence.start, absence.end);\n              if (moment(absence.start).diff(absence.end, 'minutes') === 0) {\n                return false;\n              }\n              if (moment(absence.start).hours() === 12 && moment(absence.start).isSame(self.day.date, 'day')) {\n                return !!moment(absence.start).isBetween(self.day.date, moment(self.day.date).endOf('day'));\n              }\n              if (self.day.date.within(range)) {\n                return true;\n              }\n            });\n            if (hasOverlap) {\n              acc.push(key);\n            }\n            return acc;\n          }, []);\n          self.absentsString = '<div>' + self.getName(self.absents).join('<br>') + '</div>';\n        } else {\n          self.absentsString = '';\n          self.absents = [];\n        }\n      });\n    };\n\n    function init() {\n      if (self.holidays && self.day.date) {\n        self.isFerie = self.holidays.find(function (holiday) {\n          return moment(holiday.date).format('L') === moment(self.day.date).format('L');\n        });\n      }\n    }\n\n    function dropEvent(data, event) {\n      self.dropCallback({ $data: data, $event: event });\n    }\n    function isSolidarityDay(day) {\n      return HolidaysServicePlanning.isSolidarityDay(day);\n    }\n\n    function getName(ids) {\n      var array = [];\n      ids.forEach(function (id) {\n        array.push(self.entities.find(function (el) {\n          return el._id === id;\n        }).fullname);\n      });\n      return array;\n    }\n  }\n\n  /**\n   *\n   */\n  function PlanningDayDirective() {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-day-block/planning-day.html',\n      controller: PlanningDayController,\n      controllerAs: 'dayCtrl',\n      bindToController: {\n        day: '=',\n        events: '=',\n        clickCallback: '&',\n        entities: '=?',\n        dropCallback: '&',\n        absences: '=?',\n        holidays: \"=\"\n      },\n      scope: true,\n      link: function link(scope, element) {\n        var el = element[0];\n        window.addEventListener('dragover', function (e) {\n          e.preventDefault();\n        }, false);\n        window.addEventListener('drop', function (e) {\n          e.preventDefault();\n        }, false);\n        el.addEventListener('drop', function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.stopPropagation) e.stopPropagation();\n          this.classList.remove('over');\n          scope.$apply(function () {\n            scope.dayCtrl.dropEvent(JSON.parse(e.dataTransfer.getData('Text')), e);\n          });\n          return false;\n        }, false);\n\n        el.addEventListener('dragenter', function (e) {\n          this.classList.add('over');\n          return false;\n        }, false);\n\n        el.addEventListener('dragleave', function (e) {\n          this.classList.remove('over');\n          return false;\n        }, false);\n      }\n    };\n  }\n})(window.angular, window._, window.moment);\n\n","'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\n;(function (angular, moment, _) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningLeftColumn', PlanningDirective);\n\n  PlanningLeftColumnController.$inject = ['$scope', 'HolidaysServicePlanning'];\n\n  function PlanningLeftColumnController($scope, HolidaysServicePlanning) {\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        triggerDayEvent: triggerDayEvent,\n        isSolidarityDay: isSolidarityDay\n      });\n      $scope.$watchCollection(function () {\n        return [self.events, self.position, self.mode, self.dayStart, self.dayEnd, self.usableDays, self.entitiesName];\n      }, init);\n    };\n\n    function init() {\n      if (!self.threeDays) self.activateDuplicationButtons = true;\n      self.days = [];\n      self.allowedDays = self.usableDays;\n      self._absences = [];\n      if (self.mode === 'week') {\n        _.forEach(self.allowedDays, function (d) {\n          var day = moment(self.position);\n          day.weekday(d);\n          self.days.push(day);\n        });\n        self.days = _.sortBy(self.days, function (d) {\n          return moment(d).toDate();\n        });\n        if (self.absences) {\n          (function () {\n            var index = 0;\n            self.days.forEach(function (day) {\n              self._absences[index] = [];\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = Object.entries(self.absences)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _step$value = _slicedToArray(_step.value, 2);\n\n                  var key = _step$value[0];\n                  var value = _step$value[1];\n\n                  value.forEach(function (absence) {\n                    if (day.isBetween(moment(absence.start), moment(absence.end)) || moment(day).isSame(moment(absence.start), 'day') && moment(day).isSame(moment(absence.end), 'day')) {\n                      self._absences[index].push(angular.copy(absence));\n                    }\n                  });\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator['return']) {\n                    _iterator['return']();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              index++;\n            });\n          })();\n        }\n      } else if (self.mode === 'day' && self.dayField) {\n        self.column = self.entitiesName;\n      }\n    }\n\n    function triggerDayEvent(line, move) {\n      if (move) {\n        return self.dayEvent(angular.copy(self.events[line._id]), true);\n      } else {\n        return self.dayEvent(angular.copy(self.events[line._id]));\n      }\n    }\n\n    function isSolidarityDay(day) {\n      return HolidaysServicePlanning.isSolidarityDay(day);\n    }\n  }\n\n  function PlanningDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-left-column/planning-left-column.html',\n      controller: PlanningLeftColumnController,\n      controllerAs: 'planningLeftColumn',\n      bindToController: {\n        events: '=',\n        entitiesName: '=',\n        position: '=',\n        mode: '=',\n        dayField: '=',\n        usableDays: '=',\n        isFerie: '=?',\n        absences: '=',\n        dayEvent: '=',\n        threeDays: '<'\n      },\n      scope: true\n    };\n  }\n})(window.angular, window.moment, window._);\n\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningLeftColumn', PlanningDirective)\n\n  PlanningLeftColumnController.$inject = ['$scope', 'HolidaysServicePlanning']\n\n  function PlanningLeftColumnController ($scope, HolidaysServicePlanning) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        triggerDayEvent,\n        isSolidarityDay\n      })\n      $scope.$watchCollection(function () {\n        return [self.events, self.position, self.mode, self.dayStart, self.dayEnd, self.usableDays, self.entitiesName]\n      }, init)\n    }\n\n    function init () {\n      if (!self.threeDays) self.activateDuplicationButtons = true\n      self.days = []\n      self.allowedDays = self.usableDays\n      self._absences = []\n      if (self.mode === 'week') {\n        _.forEach(self.allowedDays, function (d) {\n          var day = moment(self.position)\n          day.weekday(d)\n          self.days.push(day)\n        })\n        self.days = _.sortBy(self.days, function (d) {\n          return moment(d).toDate()\n        })\n        if(self.absences) {\n          let index = 0\n          self.days.forEach(day => {\n            self._absences[index]=[]\n            for (const [key, value] of Object.entries(self.absences)) {\n              value.forEach(absence => {\n                if(day.isBetween(moment(absence.start), moment(absence.end)) || (moment(day).isSame(moment(absence.start),'day') && moment(day).isSame(moment(absence.end),'day'))){\n                  self._absences[index].push(angular.copy(absence))\n                }\n              })\n            }\n            index++\n          });\n        }\n      } else if (self.mode === 'day' && self.dayField) {\n        self.column = self.entitiesName\n      }\n    }\n\n    function triggerDayEvent (line, move) {\n      if (move) {\n        return self.dayEvent(angular.copy(self.events[line._id]), true)\n      } else {\n        return self.dayEvent(angular.copy(self.events[line._id]))\n      }\n    }\n\n    function isSolidarityDay(day){\n      return HolidaysServicePlanning.isSolidarityDay(day)\n    }\n\n  }\n\n  function PlanningDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-left-column/planning-left-column.html',\n      controller: PlanningLeftColumnController,\n      controllerAs: 'planningLeftColumn',\n      bindToController: {\n        events: '=',\n        entitiesName: '=',\n        position: '=',\n        mode: '=',\n        dayField: '=',\n        usableDays: '=',\n        isFerie: '=?',\n        absences: '=',\n        dayEvent: '=',\n        threeDays: '<'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window.moment, window._)\n","'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningLine', PlanningLineDirective);\n\n  PlanningLineController.$inject = ['$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService', 'HolidaysServicePlanning'];\n\n  /**\n   *\n   */\n  function PlanningLineController($scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService, HolidaysServicePlanning) {\n\n    var BASE_SIZE = planningConfiguration.BASE_SIZE;\n    var parallelText = planningConfiguration.parallelText;\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL;\n\n    var self = this;\n\n    self.$onInit = function () {\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveAbsence: leaveAbsence\n      });\n      init();\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd];\n      }, init);\n\n      $scope.$watchCollection(function () {\n        return [self.absences];\n      }, function (newValue, oldValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.position)).startOf('day');\n          var end = moment(angular.copy(self.position)).endOf('day');\n          self._absences = AbsenceService.parseAbsences(self.absences, [start, end]).map(function (abs) {\n            abs.style = {\n              left: (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * moment.range(abs.start, abs.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px'\n            };\n            abs.range = moment.range(abs.start, abs.end);\n            abs['class'] = 'planning-absence-' + abs.confirmation.state;\n            abs.tooltip = setAbsenceTooltip(abs);\n            return abs;\n          });\n        } else if (self.absences) {\n          var start = moment(angular.copy(self.dayOfWeek)).startOf('day');\n          var end = moment(angular.copy(self.dayOfWeek)).endOf('day');\n          self._absences = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = Object.entries(self.absences)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var _step$value = _slicedToArray(_step.value, 2);\n\n              var key = _step$value[0];\n              var value = _step$value[1];\n\n              value.forEach(function (absence) {\n                if (self.dayOfWeek.isBetween(moment(absence.start), moment(absence.end)) || moment(self.dayOfWeek).isSame(moment(absence.start), 'day') && moment(self.dayOfWeek).isSame(moment(absence.end), 'day')) {\n                  self._absences.push(angular.copy(absence));\n                }\n              });\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator['return']) {\n                _iterator['return']();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          self._absences.forEach(function (absence) {\n            var index = self._absences.indexOf(absence);\n            if (moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('day')) && moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day')) || moment(absence.end).isSame(moment(self.dayOfWeek).endOf('day')) && moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('hour')) || moment(absence.start).isSame(moment(self.dayOfWeek).startOf('day')) && moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day'))) {\n              absence.start = moment(self.dayOfWeek).startOf('day');\n              absence.end = moment(self.dayOfWeek).endOf('day');\n            }\n\n            absence.style = {\n              left: (moment(absence.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(absence.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * moment.range(absence.start, absence.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              height: 100 / self._absences.length + '%',\n              position: 'absolute',\n              top: 100 / self._absences.length * index + '%'\n            };\n            absence.range = moment.range(absence.start, absence.end);\n            absence['class'] = 'planning-absence-' + absence.confirmation.state;\n            absence.tooltip = setAbsenceTooltip(absence);\n            absence.index = index;\n          });\n        } else {\n          self._absences = [];\n        }\n      });\n    };\n\n    self.log = function (a) {};\n\n    self.replace = function (string) {\n      if (!string) return;\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '');\n    };\n\n    self.preEvent = {};\n    self.postEvent = {};\n\n    function setAbsenceTooltip(abs) {\n      var state = '';\n      var absenceType = abs.absenceType;\n      var userName = self.mode === 'week' ? abs.user.fullname + ' - ' : '';\n      switch (abs.confirmation.state) {\n        case 'sending':\n          state = userName + 'Absence envoyée';\n          break;\n        case 'pending':\n          state = userName + 'Absence en cours de traitement';\n          break;\n        case 'partial-accepted':\n          state = userName + 'Absence en cours de traitement';\n          break;\n        case 'accepted':\n          state = userName + 'Absence acceptée';\n          break;\n      }\n      if (absenceType) {\n        return state + '\\nRaison: ' + absenceType;\n      } else {\n        return state;\n      }\n    }\n    function extractMinutesFromEvent($event) {\n      var minutes;\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30;\n      } else {\n        minutes = Math.floor($event.offsetX / (BASE_SIZE * self.zoom) * 60);\n      }\n      return minutes;\n    }\n\n    function hoverAbsence(absence) {\n      self.tooltip = setAbsenceTooltip(absence);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = document.getElementsByClassName(absence._id)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var iterator = _step2.value;\n\n          iterator.classList.add('absence-hover');\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    function leaveAbsence() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = document.getElementsByClassName('absence')[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var iterator = _step3.value;\n\n          iterator.classList.remove('absence-hover');\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3['return']) {\n            _iterator3['return']();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    function dropEvent(data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'));\n      var minutes = extractMinutesFromEvent(event);\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      var day = line.dayOfWeek ? line.dayOfWeek : line.position;\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        if (!HolidaysServicePlanning.isSolidarityDay(day)) {\n          planningConfiguration.isFerieCallback(function () {\n            self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n          });\n        } else {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        }\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      }\n    }\n\n    function clickEvent(hour, $event, line) {\n      var day = !!line.dayOfWeek ? line.dayOfWeek : line.position;\n      var minutes = extractMinutesFromEvent($event);\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        if (!HolidaysServicePlanning.isSolidarityDay(day)) {\n          planningConfiguration.isFerieCallback(function () {\n            self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n          });\n        } else {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        }\n      } else {\n        self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      }\n    }\n\n    function init() {\n      var currentId = 0;\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {};\n      self.postEvent = {};\n      self.breaks = [];\n\n      self._events = angular.copy(self.events);\n\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf();\n      });\n\n      var lines = [[]];\n      var toremove = [];\n      _.each(self._events, function (event) {\n        var style = {};\n        event.depth = 1;\n        event.range = moment.range(event.start, event.end);\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes');\n          event.range = moment.range(event.start, end);\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * event.range / self.SECONDS_BY_DAY / 1000 + 'px';\n        style['background-color'] = event['background-color'] || '#778899';\n        if (ColorService.getLuminance(style['background-color']) > 200) {\n          style.color = 'black';\n        } else {\n          style.color = 'white';\n        }\n        event.style = style;\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove);\n      });\n      self._events = _.difference(self._events, toremove);\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId);\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n          event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n          event.style['background-color'] = '#000';\n          event.style['font-weight'] = 'bold';\n          event.style.color = '#fff';\n          event.title = event.eventList.length + ' ' + parallelText;\n          if (event.tooltip) event.tooltip = event.title;\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n        if (event.line === undefined) event.line = MAX_PARALLEL;\n        event.style.top = Math.round(parseInt(event.line) * 70 / lines.length) + '%';\n        event.style.height = Math.round(70 / lines.length) + '%';\n        event.percentage = '100%';\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none';\n          var s = moment(event.start).subtract(event.pre, 'minutes');\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day');\n          }\n          var e = moment(event.start);\n          var r = moment.range(s, e);\n          var totalRange = moment.range(s, event.range.end);\n          var percentage = r.valueOf() / totalRange.valueOf() * 100;\n          event.percentage = 100 - percentage + '%';\n          var obj = {\n            percentage: percentage + '%',\n            style: {\n              left: (moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(s).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * r.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background': 'repeating-linear-gradient(45deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          };\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj;\n          } else {\n            event.pre = 0;\n          }\n        }\n        generatePostEvent(event);\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to right');\n          event.style['background-color'] = undefined;\n        }\n        var pre = self.preEvent[event.id];\n        var post = self.postEvent[event.id];\n        event.style.totalWidth = safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1 + 'px';\n        currentId++;\n      });\n      if (self.pauses) {\n        createBreaks();\n      }\n    }\n\n    function calcWidth(zoom) {\n      return parseInt(zoom) * BASE_SIZE + 'px';\n    }\n\n    function createBreaks() {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        };\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return;\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart));\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd));\n        }\n        pause.style.left = (pause.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + pause.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        pause.style.width = self.zoom * self.SLIDER_WIDTH * moment.range(pause.start, pause.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n\n        return pause;\n      }));\n    }\n\n    function checkAbsence(date) {\n      if (self.mode === 'week') {\n        return false;\n      }\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n\n    function checkFerie(date) {\n      return self.holidays.find(function (holiday) {\n        return moment(holiday.date).format('L') === moment(date).format('L');\n      });\n    }\n\n    function generatePostEvent(event) {\n      if (!event.post) {\n        return null;\n      }\n      event.style['border-right'] = 'none';\n      var end = moment(event.end).add(event.post, 'minutes');\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day');\n      }\n      var start = moment(event.end);\n      var range = moment.range(start, end);\n      var totalRange = moment.range(event.range.start, event.range.end);\n      var percentage = range.valueOf() / totalRange.valueOf() * 100;\n      event.postPercentage = 100 - percentage + '%';\n      var obj = {\n        percentage: percentage + '%',\n        style: {\n          left: (moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(start).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n          width: self.zoom * self.SLIDER_WIDTH * range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background': 'repeating-linear-gradient(135deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      };\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj;\n      } else {\n        event.post = 0;\n      }\n    }\n\n    function safeParse() {\n      var width = arguments.length <= 0 || arguments[0] === undefined ? '0px' : arguments[0];\n\n      return parseInt(width.replace('px', ''));\n    }\n  }\n\n  function PlanningLineDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-line/planning-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        clickCallback: '&',\n        dropCallback: '&',\n        pauses: '=?',\n        absences: '=?',\n        position: '=?',\n        mode: '=?',\n        entities: '=?',\n        dayOfWeek: '=',\n        holidays: '='\n      },\n      scope: true\n    };\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$scope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService', 'HolidaysServicePlanning']\n\n  /**\n   *\n   */\n  function\n  PlanningLineController ($scope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService, HolidaysServicePlanning) {\n\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveAbsence: leaveAbsence\n      })\n      init()\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd]\n      }, init)\n\n      $scope.$watchCollection(function () {\n        return [self.absences]\n      }, function (newValue, oldValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.position)).startOf('day')\n          var end = moment(angular.copy(self.position)).endOf('day')\n            self._absences = AbsenceService.parseAbsences(self.absences , [start, end]).map(function (abs) {\n                abs.style = {\n                left: (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n                width: self.zoom * self.SLIDER_WIDTH * (moment.range(abs.start, abs.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n              }\n              abs.range = moment.range(abs.start, abs.end)\n              abs.class = 'planning-absence-' + abs.confirmation.state\n              abs.tooltip = setAbsenceTooltip(abs)\n              return abs\n            })\n\n        } else if (self.absences) {\n          var start = moment(angular.copy(self.dayOfWeek)).startOf('day')\n          var end = moment(angular.copy(self.dayOfWeek)).endOf('day')\n          self._absences = []\n          for (const [key, value] of Object.entries(self.absences)) {\n            value.forEach(absence => {\n              if(self.dayOfWeek.isBetween(moment(absence.start), moment(absence.end)) || (moment(self.dayOfWeek).isSame(moment(absence.start),'day') && moment(self.dayOfWeek).isSame(moment(absence.end),'day'))){\n                self._absences.push(angular.copy(absence))\n              }\n            })\n          }\n          self._absences.forEach(absence => {\n            let index = self._absences.indexOf(absence)\n            if (\n              (moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('day')) && (moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day')))) ||\n              (moment(absence.end).isSame(moment(self.dayOfWeek).endOf('day')) && moment(absence.start).isBefore(moment(self.dayOfWeek).startOf('hour'))) ||\n              ((moment(absence.start).isSame(moment(self.dayOfWeek).startOf('day')) && (moment(absence.end).isAfter(moment(self.dayOfWeek).endOf('day')))))){\n              absence.start = moment(self.dayOfWeek).startOf('day')\n              absence.end = moment(self.dayOfWeek).endOf('day')\n            }\n\n            absence.style = {\n              left: (moment(absence.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(absence.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * (moment.range(absence.start, absence.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              height: (100 / self._absences.length) + '%',\n              position: 'absolute',\n              top: (100 / self._absences.length) * index + '%'\n              }\n              absence.range = moment.range(absence.start, absence.end)\n              absence.class = 'planning-absence-' + absence.confirmation.state\n              absence.tooltip = setAbsenceTooltip(absence)\n              absence.index = index\n          })\n        } else {\n          self._absences = []\n        }\n      })\n    }\n\n    self.log = function (a) {\n    }\n\n    self.replace = function (string) {\n      if (!string) return\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '')\n    }\n\n    self.preEvent = {}\n    self.postEvent = {}\n\n    function setAbsenceTooltip(abs) {\n        let state = ''\n        const absenceType = abs.absenceType\n        const userName = self.mode === 'week' ? abs.user.fullname + ' - ' : ''\n        switch (abs.confirmation.state) {\n            case 'sending':\n                state = userName + 'Absence envoyée'\n                break\n            case 'pending':\n                state = userName + 'Absence en cours de traitement'\n                break\n            case 'partial-accepted':\n                state = userName + 'Absence en cours de traitement'\n                break;\n            case 'accepted':\n                state = userName + 'Absence acceptée'\n                break\n        }\n        if(absenceType) {\n            return state + '\\nRaison: '+ absenceType\n        } else {\n            return state\n        }\n    }\n    function extractMinutesFromEvent($event){\n      var minutes\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30\n      } else {\n        minutes = Math.floor($event.offsetX / (BASE_SIZE * self.zoom) * 60)\n      }\n      return minutes\n    }\n\n    function hoverAbsence(absence) {\n      self.tooltip = setAbsenceTooltip(absence)\n      for (const iterator of document.getElementsByClassName(absence._id)) {\n        iterator.classList.add('absence-hover')\n      }\n    }\n\n    function leaveAbsence() {\n      for (const iterator of document.getElementsByClassName('absence')) {\n        iterator.classList.remove('absence-hover')\n      }\n    }\n\n    function dropEvent (data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'))\n      var minutes = extractMinutesFromEvent(event)\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      var day = line.dayOfWeek ? line.dayOfWeek : line.position\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        if(!HolidaysServicePlanning.isSolidarityDay(day)){\n        planningConfiguration.isFerieCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })} else {\n          self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        }\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      }\n    }\n\n    function clickEvent (hour, $event, line) {\n      let day = !!line.dayOfWeek ? line.dayOfWeek : line.position\n      var minutes = extractMinutesFromEvent($event)\n      var date = moment(angular.copy(self.position)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        if(!HolidaysServicePlanning.isSolidarityDay(day)){\n        planningConfiguration.isFerieCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })} else {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        }\n      } else {\n        self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      }\n    }\n\n    function init () {\n      var currentId = 0\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {}\n      self.postEvent = {}\n      self.breaks = []\n\n      self._events = angular.copy(self.events)\n\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf()\n      })\n\n      var lines = [[]]\n      var toremove = []\n      _.each(self._events, function (event) {\n        var style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes')\n          event.range = moment.range(event.start, end)\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * (event.range) / self.SECONDS_BY_DAY / 1000 + 'px'\n        style['background-color'] = event['background-color'] || '#778899'\n        if (ColorService.getLuminance(style['background-color'])> 200){\n          style.color = 'black'\n        } else {\n          style.color = 'white'\n        }\n        event.style = style\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove)\n      })\n      self._events = _.difference(self._events, toremove)\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId)\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n          event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n          event.style['background-color'] = '#000'\n          event.style['font-weight'] = 'bold'\n          event.style.color = '#fff'\n          event.title = (event.eventList.length) + ' ' + parallelText\n          if (event.tooltip) event.tooltip = event.title\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n        if (event.line === undefined) event.line = MAX_PARALLEL\n        event.style.top = Math.round((parseInt(event.line)) * 70 / lines.length) + '%'\n        event.style.height = Math.round(70 / lines.length) + '%'\n        event.percentage = '100%'\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none'\n          var s = moment(event.start).subtract(event.pre, 'minutes')\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day')\n          }\n          var e = moment(event.start)\n          var r = moment.range(s, e)\n          var totalRange = moment.range(s, event.range.end)\n          var percentage = r.valueOf() / totalRange.valueOf() * 100\n          event.percentage = (100 - percentage) + '%'\n          var obj = {\n            percentage: (percentage) + '%',\n            style: {\n              left: (((moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(s).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n              width: self.zoom * self.SLIDER_WIDTH * (r.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background' : 'repeating-linear-gradient(45deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          }\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj\n          } else {\n            event.pre = 0\n          }\n\n        }\n        generatePostEvent(event)\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to right')\n          event.style['background-color'] = undefined\n        }\n        const pre = self.preEvent[event.id]\n        const post = self.postEvent[event.id]\n        event.style.totalWidth = (safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1) + 'px'\n        currentId++\n      })\n      if (self.pauses) {\n        createBreaks()\n      }\n\n    }\n\n    function calcWidth (zoom) {\n      return (parseInt(zoom) * BASE_SIZE) + 'px'\n    }\n\n    function createBreaks () {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        }\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart))\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd))\n        }\n        pause.style.left = (pause.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + pause.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        pause.style.width = self.zoom * self.SLIDER_WIDTH * (moment.range(pause.start, pause.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n\n        return pause\n      }))\n    }\n\n    function checkAbsence (date) {\n      if(self.mode === 'week') {\n        return false\n      }\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n    }\n\n    function checkFerie (date) {\n      return self.holidays.find(holiday => moment(holiday.date).format('L') === moment(date).format('L'));\n    }\n\n    function generatePostEvent (event) {\n      if (!event.post) {\n        return null\n      }\n      event.style['border-right'] = 'none'\n      let end = moment(event.end).add(event.post, 'minutes')\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day')\n      }\n      const start = moment(event.end)\n      const range = moment.range(start, end)\n      const totalRange = moment.range(event.range.start, event.range.end)\n      const percentage = range.valueOf() / totalRange.valueOf() * 100\n      event.postPercentage = (100 - percentage) + '%'\n      var obj = {\n        percentage: (percentage) + '%',\n        style: {\n          left: (((moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(start).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n          width: self.zoom * self.SLIDER_WIDTH * (range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background' : 'repeating-linear-gradient(135deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      }\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj\n      } else {\n        event.post = 0\n      }\n    }\n\n    function safeParse (width = '0px') {\n      return parseInt(width.replace('px', ''))\n    }\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-line/planning-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        clickCallback: '&',\n        dropCallback: '&',\n        pauses: '=?',\n        absences: '=?',\n        position: '=?',\n        mode: '=?',\n        entities:'=?',\n        dayOfWeek:'=',\n        holidays: '='\n      },\n      scope: true\n    }\n  }\n})(window.angular, window._, window.moment)\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningTopRow', topRowDirective)\n\n  topRowDirective.$inject = ['planningConfiguration']\n\n  function topRowDirective (planningConfiguration) {\n    var BASE_SIZE = planningConfiguration.BASE_SIZE\n\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-top-row/planning-top-row.html',\n      controller: ['$scope', PlanningTopRowController],\n      controllerAs: 'planningTopRow',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        entities: '=',\n        position: '=',\n        mode: '=',\n        callback: '&',\n        holidays: '='\n      },\n      scope: {}\n    }\n\n    function PlanningTopRowController ($scope) {\n      var self = this\n\n      self.$onInit = function () {\n        $scope.$watchGroup([function () { return self.dayStart }, function () { return self.dayEnd }], init)\n\n        _.extend(self, {\n          calcWidth: calcWidth,\n          calcMargin: calcMargin\n        })\n\n        init()\n      }\n\n      function init () {\n        var range = self.dayEnd.h - self.dayStart.h + 1\n        self.hours = []\n        _.times(range, function (i) {\n          var d = moment(self.position)\n          d.hour(i + parseInt(self.dayStart.h))\n          d.minute(0)\n          self.hours.push(d)\n        })\n      }\n\n\n\n      function calcWidth (zoom) {\n        return (parseInt(zoom) * BASE_SIZE) + 'px'\n      }\n\n      function calcMargin (zoom, index) {\n        var half = (parseInt(zoom) * (BASE_SIZE / 2))\n        if (!index) half = half - (3 * parseInt(zoom))\n        return '0 ' + half + 'px 0 -' + half + 'px'\n      }\n\n    }\n  }\n})(window.angular, window.moment, window._)\n",";(function (angular, _, moment) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningVerticalLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$filter', '$scope', '$rootScope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService', 'HolidaysServicePlanning']\n\n  /**\n   *\n   */\n  function\n  PlanningLineController ($filter, $scope, $rootScope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService, HolidaysServicePlanning) {\n\n\n    /** BASE_SIZE is the span of an hour. It gets multiplied by zoom (default 10) to get the size in pixel\n     * in vertical mode, we need to reduce it since we have much less space\n     */\n    var BASE_SIZE = Math.max(planningConfiguration.BASE_SIZE - 8, 1)\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n    var AVAILABLE_SPACE = 90 // Total horizontal space taken by the events\n\n    var self = this\n\n    self.$onInit = function () {\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd]\n      }, init)\n\n      $scope.$watchCollection(function () {\n        return self.absences\n      }, function (oldValue, newValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.day)).startOf('day')\n          var end = moment(angular.copy(self.day)).endOf('day')\n          self._absences = AbsenceService.parseAbsences(angular.copy(self.absences), [start, end]).map(function (abs) {\n            let tempTop = (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60\n            let tempHeight = self.zoom * self.SLIDER_WIDTH * (moment.range(abs.start, abs.end).valueOf()) / self.SECONDS_BY_DAY / 1000\n            if (abs.style.top === 0 + 'px') {\n              abs.style.height = (tempTop + tempHeight) + 'px'\n            } else {\n              abs.style.height = tempHeight + 'px'\n              abs.style.top = tempTop + 'px'\n            }\n\n            abs.range = moment.range(abs.start, abs.end)\n            abs.class = 'planning-absence-' + abs.confirmation.state\n            abs.tooltip = setAbsenceTooltip(abs)\n            return abs\n          })\n        } else {\n          self._absences = []\n        }\n      })\n\n\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveLine: leaveLine\n      })\n\n      init()\n    }\n\n    self.log = function (a) {\n    }\n\n    self.replace = function (string) {\n      if (!string) return\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '')\n    }\n\n    self.preEvent = {}\n    self.postEvent = {}\n\n    function setAbsenceTooltip(abs) {\n      let state = ''\n      const absenceType = abs.absenceType\n      switch (abs.confirmation.state) {\n          case 'sending':\n              state = 'Absence envoyée'\n              break\n          case 'pending':\n              state = 'Absence en cours de traitement'\n              break\n          case 'partial-accepted':\n              state = 'Absence en cours de traitement'\n              break;\n          case 'accepted':\n              state = 'Absence acceptée'\n              break\n      }\n      if(absenceType) {\n          return state + '\\nRaison:'+ absenceType\n      } else {\n          return state\n      }\n    }\n\n    function extractMinutesFromEvent($event){\n      var minutes\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30\n      } else {\n        minutes = Math.floor($event.offsetY / (BASE_SIZE * self.zoom) * 6)*10\n      }\n      return minutes\n    }\n\n    function dropEvent (data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'))\n      var minutes = extractMinutesFromEvent(event)\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      var day = line\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        if(!HolidaysServicePlanning.isSolidarityDay(day)){\n          planningConfiguration.isFerieCallback(function () {\n            self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n          })\n        } else {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n        }\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes})\n      }\n\n    }\n\n    function hoverAbsence() {\n      for (const iterator of document.getElementsByClassName('absence')) {\n        iterator.classList.add('absence-week-advanced-hover')\n      }\n    }\n\n    function leaveLine() {\n      for (const iterator of document.getElementsByClassName('absence')) {\n        iterator.classList.remove('absence-week-advanced-hover')\n      }\n    }\n\n    function clickEvent (hour, $event, line) {\n      var minutes = extractMinutesFromEvent($event)\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes)\n      if (checkAbsence(date) && checkFerie(line)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (checkAbsence(date) && !checkFerie(line)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        })\n      } else if (!checkAbsence(date) && checkFerie(line)) {\n        if(!HolidaysServicePlanning.isSolidarityDay(line)){\n          planningConfiguration.isFerieCallback(function () {\n            self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n          })\n        } else {\n          self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n        }\n      } else {\n        self.clickCallback({$hour: hour + parseInt(self.dayStart.h), $minutes: minutes})\n      }\n\n    }\n\n    function init () {\n      var currentId = 0\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {}\n      self.breaks = []\n\n      self._events = angular.copy(self.events)\n      self.range = self.dayEnd.h - self.dayStart.h\n      self.SECONDS_BY_DAY = 3600 * self.range\n      self.SLIDER_WIDTH = BASE_SIZE * self.range\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf()\n      })\n\n      var lines = [[]]\n      var toremove = []\n      _.each(self._events, function (event) {\n        var style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes')\n          event.range = moment.range(event.start, end)\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * (event.range) / self.SECONDS_BY_DAY / 1000 + 'px'\n        style['background-color'] = event['background-color'] || '#778899'\n        if (ColorService.getLuminance(style['background-color'])> 200){\n          style.color = 'black'\n        } else {\n          style.color = 'white'\n        }\n        event.style = style\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove)\n      })\n      self._events = _.difference(self._events, toremove)\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId)\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px'\n          event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n          event.style['background-color'] = '#000'\n          event.style['font-weight'] = 'bold'\n          event.title = (event.eventList.length) + ' ' + parallelText\n          event.style.color = '#fff'\n          if (event.tooltip) event.tooltip = event.title\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * (event.range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n        if (event.line === undefined) event.line = MAX_PARALLEL\n        event.style.top = Math.round((parseInt(event.line)) * AVAILABLE_SPACE / lines.length) + '%'\n        event.style.height = Math.round(AVAILABLE_SPACE / lines.length) + '%'\n        event.percentage = '100%'\n        if (event.continuedBefore) event.pre = 0\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none'\n          var s = moment(event.start).subtract(event.pre, 'minutes')\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day')\n          }\n          var e = moment(event.start)\n          var r = moment.range(s, e)\n          var totalRange = moment.range(s, event.range.end)\n          var percentage = r.valueOf() / totalRange.valueOf() * 100\n          event.percentage = (100 - percentage) + '%'\n          var obj = {\n            percentage: (percentage) + '%',\n            style: {\n              left: (((moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(s).minutes()) * BASE_SIZE * self.zoom / 60)) +  'px',\n              width: self.zoom * self.SLIDER_WIDTH * (r.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background' : 'repeating-linear-gradient(45deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          }\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj\n          } else {\n            event.pre = 0\n          }\n        }\n        generatePostEvent(event)\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to bottom')\n          event.style['background-color'] = undefined\n        }\n        const pre = self.preEvent[event.id]\n        const post = self.postEvent[event.id]\n        event.style.totalWidth = (safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1) + 'px'\n        currentId++\n      })\n      if (self.pauses) {\n        createBreaks()\n      }\n      calculateContainerHeight()\n\n      $scope.$on('$destroy', () => {\n        $rootScope.$broadcast('context-menu/close')\n      })\n    }\n\n    function safeParse (width = '0px') {\n      return parseInt(width.replace('px', ''))\n    }\n\n    function generatePostEvent (event) {\n      if (!event.post) {\n        return null\n      }\n      let end = moment(event.end).add(event.post, 'minutes')\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day')\n      }\n      const start = moment(event.end)\n      const range = moment.range(start, end)\n      const totalRange = moment.range(event.range.start, event.range.end)\n      const percentage = range.valueOf() / totalRange.valueOf() * 100\n      event.postPercentage = (100 - percentage) + '%'\n      var obj = {\n        percentage: (percentage) + '%',\n        style: {\n          left: (((moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(start).minutes()) * BASE_SIZE * self.zoom / 60) + 2) +  'px',\n          width: self.zoom * self.SLIDER_WIDTH * (range.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * (totalRange.valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background' : 'repeating-linear-gradient(135deg, ' +  event['background-color']  + ', ' +  event['background-color']  + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      }\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj\n      } else {\n        event.post = 0\n      }\n    }\n\n    function calcWidth (zoom) {\n      return (parseInt(zoom) * BASE_SIZE) + 'px'\n    }\n\n    function createBreaks () {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        }\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart))\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd))\n        }\n\n        pause.style.top = (((moment(pause.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + (moment(pause.start).minutes()) * BASE_SIZE * self.zoom / 60)) +  'px'\n        pause.style.height = self.zoom * self.SLIDER_WIDTH * (moment.range(pause.start, pause.end).valueOf()) / self.SECONDS_BY_DAY / 1000 + 'px'\n\n        return pause\n      }))\n    }\n\n    function calculateContainerHeight () {\n      self.containerHeight = (parseInt(self.zoom) * BASE_SIZE) * $filter('range')(self.range) + 'px'\n    }\n\n    function checkAbsence (date) {\n      var d = moment(angular.copy(date))\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d)\n      })\n    }\n\n    function checkFerie (date) {\n      return self.holidays.find(holiday => moment(holiday.date).format('L') === moment(date).format('L'));\n    }\n\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-vertical-line/planning-vertical-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        pauses: '=?',\n        day: '=',\n        absences: '=?',\n        holidays: '=?',\n        clickCallback: '&',\n        dropCallback: '&'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window._, window.moment)\n","'use strict';\n\n;(function (angular, _, moment) {\n  'use strict';\n\n  angular.module('90Tech.planning').directive('zlPlanningVerticalLine', PlanningLineDirective);\n\n  PlanningLineController.$inject = ['$filter', '$scope', '$rootScope', 'planningConfiguration', 'PositionService', 'ColorService', 'PauseService', 'AbsenceService', 'HolidaysServicePlanning'];\n\n  /**\n   *\n   */\n  function PlanningLineController($filter, $scope, $rootScope, planningConfiguration, PositionService, ColorService, PauseService, AbsenceService, HolidaysServicePlanning) {\n\n    /** BASE_SIZE is the span of an hour. It gets multiplied by zoom (default 10) to get the size in pixel\n     * in vertical mode, we need to reduce it since we have much less space\n     */\n    var BASE_SIZE = Math.max(planningConfiguration.BASE_SIZE - 8, 1);\n    var parallelText = planningConfiguration.parallelText;\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL;\n    var AVAILABLE_SPACE = 90; // Total horizontal space taken by the events\n\n    var self = this;\n\n    self.$onInit = function () {\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n      $scope.$watchCollection(function () {\n        return [self.events, self.dayStart, self.dayEnd];\n      }, init);\n\n      $scope.$watchCollection(function () {\n        return self.absences;\n      }, function (oldValue, newValue) {\n        if (Array.isArray(self.absences) && self.absences.length) {\n          var start = moment(angular.copy(self.day)).startOf('day');\n          var end = moment(angular.copy(self.day)).endOf('day');\n          self._absences = AbsenceService.parseAbsences(angular.copy(self.absences), [start, end]).map(function (abs) {\n            var tempTop = (moment(abs.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(abs.start).minutes() * BASE_SIZE * self.zoom / 60;\n            var tempHeight = self.zoom * self.SLIDER_WIDTH * moment.range(abs.start, abs.end).valueOf() / self.SECONDS_BY_DAY / 1000;\n            if (abs.style.top === 0 + 'px') {\n              abs.style.height = tempTop + tempHeight + 'px';\n            } else {\n              abs.style.height = tempHeight + 'px';\n              abs.style.top = tempTop + 'px';\n            }\n\n            abs.range = moment.range(abs.start, abs.end);\n            abs['class'] = 'planning-absence-' + abs.confirmation.state;\n            abs.tooltip = setAbsenceTooltip(abs);\n            return abs;\n          });\n        } else {\n          self._absences = [];\n        }\n      });\n\n      _.extend(self, {\n        clickEvent: clickEvent,\n        calcWidth: calcWidth,\n        dropEvent: dropEvent,\n        hoverAbsence: hoverAbsence,\n        leaveLine: leaveLine\n      });\n\n      init();\n    };\n\n    self.log = function (a) {};\n\n    self.replace = function (string) {\n      if (!string) return;\n      return string.replace(/([a-zA-Z\\ ])\\w+/, '');\n    };\n\n    self.preEvent = {};\n    self.postEvent = {};\n\n    function setAbsenceTooltip(abs) {\n      var state = '';\n      var absenceType = abs.absenceType;\n      switch (abs.confirmation.state) {\n        case 'sending':\n          state = 'Absence envoyée';\n          break;\n        case 'pending':\n          state = 'Absence en cours de traitement';\n          break;\n        case 'partial-accepted':\n          state = 'Absence en cours de traitement';\n          break;\n        case 'accepted':\n          state = 'Absence acceptée';\n          break;\n      }\n      if (absenceType) {\n        return state + '\\nRaison:' + absenceType;\n      } else {\n        return state;\n      }\n    }\n\n    function extractMinutesFromEvent($event) {\n      var minutes;\n      if (_.contains($event.target.classList, 'half-hour')) {\n        // If the user has clicked right on the half-hour line, offsetX is 0\n        minutes = 30;\n      } else {\n        minutes = Math.floor($event.offsetY / (BASE_SIZE * self.zoom) * 6) * 10;\n      }\n      return minutes;\n    }\n\n    function dropEvent(data, event, line) {\n      var hour = parseInt(event.target.getAttribute('hour'));\n      var minutes = extractMinutesFromEvent(event);\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      var day = line;\n      if (checkAbsence(date) && checkFerie(day)) {\n        planningConfiguration.warningCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(day)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(day)) {\n        if (!HolidaysServicePlanning.isSolidarityDay(day)) {\n          planningConfiguration.isFerieCallback(function () {\n            self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n          });\n        } else {\n          self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n        }\n      } else {\n        self.dropCallback({ $data: data, $event: event, $hour: hour, $minutes: minutes });\n      }\n    }\n\n    function hoverAbsence() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = document.getElementsByClassName('absence')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var iterator = _step.value;\n\n          iterator.classList.add('absence-week-advanced-hover');\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    function leaveLine() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = document.getElementsByClassName('absence')[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var iterator = _step2.value;\n\n          iterator.classList.remove('absence-week-advanced-hover');\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    function clickEvent(hour, $event, line) {\n      var minutes = extractMinutesFromEvent($event);\n      var date = moment(angular.copy(self.day)).hours(hour + parseInt(self.dayStart.h)).minutes(minutes);\n      if (checkAbsence(date) && checkFerie(line)) {\n        planningConfiguration.warningCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (checkAbsence(date) && !checkFerie(line)) {\n        planningConfiguration.absentTechnicianCallback(function () {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        });\n      } else if (!checkAbsence(date) && checkFerie(line)) {\n        if (!HolidaysServicePlanning.isSolidarityDay(line)) {\n          planningConfiguration.isFerieCallback(function () {\n            self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n          });\n        } else {\n          self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n        }\n      } else {\n        self.clickCallback({ $hour: hour + parseInt(self.dayStart.h), $minutes: minutes });\n      }\n    }\n\n    function init() {\n      var currentId = 0;\n      //     self.SLIDER_WIDTH   = 24 * BASE_SIZE\n      self.preEvent = {};\n      self.breaks = [];\n\n      self._events = angular.copy(self.events);\n      self.range = self.dayEnd.h - self.dayStart.h;\n      self.SECONDS_BY_DAY = 3600 * self.range;\n      self.SLIDER_WIDTH = BASE_SIZE * self.range;\n\n      // Pre-sort events by start Date\n      self._events = _.sortBy(self._events, function (e) {\n        return e.start.valueOf();\n      });\n\n      var lines = [[]];\n      var toremove = [];\n      _.each(self._events, function (event) {\n        var style = {};\n        event.depth = 1;\n        event.range = moment.range(event.start, event.end);\n        if (event.range < 900000) {\n          var end = moment(event.start).add(15, 'minutes');\n          event.range = moment.range(event.start, end);\n        }\n        style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        //   style.left                = event.start.hours() * 150 + event.start.minutes() * 150 / 60 + 'px'\n        style.width = self.zoom * self.SLIDER_WIDTH * event.range / self.SECONDS_BY_DAY / 1000 + 'px';\n        style['background-color'] = event['background-color'] || '#778899';\n        if (ColorService.getLuminance(style['background-color']) > 200) {\n          style.color = 'black';\n        } else {\n          style.color = 'white';\n        }\n        event.style = style;\n        PositionService.overlap(lines, event, MAX_PARALLEL, toremove);\n      });\n      self._events = _.difference(self._events, toremove);\n      _.each(self._events, function (event) {\n        event.id = angular.copy(currentId);\n        if (event.line === MAX_PARALLEL) {\n          event.style.left = (event.start.hours() - self.dayStart.h) * BASE_SIZE * self.zoom + event.start.minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n          event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n          event.style['background-color'] = '#000';\n          event.style['font-weight'] = 'bold';\n          event.title = event.eventList.length + ' ' + parallelText;\n          event.style.color = '#fff';\n          if (event.tooltip) event.tooltip = event.title;\n        }\n        event.style.width = self.zoom * self.SLIDER_WIDTH * event.range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n        if (event.line === undefined) event.line = MAX_PARALLEL;\n        event.style.top = Math.round(parseInt(event.line) * AVAILABLE_SPACE / lines.length) + '%';\n        event.style.height = Math.round(AVAILABLE_SPACE / lines.length) + '%';\n        event.percentage = '100%';\n        if (event.continuedBefore) event.pre = 0;\n        if (event.pre > 0) {\n          event.style['border-left'] = 'none';\n          var s = moment(event.start).subtract(event.pre, 'minutes');\n          if (!moment(s).isSame(event.start, 'day')) {\n            s = moment(event.start).startOf('day');\n          }\n          var e = moment(event.start);\n          var r = moment.range(s, e);\n          var totalRange = moment.range(s, event.range.end);\n          var percentage = r.valueOf() / totalRange.valueOf() * 100;\n          event.percentage = 100 - percentage + '%';\n          var obj = {\n            percentage: percentage + '%',\n            style: {\n              left: (moment(s).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(s).minutes() * BASE_SIZE * self.zoom / 60 + 'px',\n              width: self.zoom * self.SLIDER_WIDTH * r.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              top: event.style.top,\n              height: event.style.height,\n              totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n              'text-align': 'center',\n              color: '#fff',\n              'background': 'repeating-linear-gradient(45deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n              'border-top': '1px lightgrey solid',\n              'border-bottom': '1px lightgrey solid',\n              'border-left': '1px lightgrey solid'\n            },\n            tooltip: 'Trajet estimé de ' + event.pre + ' min'\n          };\n          if (percentage > 0) {\n            self.preEvent[event.id] = obj;\n          } else {\n            event.pre = 0;\n          }\n        }\n        generatePostEvent(event);\n        if (event.pauses) {\n          event.style['background-image'] = PauseService.generateGradient(event, 'to bottom');\n          event.style['background-color'] = undefined;\n        }\n        var pre = self.preEvent[event.id];\n        var post = self.postEvent[event.id];\n        event.style.totalWidth = safeParse(event.style.width) + safeParse(_.get(pre, 'style.width')) + safeParse(_.get(post, 'style.width')) + 1 + 'px';\n        currentId++;\n      });\n      if (self.pauses) {\n        createBreaks();\n      }\n      calculateContainerHeight();\n\n      $scope.$on('$destroy', function () {\n        $rootScope.$broadcast('context-menu/close');\n      });\n    }\n\n    function safeParse() {\n      var width = arguments.length <= 0 || arguments[0] === undefined ? '0px' : arguments[0];\n\n      return parseInt(width.replace('px', ''));\n    }\n\n    function generatePostEvent(event) {\n      if (!event.post) {\n        return null;\n      }\n      var end = moment(event.end).add(event.post, 'minutes');\n      if (!moment(end).isSame(event.end, 'day')) {\n        end = moment(event.end).endOf('day');\n      }\n      var start = moment(event.end);\n      var range = moment.range(start, end);\n      var totalRange = moment.range(event.range.start, event.range.end);\n      var percentage = range.valueOf() / totalRange.valueOf() * 100;\n      event.postPercentage = 100 - percentage + '%';\n      var obj = {\n        percentage: percentage + '%',\n        style: {\n          left: (moment(start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(start).minutes() * BASE_SIZE * self.zoom / 60 + 2 + 'px',\n          width: self.zoom * self.SLIDER_WIDTH * range.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          top: event.style.top,\n          height: event.style.height,\n          totalWidth: self.zoom * self.SLIDER_WIDTH * totalRange.valueOf() / self.SECONDS_BY_DAY / 1000 + 'px',\n          'text-align': 'center',\n          color: '#fff',\n          'background': 'repeating-linear-gradient(135deg, ' + event['background-color'] + ', ' + event['background-color'] + ' 10px, white 10px, white 20px)',\n          'border-top': '1px lightgrey solid',\n          'border-bottom': '1px lightgrey solid',\n          'border-left': '1px lightgrey solid'\n        },\n        tooltip: 'Trajet retour de ' + event.post + ' min'\n      };\n      if (percentage > 0) {\n        self.postEvent[event.id] = obj;\n      } else {\n        event.post = 0;\n      }\n    }\n\n    function calcWidth(zoom) {\n      return parseInt(zoom) * BASE_SIZE + 'px';\n    }\n\n    function createBreaks() {\n      self.breaks = _.compact(_.map(self.pauses.breaks, function (p) {\n        var pause = {\n          name: p.name,\n          start: moment().hours(p.start.split(':')[0]).minute(p.start.split(':')[1]).second(0),\n          end: moment().hours(p.end.split(':')[0]).minute(p.end.split(':')[1]).second(0),\n          style: {}\n        };\n\n        if (pause.start.isAfter(self.dayEnd) || pause.end.isBefore(self.dayStart)) {\n          return;\n        }\n        if (pause.start.isBefore(self.dayStart)) {\n          pause.start = moment(angular.copy(self.dayStart));\n        }\n\n        if (pause.end.isAfter(self.dayEnd)) {\n          pause.end = moment(angular.copy(self.dayEnd));\n        }\n\n        pause.style.top = (moment(pause.start).hours() - self.dayStart.h) * BASE_SIZE * self.zoom + moment(pause.start).minutes() * BASE_SIZE * self.zoom / 60 + 'px';\n        pause.style.height = self.zoom * self.SLIDER_WIDTH * moment.range(pause.start, pause.end).valueOf() / self.SECONDS_BY_DAY / 1000 + 'px';\n\n        return pause;\n      }));\n    }\n\n    function calculateContainerHeight() {\n      self.containerHeight = parseInt(self.zoom) * BASE_SIZE * $filter('range')(self.range) + 'px';\n    }\n\n    function checkAbsence(date) {\n      var d = moment(angular.copy(date));\n      return _.any(self._absences, function (abs) {\n        return abs.range.contains(d);\n      });\n    }\n\n    function checkFerie(date) {\n      return self.holidays.find(function (holiday) {\n        return moment(holiday.date).format('L') === moment(date).format('L');\n      });\n    }\n  }\n\n  function PlanningLineDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: '/directives/planning-vertical-line/planning-vertical-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        zoom: '=',\n        dayStart: '=',\n        dayEnd: '=',\n        events: '=',\n        pauses: '=?',\n        day: '=',\n        absences: '=?',\n        holidays: '=?',\n        clickCallback: '&',\n        dropCallback: '&'\n      },\n      scope: true\n    };\n  }\n})(window.angular, window._, window.moment);\n\n",";(function (angular, moment, _) {\n  'use strict'\n\n  angular\n    .module('90Tech.planning')\n    .directive('zlPlanningWeekLine', PlanningLineDirective)\n\n  PlanningLineController.$inject = ['$scope', 'PositionService', 'planningConfiguration', 'ColorService']\n\n  /**\n   *\n   */\n  function PlanningLineController ($scope, PositionService, planningConfiguration, ColorService) {\n    var self = this\n\n    self.$onInit = function () {\n      _.extend(self, {\n        calculateWidth: calculateWidth,\n        calculateLeft: calculateLeft\n      })\n\n      init()\n\n      $scope.$watchCollection(function () {\n        return [self.events, self.week]\n      }, init)\n\n    }\n\n    var parallelText = planningConfiguration.parallelText\n    var MAX_PARALLEL = planningConfiguration.MAX_PARALLEL\n\n    function init () {\n      self.displayedEvents = _(self.events).sortBy(function (event) {\n        return event.continuedBefore ? -1 : (event.continuedAfter ? 0 : 1) // Order event list\n      }).value()\n\n      self.displayedEvents = positioning(self.displayedEvents)\n      self.oneDayEvents = positioning(self.oneDayEvents)\n    }\n\n\n\n    function positioning (eventList) {\n      var lines = [[]]\n      var toRemove = []\n      _.each(eventList, function (event) {\n        event.style = {}\n        event.depth = 1\n        event.range = moment.range(event.start, event.end)\n        PositionService.overlap(lines, event, MAX_PARALLEL, toRemove, true)\n      })\n      eventList = _.difference(eventList, toRemove)\n      _.each(eventList, function (event) {\n        setStyle(event, lines.length)\n      })\n      return eventList\n    }\n\n    function setStyle (event, height) {\n      event.style.left = calculateLeft(event)\n      event.style.width = calculateWidth(event)\n      event.style['background-color'] = event['background-color']\n      if (ColorService.getLuminance(event.style['background-color'])> 200){\n        event.style.color = 'black'\n      } else{\n        event.style.color = 'white'\n      }\n\n      event.style.top = Math.ceil((event.line) * 100 / height) + '%'\n      event.style.height = Math.round(100 / height) + '%'\n      if (event.line === undefined) event.line = MAX_PARALLEL\n      if (event.eventList && event.eventList.length > 1) {\n        event.style['background-color'] = '#000'\n        event.style['color'] = '#FFF'\n        event.style['font-weight'] = 'bold'\n        event.title = (event.eventList.length) + ' ' + parallelText\n        if (event.tooltip) event.tooltip = event.title\n      }\n    }\n\n\n    function calculateWidth (event) {\n      if (event.start.day() === event.end.day()) {\n        return (event.end.diff(event.start, 'days') + 1) * (100 / 7) + '%'\n      } else {\n        var diff = Math.ceil(event.end.diff(event.start, 'hours') / 24)\n        if (event.end.hours() < event.start.hours()) {\n          diff += 1\n        }\n        return (diff * (100 / 7)) + '%'\n      }\n    }\n\n    function calculateLeft (event) {\n      return ((event.start.isoWeekday() - 1)) * (99.9 / 7) + '%'\n    }\n\n\n  }\n\n  function PlanningLineDirective () {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: '/directives/planning-week-line/planning-week-line.html',\n      controller: PlanningLineController,\n      controllerAs: 'line',\n      bindToController: {\n        events: '=',\n        week: '=',\n        oneDayEvents: '=',\n        weekEventCallback: '&'\n      },\n      scope: true\n    }\n  }\n})(window.angular, window.moment, window._)\n","angular.module('90Tech.planning').run(['$templateCache', function($templateCache) {$templateCache.put('/templates/planning-context-menu.html','<ul class=\"dropdown-menu context-menu\" ng-click=$event.stopPropagation(); style=\"z-index: 10\"><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.action({$element: event || ev})\"><i class=\"mdi mdi-chevron-down\"></i> Ouvrir dans un nouvel onglet {{event.eventList.length}}</a></li><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.duplicateAction({$element: event || ev})\"><i class=\"mdi mdi-chevron-down\"></i> Dupliquer l\\'intervention {{event.eventList.length}}</a></li></ul>');\n$templateCache.put('/templates/planning-line-context-menu.html','<ul class=\"dropdown-menu context-menu\" ng-click=$event.stopPropagation(); style=\"z-index: 10\"><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.dayEvent(line._events, false)\"><i class=\"mdi mdi-chevron-down\"></i> Dupliquer la journ\\xE9e {{event.eventList.length}}</a></li><li ng-if=\"!event.eventList.length && !ev.eventList.length\"><a ng-click=\"planning.dayEvent(line._events, true)\"><i class=\"mdi mdi-chevron-down\"></i> D\\xE9placer la journ\\xE9e {{event.eventList.length}}</a></li></ul>');\n$templateCache.put('/directives/planning/planning.html','<div ng-if=\"planning.mode ===\\'day\\' || planning.mode === \\'week\\'\" style=\"height: 100%;\"><zl-planning-left-column mode=planning.mode position=planning.position day-field=planning.dayField entities-name=planning.entitiesName , usable-days=planning.allowedDays day-event=planning.dayEvent move-action=planning.moveAction show-absences-callback=\"planning.showAbsencesCallBackWrapper({absences: absences, day: day})\" events=planning.sortedEvents absences=planning.absences is-ferie=planning.isFerie(planning.position)></zl-planning-left-column><div class style=height:100%><div zl-horizontal-scroll scroll-left=planning.currentTimeToPixels() style=height:100%><div ng-style=\"{width: planning.width}\" class=planning-body><zl-planning-top-row mode=planning.mode zoom=planning.zoom position=planning.position holidays=planning.holidays day-start=planning._dayStart day-end=planning._dayEnd></zl-planning-top-row><div class=hour-cursor ng-style=\"{left: planning.currentTimeToPixels()+\\'px\\'}\" ng-if=\"planning.isCurrent() && planning.isInDayRange()\"><div class=hour-caret></div></div><div ng-if=planning.isFerie(planning.position)></div><div class=planning-2pc ng-class=\"{ isFerie: (planning.mode === \\'day\\' && planning.isFerie(planning.position)), isSolidarityDay: (planning.mode === \\'day\\' && planning.isSolidarityDay(planning.position))}\"></div><zl-planning-line ng-if=\"planning.mode === \\'day\\'\" zoom=planning.zoom absences=planning.absences[i] position=planning.position day-start=planning._dayStart day-end=planning._dayEnd ng-repeat=\"i in planning.keys(planning.sortedEvents)\" class=\"day b-b\" ng-class=\"{today: planning.isToday(i)}\" events=planning.getEvents(i) pauses=planning.entitiesPauses[i][0] holidays=planning.holidays drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: i, entity: i, $data: $data, $event: $event})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: i, entity: i})\"></zl-planning-line><zl-planning-line ng-if=\"planning.mode === \\'week\\'\" zoom=planning.zoom ng-repeat=\"day in planning.usableDays\" position=planning.position entities=planning.entities day-of-week=planning.daysList[day] mode=planning.mode holidays=planning.holidays day-start=planning._dayStart day-end=planning._dayEnd class=\"day b-b\" ng-class=\"{today: planning.isToday(planning.keys(planning.sortedEvents)[day])}\" events=planning.getEvents(planning.keys(planning.sortedEvents)[day]) drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: planning.keys(planning.sortedEvents)[day], entity: planning.keys(planning.sortedEvents)[day], $data: $data, $event: $event})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: planning.keys(planning.sortedEvents)[day], entity: planning.keys(planning.sortedEvents)[day]})\"></zl-planning-line></div></div></div></div><div ng-if=\"planning.mode === \\'3day\\'\" style=\"height: 100%;\"><zl-planning-left-column mode=\"\\'day\\'\" three-days=true position=planning.position entities-name=planning.entitiesName day-field=planning.dayField usable-days=planning.allowedDays events=planning.sortedEvents></zl-planning-left-column><div style=\"height: 100%; display: flex; flex-flow: row nowrap;\" zl-horizontal-scroll><div style=height:100%; ng-repeat=\"day in planning.groupedEvents track by $index\"><div style=\"height:100%; display: inline-block;\"><div ng-style=\"{width: planning.width}\" class=planning-body><zl-planning-top-row mode=\"\\'day\\'\" zoom=planning.zoom position=planning.position day-start=planning._dayStart day-end=planning._dayEnd></zl-planning-top-row><p style=\"position: absolute; top: 27px; font-size: 1.4em; font-weight: bold; width: 100%; padding-left: 5px;\" ng-class=\"{isFerie: planning.isFerie(day.date), isSolidarityDay: planning.isSolidarityDay(day.date)}\">{{day.day}} <span class=holidays ng-if=planning.isFerie(day.date)>f\\xE9ri\\xE9</span> <span class=solidarityDay ng-if=planning.isSolidarityDay(day.date)>Journ\\xE9e de solidarit\\xE9</span></p><div class=hour-cursor ng-style=\"{left: planning.currentTimeToPixels()+\\'px\\'}\" ng-if=\"planning.isCurrent() && planning.isInDayRange()\"><div class=hour-caret></div></div><div class=planning-2pc></div><zl-planning-line zoom=planning.zoom position=day.date absences=day.absences[i] day-start=planning._dayStart day-end=planning._dayEnd ng-repeat=\"i in planning.keys(day.value) track by $index\" class=\"day b-b\" events=day.value[i] pauses=planning.entitiesPauses[i][$parent.$index] holidays=planning.holidays drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d: i, entity: i, $data: $data, $event: $event, day: day.key})\" click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: i, entity: i})\" is-solidarity-day=planning.isSolidarityDay></zl-planning-line></div></div></div></div></div><div ng-if=\"planning.mode ===\\'week-advanced\\'\" class=advanced-week><div class=days-list><div class=day-advanced>&nbsp;</div><div class=day-advanced ng-repeat=\"day in planning.daysList\" ng-click=planning.dayCallback({$day:day}) ng-class=\"{isFerie: planning.isFerie(day), isSolidarityDay: planning.isSolidarityDay(day)}\"><span class=day-text>{{day | format:\\'dddd\\' | capitalize}}<br><small>{{day | format:\\'ll\\'}}</small> <span class=holidays ng-if=planning.isFerie(day)>f\\xE9ri\\xE9</span> <span class=solidarityDay ng-if=planning.isSolidarityDay(day)>Journ\\xE9e de solidarit\\xE9</span></span></div></div><div class=advanced-week-container ng-repeat=\"name in planning.keys(planning.sortedEvents)\"><div class=left-column-advanced><span style=margin:auto>{{planning.getName(name)}}</span></div><div ng-repeat=\"day in planning.allowedDays\" style=\"overflow: hidden;\" class=day-advanced><zl-planning-vertical-line day=planning.daysList[$index] zoom=planning.zoom drop-callback=\"planning.dropEvent({h: $hour, m: $minutes, d:day, entity: name, $data: $data, $event: $event})\" day-start=planning._dayStart day-end=planning._dayEnd events=planning.getEvents(name)[day] pauses=planning.entitiesPauses[name][$index] absences=planning.absences[name] holidays=planning.holidays click-callback=\"planning.clickCallbackWrapper({h: $hour, m: $minutes, d: day, entity: name})\" is-solidarity-day-scoped=planning.isSolidarityDay></zl-planning-vertical-line></div></div></div><div ng-if=\"planning.mode === \\'month\\'\" style=\"height: 100%; z-index: 1000;\"><div class=month-header><span class=month-text>{{planning.month | capitalize}}</span></div><div class=day-header><div class=day ng-repeat=\"day in []|range:7\"><span class=day-text>{{day | day}}</span></div></div><div class=month-container><zl-planning-day ng-repeat=\"day in planning.days\" day=day events=planning._events absences=planning.absences drop-callback=\"planning.dropEvent({$data: $data, $event: $event, moment: day.date})\" entities=planning.entitiesName ng-dblclick=\"planning.clickWeekEvent(day, $event)\" holidays=planning.holidays></zl-planning-day><zl-planning-week-line ng-repeat=\"(week, events) in planning.multipleDaysEvents\" events=events week=week one-day-events=planning.oneDayEvents[week] style=\"height: 20%; pointer-events: none\"></zl-planning-week-line></div></div>');\n$templateCache.put('/directives/planning-day-block/planning-day.html','<div class=day-block ng-class=\"{\\'empty-day\\': dayCtrl.isDefined }\" ng-click=planning.dayCallback({$day:dayCtrl.day.date})><div style=position:absolute;left:5px;top:5px; ng-if=\"dayCtrl.day.date.day() === 1\">{{dayCtrl.day.date.week()}}</div><div class=day-number>{{ dayCtrl.day.date.date() }}</div><span ng-if=dayCtrl.isFerie class=holidays>f\\xE9ri\\xE9</span> <span class=solidarityDay ng-if=dayCtrl.isSolidarityDay(day.date)>Journ\\xE9e de solidarit\\xE9</span><div class=events-container><div ng-style=\"{\\'background-color\\': event.color}\" class=month-event ng-repeat=\"event in dayCtrl.day.events |limitTo:5\">{{event.title}}</div></div><div class=absents-container tooltip-append-to-body=true ng-if=dayCtrl.absents.length uib-tooltip-html=dayCtrl.absentsString>{{dayCtrl.absents.length}} absent(s)</div></div>');\n$templateCache.put('/directives/planning-left-column/planning-left-column.html','<div class=\"left-column planning-left-column\" ng-switch=planningLeftColumn.mode><div class=planning-head></div><div class=left-body><div class=planning-2pc><span class=holidays ng-if=\"planningLeftColumn.isFerie && !planningLeftColumn.isSolidarityDay(planningLeftColumn.position) && (planningLeftColumn.mode === \\'day\\' || planningLeftColumn.mode === \\'3days\\')\">F\\xE9ri\\xE9</span> <span class=solidarityDay style=margin-top:1px!important; ng-if=\"planningLeftColumn.isSolidarityDay(planningLeftColumn.position) && (planningLeftColumn.mode === \\'day\\' || planningLeftColumn.mode === \\'3days\\')\">Journ\\xE9e de solidarit\\xE9</span></div><div class=days-body ng-switch-when=week><div class=\"dayName row8 b-b animate\" ng-repeat=\"day in planningLeftColumn.days track by $index\" ng-class=\"{today: (planning.isToday(day.dayOfYear())), isFerie: planning.isFerie(day)}\" ng-click=planning.dayCallback({$day:day})><h4>{{day | format:\\'dddd\\' | capitalize}}<br><small>{{day | format:\\'ll\\'}}<span class=holidays ng-if=planning.isFerie(day)>f\\xE9ri\\xE9</span></small></h4><div ng-click=$event.stopPropagation() class=day-absence ng-if=planningLeftColumn._absences[$index].length><div class=absents-container ng-click=\"planning.showAbsencesCallBackWrapper(planningLeftColumn._absences, $index)\">{{ planningLeftColumn._absences[$index].length }} absent(s)</div></div></div></div><div class=days-body ng-switch-when=day><div class=\"dayName dayNameDuplication row8 b-b animate\" ng-if=planningLeftColumn.activateDuplicationButtons uib-popover-template=\"\\'planningDayPopOver.html\\'\" popover-placement=right ng-repeat=\"tech in planningLeftColumn.column\"><h4 class=techname>{{tech.fullname || \\'\\'}}</h4></div><div class=\"dayName row8 b-b animate\" ng-if=!planningLeftColumn.activateDuplicationButtons uib-popover-template=\"\\'planningDayPopOver.html\\'\" popover-placement=right ng-repeat=\"tech in planningLeftColumn.column\"><h4 class=techname>{{tech.fullname || \\'\\'}}</h4></div></div></div><script type=text/ng-template id=planningDayPopOver.html><button ng-if=\"planningLeftColumn.activateDuplicationButtons\" class=\"btn btn-primary\" style=\"width: 100%; margin-bottom: 5px;\" ng-click=\\'planningLeftColumn.triggerDayEvent(tech)\\'>Dupliquer la journ\\xE9e</button> <button ng-if=\"planningLeftColumn.activateDuplicationButtons\" class=\"btn btn-primary\" style=\"width: 100%;\" ng-click=\\'planningLeftColumn.triggerDayEvent(tech, true)\\'>D\\xE9placer la journ\\xE9e</button></script><div style=height:10px></div></div>');\n$templateCache.put('/directives/planning-line/planning-line.html','<div ng-style=\"{height: line.containerHeight}\"><div style=\"position: absolute; height: 100%; width: 100%; z-index: 1\" zl-planning-drag-drop zl-drop=\"line.dropEvent($data, $event, line)\"><div class=\"b-b b-r all-day day-hour\" ng-dblclick=\"line.clickEvent(n, $event, line)\" ng-mouseleave=line.leaveAbsence() uib-tooltip={{line.tooltip}} tooltip-append-to-body=true tooltip-placement=top ng-style=\"{width: line.calcWidth(line.zoom)}\" ng-repeat=\"n in [] | range:line.range\" hour={{n}}><span class=half-hour></span></div></div><div ng-repeat=\"absence in line._absences track by $index\" ng-mouseenter=line.hoverAbsence(absence) id={{absence._id}} class=\"{{absence.class}} absence {{absence._id}}\" tooltip-append-to-body=true tooltip-placement=top uib-tooltip={{absence.tooltip}} data-html=true style=\"height: 100%\" ng-style=absence.style></div><div ng-repeat=\"event in line._events\" zl-planning-drag-drop ng-click=\"planning.eventCallback({\\'event\\':event})\" zl-drag=event ng-style=\"{ height: event.style.height, top: event.style.top, width: event.style.totalWidth, left: event.pre > 0 ? line.preEvent[event.id].style.left : event.style.left }\" style=\"position: absolute; z-index: 3; display: flex; flex-flow: row nowrap\"><div ng-if=\"event.pre > 0\" ng-style=\"{width: line.preEvent[event.id].style.width, \\'background\\': line.preEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; height: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.preEvent[event.id].tooltip}}><div class=title-container><span><i style=\"height: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div><div class=event style=\"display: inline-block; position: relative; height: 100%;\" data-context-menu=/templates/planning-context-menu.html tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip ng-style=\"{ width: event.style.width, background: event.style[\\'background-color\\'], \\'background-image\\': event.style[\\'background-image\\'], color: event.style.color, \\'border-left\\': event.pre > 0 ? \\'none\\': \\'\\' }\"><div class=event-line-container style><div class=event-line ng-style=\"{\\'background-color\\': event.color}\" ng-if=!event.continuedBefore></div></div><div class=title-container><span>{{event.title}}</span></div></div><div ng-if=\"event.post > 0\" ng-style=\"{width: line.postEvent[event.id].style.width, \\'background\\': line.postEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; height: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.postEvent[event.id].tooltip}}><div class=title-container><span><i style=\"height: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div></div><div ng-repeat=\"pause in line.breaks track by $index\" class=planning-pause-element style=\"height: 100%;\" ng-style=pause.style></div></div>');\n$templateCache.put('/directives/planning-vertical-line/planning-vertical-line.html','<div ng-style=\"{height: line.containerHeight}\" data-context-menu=/templates/planning-line-context-menu.html><div ng-if=!line._absences style=\"position: absolute; height: 100%; width: 100%; z-index: 1\" ng-mouseleave=line.leaveLine()><div ng-repeat=\"n in [] | range: line.range\" style=\"display: flex; z-index: 1\"><div style=\"display: flex; align-items: flex-end;\"><span class=hour-text>{{n + 1 + line.dayStart.h}}</span></div><div style=\"width: 100%;\" class=\"b-b b-r all-day\" ng-style=\"{height: line.calcWidth(line.zoom)}\" ng-dblclick=\"line.clickEvent(n, $event, line.day)\" hour=\"{{n + line.dayStart.h}}\" zl-planning-drag-drop zl-drop=\"line.dropEvent($data, $event, line.day)\"></div></div></div><div ng-if=line._absences tooltip-append-to-body=true tooltip-placement=top tooltip-classes=absence-tooltip uib-tooltip={{line._absences[0].tooltip}} style=\"position: absolute; height: 100%; width: 100%; z-index: 1\" ng-mouseleave=line.leaveLine()><div ng-repeat=\"n in [] | range: line.range\" style=\"display: flex; z-index: 1\"><div style=\"display: flex; align-items: flex-end;\"><span class=hour-text>{{n + 1 + line.dayStart.h}}</span></div><div style=\"width: 100%;\" class=\"b-b b-r all-day\" ng-style=\"{height: line.calcWidth(line.zoom)}\" ng-dblclick=\"line.clickEvent(n, $event, line.day)\" hour=\"{{n + line.dayStart.h}}\" zl-planning-drag-drop zl-drop=\"line.dropEvent($data, $event, line.day)\"></div></div></div><div ng-repeat=\"event in line._events\" zl-planning-drag-drop ng-click=\"planning.eventCallback({\\'event\\':event})\" zl-drag=event ng-style=\"{ width: event.style.height, right: event.style.top, height: event.pre > 0 ? line.preEvent[event.id].style.totalWidth : event.style.width, top: event.pre > 0 ? line.preEvent[event.id].style.left : event.style.left }\" style=\"position: absolute; z-index: 2;\"><div ng-if=\"event.pre > 0\" ng-style=\"{height: line.preEvent[event.id].style.width, \\'background\\': line.preEvent[event.id].style[\\'background\\']}\" style=\"display: flex; position: relative; width: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.preEvent[event.id].tooltip}}><div class=title-container><span><i style=\"width: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div><div class=event style=\"display: flex; position: relative; width: 100%;\" tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip data-context-menu=/templates/planning-context-menu.html ng-style=\"{ height: event.style.width, overflow: \\'hidden\\', \\'background-image\\': event.style[\\'background-image\\'], background: event.style[\\'background-color\\'], color: event.style.color, \\'border-left\\': event.pre > 0 ? \\'none\\': \\'\\' }\"><div class=event-line-container style><div class=event-line ng-style=\"{\\'background-color\\': event.color}\"></div></div><div class=title-container><span>{{event.title}}</span></div></div><div ng-if=\"event.post > 0\" ng-style=\"{height: line.postEvent[event.id].style.width, \\'background\\': line.postEvent[event.id].style[\\'background\\']}\" style=\"display: inline-block; position: relative; width: 100%; text-align: center; color: white; border: 1px lightgrey solid; border-right: none;\" class=pre-event tooltip-append-to-body=true uib-tooltip={{line.postEvent[event.id].tooltip}}><div class=title-container><span><i style=\"width: 100%; font-size: 1.2em;\" class=\"mdi mdi-car\"></i></span></div></div></div><div ng-repeat=\"pause in line.breaks track by $index\" class=planning-pause-element style=\"width: 95%; left: 5%;\" ng-style=pause.style></div><div ng-repeat=\"absence in line._absences track by $index\" id={{absence._id}} class=\"{{absence.class}} absence {{absence._id}}\" style=\"width: 95%; left: 5%;\" ng-style=absence.style></div></div>');\n$templateCache.put('/directives/planning-top-row/planning-top-row.html','<div class=planning-top-row><div ng-repeat=\"hour in planningTopRow.hours\" class=day-hour ng-style=\"{width: planningTopRow.calcWidth(planningTopRow.zoom), margin: planningTopRow.calcMargin(planningTopRow.zoom, $index)}\"><h4>{{hour | format:\\'HH:mm\\'}}</h4></div></div>');\n$templateCache.put('/directives/planning-week-line/planning-week-line.html','<div class=week-line ng-class=\"\\'week-\\' + line.week\" style=padding-top:20px;><div class=single-day-events style=\"height:40%; position:relative;\"><div zl-planning-drag-drop zl-drag=ev ng-repeat=\"ev in line.oneDayEvents\" ng-style=\"{\\'top\\': ev.style.top, \\'height\\': ev.style.height, \\'background-color\\': ev.style[\\'background-color\\'], \\'color\\' : ev.style.color, \\'width\\': ev.style.width, \\'left\\': ev.style.left}\" style=\"position:absolute;border: 1px solid black;pointer-events: auto; overflow: hidden;\" ng-click=\"planning.weekEventCallback({event: ev})\" tooltip-append-to-body=true tooltip-placement=\"{{ev.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!ev.tooltipTemplate ? ev.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + ev.tooltipTemplate}}\" tooltip-class=planning-event-tooltip class=single-day-event><div class=event-line-container><div class=event-line ng-style=\"{\\'background-color\\': ev.color}\" ng-if=!ev.continuedBefore></div></div><div class=single-day-event-title data-context-menu=/templates/planning-context-menu.html><span>{{ev.title}}</span></div></div></div><div class=multiple-days-events style=\"height:40%; position: relative;\"><div class=multiple-day-event ng-repeat=\"event in line.displayedEvents\" style=\"position: absolute; border: 1px solid black;pointer-events: auto; overflow: hidden;\" zl-planning-drag-drop zl-drag=event ng-click=\"planning.weekEventCallback({event: event})\" tooltip-append-to-body=true tooltip-placement=\"{{event.tooltipTemplate? \\'auto\\': \\'top\\'}}\" ng-attr-uib-tooltip=\"{{!event.tooltipTemplate ? event.tooltip : undefined}}\" ng-attr-uib-tooltip-template=\"{{\\'\\' + event.tooltipTemplate}}\" tooltip-class=planning-event-tooltip ng-style=\"{\\'top\\': event.style.top, \\'height\\': event.style.height, \\'background-color\\': event.style[\\'background-color\\'], \\'color\\' : event.style.color, \\'width\\': event.style.width, \\'left\\': event.style.left}\"><div class=event-line-container><div class=event-line ng-style=\"{\\'background-color\\': event.color}\" ng-if=!event.continuedBefore></div></div><div class=multiple-day-event-title data-context-menu=/templates/planning-context-menu.html><span>{{event.title}}</span></div></div></div></div>');}]);"]}